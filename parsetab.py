
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'right=leftEQGTLTGTEQLTEQleft+-DOTADDDOTSUBleft*/DOTMULDOTDIVright\'-ADDASSIGN BREAK COMMENT CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQ EYE FLOATNUM FOR GT GTEQ ID IF INTNUM LT LTEQ MULASSIGN NOTEQ ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROSstart : statementsstatement : instructioninstruction : IF \'(\' expression \')\' statement\n                   | IF \'(\' expression \')\' statement ELSE statementinstruction : WHILE \'(\' expression \')\' statementexpression : RETURN expressioninstruction : FOR ID \'=\' range statementstatements : statement\n                  | statements statementstatement : expression \';\'statement : \'{\' statements \'}\'statement : PRINT expressions \';\'expressions : expression\n                   | expressions \',\' expressionexpression : \'[\' minit \']\'\n                  | \'[\' \']\'minit : mrow \';\'\n             | mrow\n             | \'[\' mrow \']\' \',\'\n             | \'[\' mrow \']\'\n             | mrow \';\' minit\n             | \'[\' mrow \']\' \',\' minitmrow : number\n            | number \',\' mrownumber : INTNUMnumber : FLOATNUMexpression : assignable \'=\' expressionexpression : \'-\' expressionexpression : expression "\'"expression : assignable ADDASSIGN expression\n                  | assignable SUBASSIGN expression\n                  | assignable MULASSIGN expression\n                  | assignable DIVASSIGN expressionexpression : expression \'+\' expression\n                  | expression \'-\' expression\n                  | expression DOTADD expression\n                  | expression DOTSUB expressionexpression : expression \'*\' expression\n                  | expression \'/\' expression\n                  | expression DOTMUL expression\n                  | expression DOTDIV expressionexpression : expression EQ expression\n                  | expression NOTEQ expression\n                  | expression GT expression\n                  | expression LT expression\n                  | expression GTEQ expression\n                  | expression LTEQ expressionnumbers : number\n               | numbers \',\' numberexpression : ZEROS \'(\' numbers \')\'\n                  | ONES \'(\' numbers \')\'\n                  | EYE \'(\' numbers \')\'expression : numberexpression : STRINGexpression : assignableassignable : IDassignable : matrixcellgettermatrixcellgetter : ID \'[\' INTNUM \',\' INTNUM \']\'expression : \'(\' expression \')\'expression : BREAKexpression : CONTINUEexpression : rangerange : expression \':\' expression'
    
_lr_action_items = {'{':([0,2,3,4,6,12,13,16,21,22,23,24,25,26,27,28,29,30,46,54,57,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,88,93,96,97,98,99,100,106,107,108,114,116,117,118,119,120,124,125,127,],[6,6,-8,-2,6,-56,-62,-55,-53,-54,-60,-61,-57,-25,-26,-9,-10,-29,6,-6,-16,-28,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-63,-11,-12,-59,-15,-27,-30,-31,-32,-33,6,6,6,-50,-51,-52,-3,-5,-7,6,-58,-4,]),'PRINT':([0,2,3,4,6,12,13,16,21,22,23,24,25,26,27,28,29,30,46,54,57,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,88,93,96,97,98,99,100,106,107,108,114,116,117,118,119,120,124,125,127,],[7,7,-8,-2,7,-56,-62,-55,-53,-54,-60,-61,-57,-25,-26,-9,-10,-29,7,-6,-16,-28,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-63,-11,-12,-59,-15,-27,-30,-31,-32,-33,7,7,7,-50,-51,-52,-3,-5,-7,7,-58,-4,]),'IF':([0,2,3,4,6,12,13,16,21,22,23,24,25,26,27,28,29,30,46,54,57,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,88,93,96,97,98,99,100,106,107,108,114,116,117,118,119,120,124,125,127,],[8,8,-8,-2,8,-56,-62,-55,-53,-54,-60,-61,-57,-25,-26,-9,-10,-29,8,-6,-16,-28,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-63,-11,-12,-59,-15,-27,-30,-31,-32,-33,8,8,8,-50,-51,-52,-3,-5,-7,8,-58,-4,]),'WHILE':([0,2,3,4,6,12,13,16,21,22,23,24,25,26,27,28,29,30,46,54,57,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,88,93,96,97,98,99,100,106,107,108,114,116,117,118,119,120,124,125,127,],[10,10,-8,-2,10,-56,-62,-55,-53,-54,-60,-61,-57,-25,-26,-9,-10,-29,10,-6,-16,-28,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-63,-11,-12,-59,-15,-27,-30,-31,-32,-33,10,10,10,-50,-51,-52,-3,-5,-7,10,-58,-4,]),'FOR':([0,2,3,4,6,12,13,16,21,22,23,24,25,26,27,28,29,30,46,54,57,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,88,93,96,97,98,99,100,106,107,108,114,116,117,118,119,120,124,125,127,],[11,11,-8,-2,11,-56,-62,-55,-53,-54,-60,-61,-57,-25,-26,-9,-10,-29,11,-6,-16,-28,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-63,-11,-12,-59,-15,-27,-30,-31,-32,-33,11,11,11,-50,-51,-52,-3,-5,-7,11,-58,-4,]),'RETURN':([0,2,3,4,6,7,9,12,13,14,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,54,57,60,61,62,63,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,90,93,96,97,98,99,100,106,107,108,114,116,117,118,119,120,124,125,127,],[14,14,-8,-2,14,14,14,-56,-62,14,-55,14,-53,-54,-60,-61,-57,-25,-26,-9,-10,-29,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-6,-16,14,14,14,14,14,-28,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-63,-11,-12,14,-59,14,-15,-27,-30,-31,-32,-33,14,14,14,-50,-51,-52,-3,-5,-7,14,-58,-4,]),'[':([0,2,3,4,6,7,9,12,13,14,15,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,54,57,60,61,62,63,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,90,93,94,96,97,98,99,100,106,107,108,114,116,117,118,119,120,122,124,125,127,],[15,15,-8,-2,15,15,15,53,-62,15,55,-55,15,-53,-54,-60,-61,-57,-25,-26,-9,-10,-29,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-6,-16,15,15,15,15,15,-28,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-63,-11,-12,15,-59,15,-15,55,-27,-30,-31,-32,-33,15,15,15,-50,-51,-52,-3,-5,-7,55,15,-58,-4,]),'-':([0,2,3,4,5,6,7,9,12,13,14,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,50,51,54,57,60,61,62,63,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,96,97,98,99,100,105,106,107,108,109,114,116,117,118,119,120,124,125,127,],[17,17,-8,-2,32,17,17,17,-56,-62,17,-55,17,-53,-54,-60,-61,-57,-25,-26,-9,-10,-29,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,32,17,32,17,32,-16,17,17,17,17,17,-28,-34,-35,-36,-37,-38,-39,-40,-41,32,32,32,32,32,32,32,-11,-12,17,32,-59,32,17,-15,32,32,32,32,32,32,17,17,17,32,-50,-51,-52,-3,-5,-7,17,-58,-4,]),'ZEROS':([0,2,3,4,6,7,9,12,13,14,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,54,57,60,61,62,63,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,90,93,96,97,98,99,100,106,107,108,114,116,117,118,119,120,124,125,127,],[18,18,-8,-2,18,18,18,-56,-62,18,-55,18,-53,-54,-60,-61,-57,-25,-26,-9,-10,-29,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-6,-16,18,18,18,18,18,-28,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-63,-11,-12,18,-59,18,-15,-27,-30,-31,-32,-33,18,18,18,-50,-51,-52,-3,-5,-7,18,-58,-4,]),'ONES':([0,2,3,4,6,7,9,12,13,14,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,54,57,60,61,62,63,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,90,93,96,97,98,99,100,106,107,108,114,116,117,118,119,120,124,125,127,],[19,19,-8,-2,19,19,19,-56,-62,19,-55,19,-53,-54,-60,-61,-57,-25,-26,-9,-10,-29,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-6,-16,19,19,19,19,19,-28,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-63,-11,-12,19,-59,19,-15,-27,-30,-31,-32,-33,19,19,19,-50,-51,-52,-3,-5,-7,19,-58,-4,]),'EYE':([0,2,3,4,6,7,9,12,13,14,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,54,57,60,61,62,63,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,90,93,96,97,98,99,100,106,107,108,114,116,117,118,119,120,124,125,127,],[20,20,-8,-2,20,20,20,-56,-62,20,-55,20,-53,-54,-60,-61,-57,-25,-26,-9,-10,-29,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-6,-16,20,20,20,20,20,-28,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-63,-11,-12,20,-59,20,-15,-27,-30,-31,-32,-33,20,20,20,-50,-51,-52,-3,-5,-7,20,-58,-4,]),'STRING':([0,2,3,4,6,7,9,12,13,14,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,54,57,60,61,62,63,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,90,93,96,97,98,99,100,106,107,108,114,116,117,118,119,120,124,125,127,],[22,22,-8,-2,22,22,22,-56,-62,22,-55,22,-53,-54,-60,-61,-57,-25,-26,-9,-10,-29,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-6,-16,22,22,22,22,22,-28,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-63,-11,-12,22,-59,22,-15,-27,-30,-31,-32,-33,22,22,22,-50,-51,-52,-3,-5,-7,22,-58,-4,]),'(':([0,2,3,4,6,7,8,9,10,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,54,57,60,61,62,63,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,90,93,96,97,98,99,100,106,107,108,114,116,117,118,119,120,124,125,127,],[9,9,-8,-2,9,9,49,9,51,-56,-62,9,-55,9,66,67,68,-53,-54,-60,-61,-57,-25,-26,-9,-10,-29,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,-6,-16,9,9,9,9,9,-28,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-63,-11,-12,9,-59,9,-15,-27,-30,-31,-32,-33,9,9,9,-50,-51,-52,-3,-5,-7,9,-58,-4,]),'BREAK':([0,2,3,4,6,7,9,12,13,14,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,54,57,60,61,62,63,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,90,93,96,97,98,99,100,106,107,108,114,116,117,118,119,120,124,125,127,],[23,23,-8,-2,23,23,23,-56,-62,23,-55,23,-53,-54,-60,-61,-57,-25,-26,-9,-10,-29,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-6,-16,23,23,23,23,23,-28,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-63,-11,-12,23,-59,23,-15,-27,-30,-31,-32,-33,23,23,23,-50,-51,-52,-3,-5,-7,23,-58,-4,]),'CONTINUE':([0,2,3,4,6,7,9,12,13,14,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,54,57,60,61,62,63,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,90,93,96,97,98,99,100,106,107,108,114,116,117,118,119,120,124,125,127,],[24,24,-8,-2,24,24,24,-56,-62,24,-55,24,-53,-54,-60,-61,-57,-25,-26,-9,-10,-29,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-6,-16,24,24,24,24,24,-28,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-63,-11,-12,24,-59,24,-15,-27,-30,-31,-32,-33,24,24,24,-50,-51,-52,-3,-5,-7,24,-58,-4,]),'ID':([0,2,3,4,6,7,9,11,12,13,14,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,54,57,60,61,62,63,64,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,90,93,96,97,98,99,100,106,107,108,114,116,117,118,119,120,124,125,127,],[12,12,-8,-2,12,12,12,52,-56,-62,12,-55,12,-53,-54,-60,-61,-57,-25,-26,-9,-10,-29,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-6,-16,12,12,12,12,12,-28,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-63,-11,-12,12,-59,12,-15,-27,-30,-31,-32,-33,12,12,12,-50,-51,-52,-3,-5,-7,12,-58,-4,]),'INTNUM':([0,2,3,4,6,7,9,12,13,14,15,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,53,54,55,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,90,93,94,95,96,97,98,99,100,106,107,108,110,114,115,116,117,118,119,120,122,124,125,127,],[26,26,-8,-2,26,26,26,-56,-62,26,26,-55,26,-53,-54,-60,-61,-57,-25,-26,-9,-10,-29,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,91,-6,26,-16,26,26,26,26,26,-28,26,26,26,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-63,-11,-12,26,-59,26,-15,26,26,-27,-30,-31,-32,-33,26,26,26,121,-50,26,-51,-52,-3,-5,-7,26,26,-58,-4,]),'FLOATNUM':([0,2,3,4,6,7,9,12,13,14,15,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,54,55,57,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,88,90,93,94,95,96,97,98,99,100,106,107,108,114,115,116,117,118,119,120,122,124,125,127,],[27,27,-8,-2,27,27,27,-56,-62,27,27,-55,27,-53,-54,-60,-61,-57,-25,-26,-9,-10,-29,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-6,27,-16,27,27,27,27,27,-28,27,27,27,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-63,-11,-12,27,-59,27,-15,27,27,-27,-30,-31,-32,-33,27,27,27,-50,27,-51,-52,-3,-5,-7,27,27,-58,-4,]),'$end':([1,2,3,4,28,29,84,85,118,119,120,127,],[0,-1,-8,-2,-9,-10,-11,-12,-3,-5,-7,-4,]),'}':([3,4,28,29,46,84,85,118,119,120,127,],[-8,-2,-9,-10,84,-11,-12,-3,-5,-7,-4,]),'ELSE':([4,29,84,85,118,119,120,127,],[-2,-10,-11,-12,124,-5,-7,-4,]),';':([5,12,13,16,21,22,23,24,25,26,27,30,47,48,54,57,58,59,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,93,96,97,98,99,100,105,113,114,116,117,125,],[29,-56,-62,-55,-53,-54,-60,-61,-57,-25,-26,-29,85,-13,-6,-16,94,-23,-28,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-63,-59,-15,-27,-30,-31,-32,-33,-14,-24,-50,-51,-52,-58,]),"'":([5,12,13,16,21,22,23,24,25,26,27,30,48,50,54,57,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,89,93,96,97,98,99,100,105,108,109,114,116,117,125,],[30,-56,-62,-55,-53,-54,-60,-61,-57,-25,-26,-29,30,30,30,-16,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-59,30,-15,30,30,30,30,30,30,-62,30,-50,-51,-52,-58,]),'+':([5,12,13,16,21,22,23,24,25,26,27,30,48,50,54,57,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,89,93,96,97,98,99,100,105,108,109,114,116,117,125,],[31,-56,-62,-55,-53,-54,-60,-61,-57,-25,-26,-29,31,31,31,-16,-28,-34,-35,-36,-37,-38,-39,-40,-41,31,31,31,31,31,31,31,31,-59,31,-15,31,31,31,31,31,31,-62,31,-50,-51,-52,-58,]),'DOTADD':([5,12,13,16,21,22,23,24,25,26,27,30,48,50,54,57,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,89,93,96,97,98,99,100,105,108,109,114,116,117,125,],[33,-56,-62,-55,-53,-54,-60,-61,-57,-25,-26,-29,33,33,33,-16,-28,-34,-35,-36,-37,-38,-39,-40,-41,33,33,33,33,33,33,33,33,-59,33,-15,33,33,33,33,33,33,-62,33,-50,-51,-52,-58,]),'DOTSUB':([5,12,13,16,21,22,23,24,25,26,27,30,48,50,54,57,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,89,93,96,97,98,99,100,105,108,109,114,116,117,125,],[34,-56,-62,-55,-53,-54,-60,-61,-57,-25,-26,-29,34,34,34,-16,-28,-34,-35,-36,-37,-38,-39,-40,-41,34,34,34,34,34,34,34,34,-59,34,-15,34,34,34,34,34,34,-62,34,-50,-51,-52,-58,]),'*':([5,12,13,16,21,22,23,24,25,26,27,30,48,50,54,57,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,89,93,96,97,98,99,100,105,108,109,114,116,117,125,],[35,-56,-62,-55,-53,-54,-60,-61,-57,-25,-26,-29,35,35,35,-16,35,35,35,35,35,-38,-39,-40,-41,35,35,35,35,35,35,35,35,-59,35,-15,35,35,35,35,35,35,-62,35,-50,-51,-52,-58,]),'/':([5,12,13,16,21,22,23,24,25,26,27,30,48,50,54,57,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,89,93,96,97,98,99,100,105,108,109,114,116,117,125,],[36,-56,-62,-55,-53,-54,-60,-61,-57,-25,-26,-29,36,36,36,-16,36,36,36,36,36,-38,-39,-40,-41,36,36,36,36,36,36,36,36,-59,36,-15,36,36,36,36,36,36,-62,36,-50,-51,-52,-58,]),'DOTMUL':([5,12,13,16,21,22,23,24,25,26,27,30,48,50,54,57,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,89,93,96,97,98,99,100,105,108,109,114,116,117,125,],[37,-56,-62,-55,-53,-54,-60,-61,-57,-25,-26,-29,37,37,37,-16,37,37,37,37,37,-38,-39,-40,-41,37,37,37,37,37,37,37,37,-59,37,-15,37,37,37,37,37,37,-62,37,-50,-51,-52,-58,]),'DOTDIV':([5,12,13,16,21,22,23,24,25,26,27,30,48,50,54,57,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,89,93,96,97,98,99,100,105,108,109,114,116,117,125,],[38,-56,-62,-55,-53,-54,-60,-61,-57,-25,-26,-29,38,38,38,-16,38,38,38,38,38,-38,-39,-40,-41,38,38,38,38,38,38,38,38,-59,38,-15,38,38,38,38,38,38,-62,38,-50,-51,-52,-58,]),'EQ':([5,12,13,16,21,22,23,24,25,26,27,30,48,50,54,57,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,89,93,96,97,98,99,100,105,108,109,114,116,117,125,],[39,-56,-62,-55,-53,-54,-60,-61,-57,-25,-26,-29,39,39,39,-16,-28,-34,-35,-36,-37,-38,-39,-40,-41,-42,39,-44,-45,-46,-47,39,39,-59,39,-15,39,39,39,39,39,39,-62,39,-50,-51,-52,-58,]),'NOTEQ':([5,12,13,16,21,22,23,24,25,26,27,30,48,50,54,57,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,89,93,96,97,98,99,100,105,108,109,114,116,117,125,],[40,-56,-62,-55,-53,-54,-60,-61,-57,-25,-26,-29,40,40,40,-16,-28,-34,-35,-36,-37,-38,-39,-40,-41,-42,40,-44,-45,-46,-47,40,40,-59,40,-15,-27,40,40,40,40,40,-62,40,-50,-51,-52,-58,]),'GT':([5,12,13,16,21,22,23,24,25,26,27,30,48,50,54,57,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,89,93,96,97,98,99,100,105,108,109,114,116,117,125,],[41,-56,-62,-55,-53,-54,-60,-61,-57,-25,-26,-29,41,41,41,-16,-28,-34,-35,-36,-37,-38,-39,-40,-41,-42,41,-44,-45,-46,-47,41,41,-59,41,-15,41,41,41,41,41,41,-62,41,-50,-51,-52,-58,]),'LT':([5,12,13,16,21,22,23,24,25,26,27,30,48,50,54,57,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,89,93,96,97,98,99,100,105,108,109,114,116,117,125,],[42,-56,-62,-55,-53,-54,-60,-61,-57,-25,-26,-29,42,42,42,-16,-28,-34,-35,-36,-37,-38,-39,-40,-41,-42,42,-44,-45,-46,-47,42,42,-59,42,-15,42,42,42,42,42,42,-62,42,-50,-51,-52,-58,]),'GTEQ':([5,12,13,16,21,22,23,24,25,26,27,30,48,50,54,57,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,89,93,96,97,98,99,100,105,108,109,114,116,117,125,],[43,-56,-62,-55,-53,-54,-60,-61,-57,-25,-26,-29,43,43,43,-16,-28,-34,-35,-36,-37,-38,-39,-40,-41,-42,43,-44,-45,-46,-47,43,43,-59,43,-15,43,43,43,43,43,43,-62,43,-50,-51,-52,-58,]),'LTEQ':([5,12,13,16,21,22,23,24,25,26,27,30,48,50,54,57,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,89,93,96,97,98,99,100,105,108,109,114,116,117,125,],[44,-56,-62,-55,-53,-54,-60,-61,-57,-25,-26,-29,44,44,44,-16,-28,-34,-35,-36,-37,-38,-39,-40,-41,-42,44,-44,-45,-46,-47,44,44,-59,44,-15,44,44,44,44,44,44,-62,44,-50,-51,-52,-58,]),':':([5,12,13,16,21,22,23,24,25,26,27,30,48,50,54,57,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,89,93,96,97,98,99,100,105,108,109,114,116,117,125,],[45,-56,-62,-55,-53,-54,-60,-61,-57,-25,-26,-29,45,45,45,-16,-28,-34,-35,-36,-37,-38,-39,-40,-41,-42,45,-44,-45,-46,-47,45,45,-59,45,-15,-27,45,45,45,45,45,-62,45,-50,-51,-52,-58,]),'=':([12,16,25,52,125,],[-56,60,-57,90,-58,]),'ADDASSIGN':([12,16,25,125,],[-56,61,-57,-58,]),'SUBASSIGN':([12,16,25,125,],[-56,62,-57,-58,]),'MULASSIGN':([12,16,25,125,],[-56,63,-57,-58,]),'DIVASSIGN':([12,16,25,125,],[-56,64,-57,-58,]),',':([12,13,16,21,22,23,24,25,26,27,30,47,48,54,57,59,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,88,91,93,96,97,98,99,100,101,102,103,104,105,111,114,116,117,123,125,],[-56,-62,-55,-53,-54,-60,-61,-57,-25,-26,-29,86,-13,-6,-16,95,-28,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-63,-59,110,-15,-27,-30,-31,-32,-33,115,-48,115,115,-14,122,-50,-51,-52,-49,-58,]),')':([12,13,16,21,22,23,24,25,26,27,30,50,54,57,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,87,88,89,93,96,97,98,99,100,101,102,103,104,114,116,117,123,125,],[-56,-62,-55,-53,-54,-60,-61,-57,-25,-26,-29,88,-6,-16,-28,-34,-35,-36,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-63,106,-59,107,-15,-27,-30,-31,-32,-33,114,-48,116,117,-50,-51,-52,-49,-58,]),']':([15,26,27,56,58,59,92,94,111,112,113,121,122,126,],[57,-25,-26,93,-18,-23,111,-17,-20,-21,-24,125,-19,-22,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'statements':([0,6,],[2,46,]),'statement':([0,2,6,46,106,107,108,124,],[3,28,3,28,118,119,120,127,]),'instruction':([0,2,6,46,106,107,108,124,],[4,4,4,4,4,4,4,4,]),'expression':([0,2,6,7,9,14,17,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,60,61,62,63,64,86,90,106,107,108,124,],[5,5,5,48,50,54,65,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,5,87,89,96,97,98,99,100,105,109,5,5,5,5,]),'range':([0,2,6,7,9,14,17,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,60,61,62,63,64,86,90,106,107,108,124,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,108,13,13,13,13,]),'assignable':([0,2,6,7,9,14,17,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,60,61,62,63,64,86,90,106,107,108,124,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'number':([0,2,6,7,9,14,15,17,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,55,60,61,62,63,64,66,67,68,86,90,94,95,106,107,108,115,122,124,],[21,21,21,21,21,21,59,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,59,21,21,21,21,21,102,102,102,21,21,59,59,21,21,21,123,59,21,]),'matrixcellgetter':([0,2,6,7,9,14,17,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,51,60,61,62,63,64,86,90,106,107,108,124,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'expressions':([7,],[47,]),'minit':([15,94,122,],[56,112,126,]),'mrow':([15,55,94,95,122,],[58,92,58,113,58,]),'numbers':([66,67,68,],[101,103,104,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> statements','start',1,'p_start','parser.py',28),
  ('statement -> instruction','statement',1,'p_statement_instruction','parser.py',32),
  ('instruction -> IF ( expression ) statement','instruction',5,'p_instruction_if','parser.py',36),
  ('instruction -> IF ( expression ) statement ELSE statement','instruction',7,'p_instruction_if','parser.py',37),
  ('instruction -> WHILE ( expression ) statement','instruction',5,'p_instruction_while','parser.py',44),
  ('expression -> RETURN expression','expression',2,'p_expression_return','parser.py',48),
  ('instruction -> FOR ID = range statement','instruction',5,'p_instruction_for','parser.py',52),
  ('statements -> statement','statements',1,'p_statements','parser.py',56),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',57),
  ('statement -> expression ;','statement',2,'p_statement_expression','parser.py',64),
  ('statement -> { statements }','statement',3,'p_statement_statements','parser.py',68),
  ('statement -> PRINT expressions ;','statement',3,'p_statement_print','parser.py',72),
  ('expressions -> expression','expressions',1,'p_expressions','parser.py',76),
  ('expressions -> expressions , expression','expressions',3,'p_expressions','parser.py',77),
  ('expression -> [ minit ]','expression',3,'p_mexpression_minit','parser.py',84),
  ('expression -> [ ]','expression',2,'p_mexpression_minit','parser.py',85),
  ('minit -> mrow ;','minit',2,'p_minit','parser.py',92),
  ('minit -> mrow','minit',1,'p_minit','parser.py',93),
  ('minit -> [ mrow ] ,','minit',4,'p_minit','parser.py',94),
  ('minit -> [ mrow ]','minit',3,'p_minit','parser.py',95),
  ('minit -> mrow ; minit','minit',3,'p_minit','parser.py',96),
  ('minit -> [ mrow ] , minit','minit',5,'p_minit','parser.py',97),
  ('mrow -> number','mrow',1,'p_mrow','parser.py',109),
  ('mrow -> number , mrow','mrow',3,'p_mrow','parser.py',110),
  ('number -> INTNUM','number',1,'p_number_intnum','parser.py',117),
  ('number -> FLOATNUM','number',1,'p_number_floatnum','parser.py',121),
  ('expression -> assignable = expression','expression',3,'p_expression_assignment','parser.py',125),
  ('expression -> - expression','expression',2,'p_expression_unaryminus','parser.py',129),
  ("expression -> expression '",'expression',2,'p_expression_matrixtranspose','parser.py',133),
  ('expression -> assignable ADDASSIGN expression','expression',3,'p_expression_fancy_assign','parser.py',137),
  ('expression -> assignable SUBASSIGN expression','expression',3,'p_expression_fancy_assign','parser.py',138),
  ('expression -> assignable MULASSIGN expression','expression',3,'p_expression_fancy_assign','parser.py',139),
  ('expression -> assignable DIVASSIGN expression','expression',3,'p_expression_fancy_assign','parser.py',140),
  ('expression -> expression + expression','expression',3,'p_expression_sum','parser.py',152),
  ('expression -> expression - expression','expression',3,'p_expression_sum','parser.py',153),
  ('expression -> expression DOTADD expression','expression',3,'p_expression_sum','parser.py',154),
  ('expression -> expression DOTSUB expression','expression',3,'p_expression_sum','parser.py',155),
  ('expression -> expression * expression','expression',3,'p_expression_mul','parser.py',167),
  ('expression -> expression / expression','expression',3,'p_expression_mul','parser.py',168),
  ('expression -> expression DOTMUL expression','expression',3,'p_expression_mul','parser.py',169),
  ('expression -> expression DOTDIV expression','expression',3,'p_expression_mul','parser.py',170),
  ('expression -> expression EQ expression','expression',3,'p_expression_cond','parser.py',182),
  ('expression -> expression NOTEQ expression','expression',3,'p_expression_cond','parser.py',183),
  ('expression -> expression GT expression','expression',3,'p_expression_cond','parser.py',184),
  ('expression -> expression LT expression','expression',3,'p_expression_cond','parser.py',185),
  ('expression -> expression GTEQ expression','expression',3,'p_expression_cond','parser.py',186),
  ('expression -> expression LTEQ expression','expression',3,'p_expression_cond','parser.py',187),
  ('numbers -> number','numbers',1,'p_numbers','parser.py',203),
  ('numbers -> numbers , number','numbers',3,'p_numbers','parser.py',204),
  ('expression -> ZEROS ( numbers )','expression',4,'p_expression_function','parser.py',211),
  ('expression -> ONES ( numbers )','expression',4,'p_expression_function','parser.py',212),
  ('expression -> EYE ( numbers )','expression',4,'p_expression_function','parser.py',213),
  ('expression -> number','expression',1,'p_expression_number','parser.py',222),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',226),
  ('expression -> assignable','expression',1,'p_expression_assignable','parser.py',230),
  ('assignable -> ID','assignable',1,'p_expression_id','parser.py',234),
  ('assignable -> matrixcellgetter','assignable',1,'p_assignable_matrixcellgetter','parser.py',238),
  ('matrixcellgetter -> ID [ INTNUM , INTNUM ]','matrixcellgetter',6,'p_matrixcellgetter','parser.py',242),
  ('expression -> ( expression )','expression',3,'p_expression_group','parser.py',246),
  ('expression -> BREAK','expression',1,'p_expression_break','parser.py',250),
  ('expression -> CONTINUE','expression',1,'p_expression_continue','parser.py',254),
  ('expression -> range','expression',1,'p_expression_range','parser.py',258),
  ('range -> expression : expression','range',3,'p_range','parser.py',262),
]
