
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'right=leftEQGTLTGTEQLTEQleft+-DOTADDDOTSUBleft*/DOTMULDOTDIVright\'-ADDASSIGN ARROW BREAK COMMENT CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQ EYE FLOATNUM FOR GT GTEQ ID IF INTNUM LT LTEQ MULASSIGN NOTEQ ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROSstart : statementsstatement : instructioninstruction : IF \'(\' expression \')\' statement\n                   | IF \'(\' expression \')\' statement ELSE statementinstruction : WHILE \'(\' expression \')\' statementexpression : RETURN expressionexpression : \'(\' args \')\' ARROW statementinstruction : FOR ID \'=\' range statementargs : ID\n            | args \',\' IDstatements : statement\n                  | statements statementstatement : expression \';\'statement : \'{\' statements \'}\'statement : PRINT expressions \';\'expressions : expression\n                   | expressions \',\' expressionexpression : \'[\' minit \']\'\n                  | \'[\' \']\'minit : mrow \';\'\n             | mrow\n             | \'[\' mrow \']\' \',\'\n             | \'[\' mrow \']\'\n             | mrow \';\' minit\n             | \'[\' mrow \']\' \',\' minitmrow : number\n            | number \',\' mrownumber : INTNUMnumber : FLOATNUMexpression : assignable \'=\' expressionexpression : \'-\' expressionexpression : expression "\'"expression : assignable ADDASSIGN expression\n                  | assignable SUBASSIGN expression\n                  | assignable MULASSIGN expression\n                  | assignable DIVASSIGN expressionexpression : expression \'+\' expression\n                  | expression \'-\' expression\n                  | expression DOTADD expression\n                  | expression DOTSUB expressionexpression : expression \'*\' expression\n                  | expression \'/\' expression\n                  | expression DOTMUL expression\n                  | expression DOTDIV expressionexpression : expression EQ expression\n                  | expression NOTEQ expression\n                  | expression GT expression\n                  | expression LT expression\n                  | expression GTEQ expression\n                  | expression LTEQ expressionnumbers : number\n               | numbers \',\' numberexpression : ZEROS \'(\' numbers \')\'\n                  | ONES \'(\' numbers \')\'\n                  | EYE \'(\' numbers \')\'\n                  | ID \'(\' expressions \')\'expression : numberexpression : STRINGexpression : assignableassignable : IDassignable : matrixcellgettermatrixcellgetter : ID \'[\' expression \',\' expression \']\'expression : \'(\' expression \')\'expression : BREAKexpression : CONTINUEexpression : rangerange : expression \':\' expression'
    
_lr_action_items = {'{':([0,2,3,4,6,12,13,16,21,22,23,24,25,26,27,28,29,30,46,57,60,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,99,102,103,104,105,106,112,113,115,116,118,123,125,126,127,128,129,130,134,135,137,],[6,6,-11,-2,6,-60,-66,-59,-57,-58,-64,-65,-61,-28,-29,-12,-13,-32,6,-6,-19,-31,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-67,-14,-15,-63,-18,-30,-33,-34,-35,-36,6,6,6,6,-56,-53,-54,-55,-3,-7,-5,-8,6,-62,-4,]),'PRINT':([0,2,3,4,6,12,13,16,21,22,23,24,25,26,27,28,29,30,46,57,60,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,99,102,103,104,105,106,112,113,115,116,118,123,125,126,127,128,129,130,134,135,137,],[7,7,-11,-2,7,-60,-66,-59,-57,-58,-64,-65,-61,-28,-29,-12,-13,-32,7,-6,-19,-31,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-67,-14,-15,-63,-18,-30,-33,-34,-35,-36,7,7,7,7,-56,-53,-54,-55,-3,-7,-5,-8,7,-62,-4,]),'IF':([0,2,3,4,6,12,13,16,21,22,23,24,25,26,27,28,29,30,46,57,60,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,99,102,103,104,105,106,112,113,115,116,118,123,125,126,127,128,129,130,134,135,137,],[8,8,-11,-2,8,-60,-66,-59,-57,-58,-64,-65,-61,-28,-29,-12,-13,-32,8,-6,-19,-31,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-67,-14,-15,-63,-18,-30,-33,-34,-35,-36,8,8,8,8,-56,-53,-54,-55,-3,-7,-5,-8,8,-62,-4,]),'WHILE':([0,2,3,4,6,12,13,16,21,22,23,24,25,26,27,28,29,30,46,57,60,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,99,102,103,104,105,106,112,113,115,116,118,123,125,126,127,128,129,130,134,135,137,],[10,10,-11,-2,10,-60,-66,-59,-57,-58,-64,-65,-61,-28,-29,-12,-13,-32,10,-6,-19,-31,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-67,-14,-15,-63,-18,-30,-33,-34,-35,-36,10,10,10,10,-56,-53,-54,-55,-3,-7,-5,-8,10,-62,-4,]),'FOR':([0,2,3,4,6,12,13,16,21,22,23,24,25,26,27,28,29,30,46,57,60,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,99,102,103,104,105,106,112,113,115,116,118,123,125,126,127,128,129,130,134,135,137,],[11,11,-11,-2,11,-60,-66,-59,-57,-58,-64,-65,-61,-28,-29,-12,-13,-32,11,-6,-19,-31,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-67,-14,-15,-63,-18,-30,-33,-34,-35,-36,11,11,11,11,-56,-53,-54,-55,-3,-7,-5,-8,11,-62,-4,]),'RETURN':([0,2,3,4,6,7,9,12,13,14,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,53,55,56,57,60,63,64,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,95,99,102,103,104,105,106,112,113,115,116,118,119,123,125,126,127,128,129,130,134,135,137,],[14,14,-11,-2,14,14,14,-60,-66,14,-59,14,-57,-58,-64,-65,-61,-28,-29,-12,-13,-32,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-6,-19,14,14,14,14,14,-31,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-67,-14,-15,14,-63,14,-18,-30,-33,-34,-35,-36,14,14,14,14,-56,14,-53,-54,-55,-3,-7,-5,-8,14,-62,-4,]),'(':([0,2,3,4,6,7,8,9,10,12,13,14,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,52,53,55,56,57,60,63,64,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,95,99,102,103,104,105,106,112,113,115,116,118,119,123,125,126,127,128,129,130,134,135,137,],[9,9,-11,-2,9,9,49,9,53,55,-66,9,-59,9,69,70,71,-57,-58,-64,-65,-61,-28,-29,-12,-13,-32,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,55,9,9,9,-6,-19,9,9,9,9,9,-31,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-67,-14,-15,9,-63,9,-18,-30,-33,-34,-35,-36,9,9,9,9,-56,9,-53,-54,-55,-3,-7,-5,-8,9,-62,-4,]),'[':([0,2,3,4,6,7,9,12,13,14,15,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,52,53,55,56,57,60,63,64,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,95,99,100,102,103,104,105,106,112,113,115,116,118,119,123,125,126,127,128,129,130,132,134,135,137,],[15,15,-11,-2,15,15,15,56,-66,15,58,-59,15,-57,-58,-64,-65,-61,-28,-29,-12,-13,-32,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,56,15,15,15,-6,-19,15,15,15,15,15,-31,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-67,-14,-15,15,-63,15,-18,58,-30,-33,-34,-35,-36,15,15,15,15,-56,15,-53,-54,-55,-3,-7,-5,-8,58,15,-62,-4,]),'-':([0,2,3,4,5,6,7,9,12,13,14,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,48,49,51,52,53,55,56,57,60,63,64,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,93,94,95,97,99,102,103,104,105,106,111,112,113,115,116,117,118,119,123,125,126,127,128,129,130,131,134,135,137,],[17,17,-11,-2,32,17,17,17,-60,-66,17,-59,17,-57,-58,-64,-65,-61,-28,-29,-12,-13,-32,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,32,17,32,-60,17,17,17,32,-19,17,17,17,17,17,-31,-37,-38,-39,-40,-41,-42,-43,-44,32,32,32,32,32,32,32,-14,-15,17,32,-63,32,17,32,-18,32,32,32,32,32,32,17,17,17,17,32,-56,17,-53,-54,-55,-3,-7,-5,-8,32,17,-62,-4,]),'ZEROS':([0,2,3,4,6,7,9,12,13,14,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,53,55,56,57,60,63,64,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,95,99,102,103,104,105,106,112,113,115,116,118,119,123,125,126,127,128,129,130,134,135,137,],[18,18,-11,-2,18,18,18,-60,-66,18,-59,18,-57,-58,-64,-65,-61,-28,-29,-12,-13,-32,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,-6,-19,18,18,18,18,18,-31,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-67,-14,-15,18,-63,18,-18,-30,-33,-34,-35,-36,18,18,18,18,-56,18,-53,-54,-55,-3,-7,-5,-8,18,-62,-4,]),'ONES':([0,2,3,4,6,7,9,12,13,14,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,53,55,56,57,60,63,64,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,95,99,102,103,104,105,106,112,113,115,116,118,119,123,125,126,127,128,129,130,134,135,137,],[19,19,-11,-2,19,19,19,-60,-66,19,-59,19,-57,-58,-64,-65,-61,-28,-29,-12,-13,-32,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,-6,-19,19,19,19,19,19,-31,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-67,-14,-15,19,-63,19,-18,-30,-33,-34,-35,-36,19,19,19,19,-56,19,-53,-54,-55,-3,-7,-5,-8,19,-62,-4,]),'EYE':([0,2,3,4,6,7,9,12,13,14,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,53,55,56,57,60,63,64,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,95,99,102,103,104,105,106,112,113,115,116,118,119,123,125,126,127,128,129,130,134,135,137,],[20,20,-11,-2,20,20,20,-60,-66,20,-59,20,-57,-58,-64,-65,-61,-28,-29,-12,-13,-32,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-6,-19,20,20,20,20,20,-31,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-67,-14,-15,20,-63,20,-18,-30,-33,-34,-35,-36,20,20,20,20,-56,20,-53,-54,-55,-3,-7,-5,-8,20,-62,-4,]),'ID':([0,2,3,4,6,7,9,11,12,13,14,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,53,55,56,57,60,63,64,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,92,93,95,99,102,103,104,105,106,112,113,115,116,118,119,123,125,126,127,128,129,130,134,135,137,],[12,12,-11,-2,12,12,52,54,-60,-66,12,-59,12,-57,-58,-64,-65,-61,-28,-29,-12,-13,-32,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-6,-19,12,12,12,12,12,-31,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-67,-14,-15,12,114,-63,12,-18,-30,-33,-34,-35,-36,12,12,12,12,-56,12,-53,-54,-55,-3,-7,-5,-8,12,-62,-4,]),'STRING':([0,2,3,4,6,7,9,12,13,14,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,53,55,56,57,60,63,64,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,95,99,102,103,104,105,106,112,113,115,116,118,119,123,125,126,127,128,129,130,134,135,137,],[22,22,-11,-2,22,22,22,-60,-66,22,-59,22,-57,-58,-64,-65,-61,-28,-29,-12,-13,-32,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-6,-19,22,22,22,22,22,-31,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-67,-14,-15,22,-63,22,-18,-30,-33,-34,-35,-36,22,22,22,22,-56,22,-53,-54,-55,-3,-7,-5,-8,22,-62,-4,]),'BREAK':([0,2,3,4,6,7,9,12,13,14,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,53,55,56,57,60,63,64,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,95,99,102,103,104,105,106,112,113,115,116,118,119,123,125,126,127,128,129,130,134,135,137,],[23,23,-11,-2,23,23,23,-60,-66,23,-59,23,-57,-58,-64,-65,-61,-28,-29,-12,-13,-32,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-6,-19,23,23,23,23,23,-31,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-67,-14,-15,23,-63,23,-18,-30,-33,-34,-35,-36,23,23,23,23,-56,23,-53,-54,-55,-3,-7,-5,-8,23,-62,-4,]),'CONTINUE':([0,2,3,4,6,7,9,12,13,14,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,53,55,56,57,60,63,64,65,66,67,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,95,99,102,103,104,105,106,112,113,115,116,118,119,123,125,126,127,128,129,130,134,135,137,],[24,24,-11,-2,24,24,24,-60,-66,24,-59,24,-57,-58,-64,-65,-61,-28,-29,-12,-13,-32,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-6,-19,24,24,24,24,24,-31,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-67,-14,-15,24,-63,24,-18,-30,-33,-34,-35,-36,24,24,24,24,-56,24,-53,-54,-55,-3,-7,-5,-8,24,-62,-4,]),'INTNUM':([0,2,3,4,6,7,9,12,13,14,15,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,53,55,56,57,58,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,95,99,100,101,102,103,104,105,106,112,113,115,116,118,119,123,124,125,126,127,128,129,130,132,134,135,137,],[26,26,-11,-2,26,26,26,-60,-66,26,26,-59,26,-57,-58,-64,-65,-61,-28,-29,-12,-13,-32,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-6,26,-19,26,26,26,26,26,-31,26,26,26,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-67,-14,-15,26,-63,26,-18,26,26,-30,-33,-34,-35,-36,26,26,26,26,-56,26,-53,26,-54,-55,-3,-7,-5,-8,26,26,-62,-4,]),'FLOATNUM':([0,2,3,4,6,7,9,12,13,14,15,16,17,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,53,55,56,57,58,60,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,93,95,99,100,101,102,103,104,105,106,112,113,115,116,118,119,123,124,125,126,127,128,129,130,132,134,135,137,],[27,27,-11,-2,27,27,27,-60,-66,27,27,-59,27,-57,-58,-64,-65,-61,-28,-29,-12,-13,-32,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-6,27,-19,27,27,27,27,27,-31,27,27,27,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-67,-14,-15,27,-63,27,-18,27,27,-30,-33,-34,-35,-36,27,27,27,27,-56,27,-53,27,-54,-55,-3,-7,-5,-8,27,27,-62,-4,]),'$end':([1,2,3,4,28,29,87,88,127,129,130,137,],[0,-1,-11,-2,-12,-13,-14,-15,-3,-5,-8,-4,]),'}':([3,4,28,29,46,87,88,127,129,130,137,],[-11,-2,-12,-13,87,-14,-15,-3,-5,-8,-4,]),'ELSE':([4,29,87,88,127,129,130,137,],[-2,-13,-14,-15,134,-5,-8,-4,]),';':([4,5,12,13,16,21,22,23,24,25,26,27,29,30,47,48,57,60,61,62,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,99,102,103,104,105,106,111,118,122,123,125,126,127,128,129,130,135,137,],[-2,29,-60,-66,-59,-57,-58,-64,-65,-61,-28,-29,-13,-32,88,-16,-6,-19,100,-26,-31,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-67,-14,-15,-63,-18,-30,-33,-34,-35,-36,-17,-56,-27,-53,-54,-55,-3,-7,-5,-8,-62,-4,]),"'":([4,5,12,13,16,21,22,23,24,25,26,27,29,30,48,51,52,57,60,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,97,99,102,103,104,105,106,111,116,117,118,123,125,126,127,128,129,130,131,135,137,],[-2,30,-60,-66,-59,-57,-58,-64,-65,-61,-28,-29,-13,-32,30,30,-60,30,-19,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,-14,-15,30,-63,30,30,-18,30,30,30,30,30,30,-66,30,-56,-53,-54,-55,-3,-7,-5,-8,30,-62,-4,]),'+':([4,5,12,13,16,21,22,23,24,25,26,27,29,30,48,51,52,57,60,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,97,99,102,103,104,105,106,111,116,117,118,123,125,126,127,128,129,130,131,135,137,],[-2,31,-60,-66,-59,-57,-58,-64,-65,-61,-28,-29,-13,-32,31,31,-60,31,-19,-31,-37,-38,-39,-40,-41,-42,-43,-44,31,31,31,31,31,31,31,-14,-15,31,-63,31,31,-18,31,31,31,31,31,31,-66,31,-56,-53,-54,-55,-3,-7,-5,-8,31,-62,-4,]),'DOTADD':([4,5,12,13,16,21,22,23,24,25,26,27,29,30,48,51,52,57,60,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,97,99,102,103,104,105,106,111,116,117,118,123,125,126,127,128,129,130,131,135,137,],[-2,33,-60,-66,-59,-57,-58,-64,-65,-61,-28,-29,-13,-32,33,33,-60,33,-19,-31,-37,-38,-39,-40,-41,-42,-43,-44,33,33,33,33,33,33,33,-14,-15,33,-63,33,33,-18,33,33,33,33,33,33,-66,33,-56,-53,-54,-55,-3,-7,-5,-8,33,-62,-4,]),'DOTSUB':([4,5,12,13,16,21,22,23,24,25,26,27,29,30,48,51,52,57,60,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,97,99,102,103,104,105,106,111,116,117,118,123,125,126,127,128,129,130,131,135,137,],[-2,34,-60,-66,-59,-57,-58,-64,-65,-61,-28,-29,-13,-32,34,34,-60,34,-19,-31,-37,-38,-39,-40,-41,-42,-43,-44,34,34,34,34,34,34,34,-14,-15,34,-63,34,34,-18,34,34,34,34,34,34,-66,34,-56,-53,-54,-55,-3,-7,-5,-8,34,-62,-4,]),'*':([4,5,12,13,16,21,22,23,24,25,26,27,29,30,48,51,52,57,60,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,97,99,102,103,104,105,106,111,116,117,118,123,125,126,127,128,129,130,131,135,137,],[-2,35,-60,-66,-59,-57,-58,-64,-65,-61,-28,-29,-13,-32,35,35,-60,35,-19,35,35,35,35,35,-41,-42,-43,-44,35,35,35,35,35,35,35,-14,-15,35,-63,35,35,-18,35,35,35,35,35,35,-66,35,-56,-53,-54,-55,-3,-7,-5,-8,35,-62,-4,]),'/':([4,5,12,13,16,21,22,23,24,25,26,27,29,30,48,51,52,57,60,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,97,99,102,103,104,105,106,111,116,117,118,123,125,126,127,128,129,130,131,135,137,],[-2,36,-60,-66,-59,-57,-58,-64,-65,-61,-28,-29,-13,-32,36,36,-60,36,-19,36,36,36,36,36,-41,-42,-43,-44,36,36,36,36,36,36,36,-14,-15,36,-63,36,36,-18,36,36,36,36,36,36,-66,36,-56,-53,-54,-55,-3,-7,-5,-8,36,-62,-4,]),'DOTMUL':([4,5,12,13,16,21,22,23,24,25,26,27,29,30,48,51,52,57,60,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,97,99,102,103,104,105,106,111,116,117,118,123,125,126,127,128,129,130,131,135,137,],[-2,37,-60,-66,-59,-57,-58,-64,-65,-61,-28,-29,-13,-32,37,37,-60,37,-19,37,37,37,37,37,-41,-42,-43,-44,37,37,37,37,37,37,37,-14,-15,37,-63,37,37,-18,37,37,37,37,37,37,-66,37,-56,-53,-54,-55,-3,-7,-5,-8,37,-62,-4,]),'DOTDIV':([4,5,12,13,16,21,22,23,24,25,26,27,29,30,48,51,52,57,60,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,97,99,102,103,104,105,106,111,116,117,118,123,125,126,127,128,129,130,131,135,137,],[-2,38,-60,-66,-59,-57,-58,-64,-65,-61,-28,-29,-13,-32,38,38,-60,38,-19,38,38,38,38,38,-41,-42,-43,-44,38,38,38,38,38,38,38,-14,-15,38,-63,38,38,-18,38,38,38,38,38,38,-66,38,-56,-53,-54,-55,-3,-7,-5,-8,38,-62,-4,]),'EQ':([4,5,12,13,16,21,22,23,24,25,26,27,29,30,48,51,52,57,60,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,97,99,102,103,104,105,106,111,116,117,118,123,125,126,127,128,129,130,131,135,137,],[-2,39,-60,-66,-59,-57,-58,-64,-65,-61,-28,-29,-13,-32,39,39,-60,39,-19,-31,-37,-38,-39,-40,-41,-42,-43,-44,-45,39,-47,-48,-49,-50,39,-14,-15,39,-63,39,39,-18,39,39,39,39,39,39,-66,39,-56,-53,-54,-55,-3,-7,-5,-8,39,-62,-4,]),'NOTEQ':([4,5,12,13,16,21,22,23,24,25,26,27,29,30,48,51,52,57,60,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,97,99,102,103,104,105,106,111,116,117,118,123,125,126,127,128,129,130,131,135,137,],[-2,40,-60,-66,-59,-57,-58,-64,-65,-61,-28,-29,-13,-32,40,40,-60,40,-19,-31,-37,-38,-39,-40,-41,-42,-43,-44,-45,40,-47,-48,-49,-50,40,-14,-15,40,-63,40,40,-18,-30,40,40,40,40,40,-66,40,-56,-53,-54,-55,-3,-7,-5,-8,40,-62,-4,]),'GT':([4,5,12,13,16,21,22,23,24,25,26,27,29,30,48,51,52,57,60,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,97,99,102,103,104,105,106,111,116,117,118,123,125,126,127,128,129,130,131,135,137,],[-2,41,-60,-66,-59,-57,-58,-64,-65,-61,-28,-29,-13,-32,41,41,-60,41,-19,-31,-37,-38,-39,-40,-41,-42,-43,-44,-45,41,-47,-48,-49,-50,41,-14,-15,41,-63,41,41,-18,41,41,41,41,41,41,-66,41,-56,-53,-54,-55,-3,-7,-5,-8,41,-62,-4,]),'LT':([4,5,12,13,16,21,22,23,24,25,26,27,29,30,48,51,52,57,60,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,97,99,102,103,104,105,106,111,116,117,118,123,125,126,127,128,129,130,131,135,137,],[-2,42,-60,-66,-59,-57,-58,-64,-65,-61,-28,-29,-13,-32,42,42,-60,42,-19,-31,-37,-38,-39,-40,-41,-42,-43,-44,-45,42,-47,-48,-49,-50,42,-14,-15,42,-63,42,42,-18,42,42,42,42,42,42,-66,42,-56,-53,-54,-55,-3,-7,-5,-8,42,-62,-4,]),'GTEQ':([4,5,12,13,16,21,22,23,24,25,26,27,29,30,48,51,52,57,60,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,97,99,102,103,104,105,106,111,116,117,118,123,125,126,127,128,129,130,131,135,137,],[-2,43,-60,-66,-59,-57,-58,-64,-65,-61,-28,-29,-13,-32,43,43,-60,43,-19,-31,-37,-38,-39,-40,-41,-42,-43,-44,-45,43,-47,-48,-49,-50,43,-14,-15,43,-63,43,43,-18,43,43,43,43,43,43,-66,43,-56,-53,-54,-55,-3,-7,-5,-8,43,-62,-4,]),'LTEQ':([4,5,12,13,16,21,22,23,24,25,26,27,29,30,48,51,52,57,60,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,97,99,102,103,104,105,106,111,116,117,118,123,125,126,127,128,129,130,131,135,137,],[-2,44,-60,-66,-59,-57,-58,-64,-65,-61,-28,-29,-13,-32,44,44,-60,44,-19,-31,-37,-38,-39,-40,-41,-42,-43,-44,-45,44,-47,-48,-49,-50,44,-14,-15,44,-63,44,44,-18,44,44,44,44,44,44,-66,44,-56,-53,-54,-55,-3,-7,-5,-8,44,-62,-4,]),':':([4,5,12,13,16,21,22,23,24,25,26,27,29,30,48,51,52,57,60,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,97,99,102,103,104,105,106,111,116,117,118,123,125,126,127,128,129,130,131,135,137,],[-2,45,-60,-66,-59,-57,-58,-64,-65,-61,-28,-29,-13,-32,45,45,-60,45,-19,-31,-37,-38,-39,-40,-41,-42,-43,-44,-45,45,-47,-48,-49,-50,45,-14,-15,45,-63,45,45,-18,-30,45,45,45,45,45,-66,45,-56,-53,-54,-55,-3,-7,-5,-8,45,-62,-4,]),',':([4,12,13,16,21,22,23,24,25,26,27,29,30,47,48,50,52,57,60,62,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,96,97,99,102,103,104,105,106,107,108,109,110,111,114,118,120,123,125,126,127,128,129,130,133,135,137,],[-2,-60,-66,-59,-57,-58,-64,-65,-61,-28,-29,-13,-32,89,-16,92,-9,-6,-19,101,-31,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-67,-14,-15,-63,89,119,-18,-30,-33,-34,-35,-36,124,-51,124,124,-17,-10,-56,132,-53,-54,-55,-3,-7,-5,-8,-52,-62,-4,]),')':([4,12,13,16,21,22,23,24,25,26,27,29,30,48,50,51,52,57,60,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,90,93,94,96,99,102,103,104,105,106,107,108,109,110,111,114,118,123,125,126,127,128,129,130,133,135,137,],[-2,-60,-66,-59,-57,-58,-64,-65,-61,-28,-29,-13,-32,-16,91,93,-9,-6,-19,-31,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-67,-14,-15,112,-63,115,118,-18,-30,-33,-34,-35,-36,123,-51,125,126,-17,-10,-56,-53,-54,-55,-3,-7,-5,-8,-52,-62,-4,]),']':([4,12,13,15,16,21,22,23,24,25,26,27,29,30,57,59,60,61,62,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,93,98,99,100,102,103,104,105,106,118,120,121,122,123,125,126,127,128,129,130,131,132,135,136,137,],[-2,-60,-66,60,-59,-57,-58,-64,-65,-61,-28,-29,-13,-32,-6,99,-19,-21,-26,-31,-37,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-67,-14,-15,-63,120,-18,-20,-30,-33,-34,-35,-36,-56,-23,-24,-27,-53,-54,-55,-3,-7,-5,-8,135,-22,-62,-25,-4,]),'=':([12,16,25,52,54,135,],[-60,63,-61,-60,95,-62,]),'ADDASSIGN':([12,16,25,52,135,],[-60,64,-61,-60,-62,]),'SUBASSIGN':([12,16,25,52,135,],[-60,65,-61,-60,-62,]),'MULASSIGN':([12,16,25,52,135,],[-60,66,-61,-60,-62,]),'DIVASSIGN':([12,16,25,52,135,],[-60,67,-61,-60,-62,]),'ARROW':([91,],[113,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'statements':([0,6,],[2,46,]),'statement':([0,2,6,46,112,113,115,116,134,],[3,28,3,28,127,128,129,130,137,]),'instruction':([0,2,6,46,112,113,115,116,134,],[4,4,4,4,4,4,4,4,4,]),'expression':([0,2,6,7,9,14,17,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,53,55,56,63,64,65,66,67,89,95,112,113,115,116,119,134,],[5,5,5,48,51,57,68,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,5,90,94,48,97,102,103,104,105,106,111,117,5,5,5,5,131,5,]),'range':([0,2,6,7,9,14,17,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,53,55,56,63,64,65,66,67,89,95,112,113,115,116,119,134,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,116,13,13,13,13,13,13,]),'assignable':([0,2,6,7,9,14,17,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,53,55,56,63,64,65,66,67,89,95,112,113,115,116,119,134,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'number':([0,2,6,7,9,14,15,17,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,53,55,56,58,63,64,65,66,67,69,70,71,89,95,100,101,112,113,115,116,119,124,132,134,],[21,21,21,21,21,21,62,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,62,21,21,21,21,21,108,108,108,21,21,62,62,21,21,21,21,21,133,62,21,]),'matrixcellgetter':([0,2,6,7,9,14,17,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,49,53,55,56,63,64,65,66,67,89,95,112,113,115,116,119,134,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'expressions':([7,55,],[47,96,]),'args':([9,],[50,]),'minit':([15,100,132,],[59,121,136,]),'mrow':([15,58,100,101,132,],[61,98,61,122,61,]),'numbers':([69,70,71,],[107,109,110,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> statements','start',1,'p_start','parser.py',28),
  ('statement -> instruction','statement',1,'p_statement_instruction','parser.py',32),
  ('instruction -> IF ( expression ) statement','instruction',5,'p_instruction_if','parser.py',36),
  ('instruction -> IF ( expression ) statement ELSE statement','instruction',7,'p_instruction_if','parser.py',37),
  ('instruction -> WHILE ( expression ) statement','instruction',5,'p_instruction_while','parser.py',44),
  ('expression -> RETURN expression','expression',2,'p_expression_return','parser.py',48),
  ('expression -> ( args ) ARROW statement','expression',5,'p_instruction_def','parser.py',52),
  ('instruction -> FOR ID = range statement','instruction',5,'p_instruction_for','parser.py',56),
  ('args -> ID','args',1,'p_args','parser.py',60),
  ('args -> args , ID','args',3,'p_args','parser.py',61),
  ('statements -> statement','statements',1,'p_statements','parser.py',68),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',69),
  ('statement -> expression ;','statement',2,'p_statement_expression','parser.py',76),
  ('statement -> { statements }','statement',3,'p_statement_statements','parser.py',80),
  ('statement -> PRINT expressions ;','statement',3,'p_statement_print','parser.py',84),
  ('expressions -> expression','expressions',1,'p_expressions','parser.py',88),
  ('expressions -> expressions , expression','expressions',3,'p_expressions','parser.py',89),
  ('expression -> [ minit ]','expression',3,'p_mexpression_minit','parser.py',96),
  ('expression -> [ ]','expression',2,'p_mexpression_minit','parser.py',97),
  ('minit -> mrow ;','minit',2,'p_minit','parser.py',104),
  ('minit -> mrow','minit',1,'p_minit','parser.py',105),
  ('minit -> [ mrow ] ,','minit',4,'p_minit','parser.py',106),
  ('minit -> [ mrow ]','minit',3,'p_minit','parser.py',107),
  ('minit -> mrow ; minit','minit',3,'p_minit','parser.py',108),
  ('minit -> [ mrow ] , minit','minit',5,'p_minit','parser.py',109),
  ('mrow -> number','mrow',1,'p_mrow','parser.py',121),
  ('mrow -> number , mrow','mrow',3,'p_mrow','parser.py',122),
  ('number -> INTNUM','number',1,'p_number_intnum','parser.py',129),
  ('number -> FLOATNUM','number',1,'p_number_floatnum','parser.py',133),
  ('expression -> assignable = expression','expression',3,'p_expression_assignment','parser.py',137),
  ('expression -> - expression','expression',2,'p_expression_unaryminus','parser.py',141),
  ("expression -> expression '",'expression',2,'p_expression_matrixtranspose','parser.py',145),
  ('expression -> assignable ADDASSIGN expression','expression',3,'p_expression_fancy_assign','parser.py',149),
  ('expression -> assignable SUBASSIGN expression','expression',3,'p_expression_fancy_assign','parser.py',150),
  ('expression -> assignable MULASSIGN expression','expression',3,'p_expression_fancy_assign','parser.py',151),
  ('expression -> assignable DIVASSIGN expression','expression',3,'p_expression_fancy_assign','parser.py',152),
  ('expression -> expression + expression','expression',3,'p_expression_sum','parser.py',164),
  ('expression -> expression - expression','expression',3,'p_expression_sum','parser.py',165),
  ('expression -> expression DOTADD expression','expression',3,'p_expression_sum','parser.py',166),
  ('expression -> expression DOTSUB expression','expression',3,'p_expression_sum','parser.py',167),
  ('expression -> expression * expression','expression',3,'p_expression_mul','parser.py',179),
  ('expression -> expression / expression','expression',3,'p_expression_mul','parser.py',180),
  ('expression -> expression DOTMUL expression','expression',3,'p_expression_mul','parser.py',181),
  ('expression -> expression DOTDIV expression','expression',3,'p_expression_mul','parser.py',182),
  ('expression -> expression EQ expression','expression',3,'p_expression_cond','parser.py',194),
  ('expression -> expression NOTEQ expression','expression',3,'p_expression_cond','parser.py',195),
  ('expression -> expression GT expression','expression',3,'p_expression_cond','parser.py',196),
  ('expression -> expression LT expression','expression',3,'p_expression_cond','parser.py',197),
  ('expression -> expression GTEQ expression','expression',3,'p_expression_cond','parser.py',198),
  ('expression -> expression LTEQ expression','expression',3,'p_expression_cond','parser.py',199),
  ('numbers -> number','numbers',1,'p_numbers','parser.py',215),
  ('numbers -> numbers , number','numbers',3,'p_numbers','parser.py',216),
  ('expression -> ZEROS ( numbers )','expression',4,'p_expression_function','parser.py',223),
  ('expression -> ONES ( numbers )','expression',4,'p_expression_function','parser.py',224),
  ('expression -> EYE ( numbers )','expression',4,'p_expression_function','parser.py',225),
  ('expression -> ID ( expressions )','expression',4,'p_expression_function','parser.py',226),
  ('expression -> number','expression',1,'p_expression_number','parser.py',237),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',241),
  ('expression -> assignable','expression',1,'p_expression_assignable','parser.py',245),
  ('assignable -> ID','assignable',1,'p_expression_id','parser.py',249),
  ('assignable -> matrixcellgetter','assignable',1,'p_assignable_matrixcellgetter','parser.py',253),
  ('matrixcellgetter -> ID [ expression , expression ]','matrixcellgetter',6,'p_matrixcellgetter','parser.py',257),
  ('expression -> ( expression )','expression',3,'p_expression_group','parser.py',261),
  ('expression -> BREAK','expression',1,'p_expression_break','parser.py',265),
  ('expression -> CONTINUE','expression',1,'p_expression_continue','parser.py',269),
  ('expression -> range','expression',1,'p_expression_range','parser.py',273),
  ('range -> expression : expression','range',3,'p_range','parser.py',277),
]
