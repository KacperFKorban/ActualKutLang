
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'right=leftEQGTLTGTEQLTEQleft+-DOTADDDOTSUBleft*/DOTMULDOTDIVright\'-ADDASSIGN ARROW BREAK COMMENT CONTINUE DIVASSIGN DOTADD DOTDIV DOTMUL DOTSUB ELSE EQ EYE FLOATNUM FOR GT GTEQ ID IF IMPORT INTNUM LT LTEQ MULASSIGN NOTEQ ONES PRINT RETURN STRING SUBASSIGN WHILE ZEROSstart : statementsstatement : instructioninstruction : IF \'(\' expression \')\' statement\n                   | IF \'(\' expression \')\' statement ELSE statementinstruction : WHILE \'(\' expression \')\' statementexpression : RETURN expressionexpression : \'(\' args \')\' ARROW statementinstruction : FOR ID \'=\' range statementinstruction : IMPORT STRING \';\'args : ID\n            | args \',\' IDstatements : statement\n                  | statements statementstatement : expression \';\'statement : \'{\' statements \'}\'statement : PRINT expressions \';\'expressions : expression\n                   | expressions \',\' expressionexpression : \'[\' minit \']\'\n                  | \'[\' \']\'minit : mrow \';\'\n             | mrow\n             | \'[\' mrow \']\' \',\'\n             | \'[\' mrow \']\'\n             | mrow \';\' minit\n             | \'[\' mrow \']\' \',\' minitmrow : number\n            | number \',\' mrownumber : INTNUMnumber : FLOATNUMexpression : assignable \'=\' expressionexpression : \'-\' expressionexpression : expression "\'"expression : assignable ADDASSIGN expression\n                  | assignable SUBASSIGN expression\n                  | assignable MULASSIGN expression\n                  | assignable DIVASSIGN expressionexpression : expression \'+\' expression\n                  | expression \'-\' expression\n                  | expression DOTADD expression\n                  | expression DOTSUB expressionexpression : expression \'*\' expression\n                  | expression \'/\' expression\n                  | expression DOTMUL expression\n                  | expression DOTDIV expressionexpression : expression EQ expression\n                  | expression NOTEQ expression\n                  | expression GT expression\n                  | expression LT expression\n                  | expression GTEQ expression\n                  | expression LTEQ expressionnumbers : number\n               | numbers \',\' numberexpression : ZEROS \'(\' numbers \')\'\n                  | ONES \'(\' numbers \')\'\n                  | EYE \'(\' numbers \')\'\n                  | ID \'(\' expressions \')\'expression : numberexpression : STRINGexpression : assignableassignable : IDassignable : matrixcellgettermatrixcellgetter : ID \'[\' expression \',\' expression \']\'\n                        | ID \'[\' expression \']\'expression : \'(\' expression \')\'expression : BREAKexpression : CONTINUEexpression : rangerange : expression \':\' expression'
    
_lr_action_items = {'{':([0,2,3,4,6,12,13,15,18,23,24,25,26,27,28,29,30,31,47,59,62,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,95,100,102,105,106,107,108,109,115,116,118,119,121,123,127,129,130,131,132,133,134,138,139,141,],[6,6,-12,-2,6,-61,-68,-59,-60,-58,-66,-67,-62,-29,-30,-13,-14,-33,6,-6,-20,-32,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-69,-15,-16,-65,-9,-19,-31,-34,-35,-36,-37,6,6,6,6,-57,-64,-54,-55,-56,-3,-7,-5,-8,6,-63,-4,]),'PRINT':([0,2,3,4,6,12,13,15,18,23,24,25,26,27,28,29,30,31,47,59,62,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,95,100,102,105,106,107,108,109,115,116,118,119,121,123,127,129,130,131,132,133,134,138,139,141,],[7,7,-12,-2,7,-61,-68,-59,-60,-58,-66,-67,-62,-29,-30,-13,-14,-33,7,-6,-20,-32,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-69,-15,-16,-65,-9,-19,-31,-34,-35,-36,-37,7,7,7,7,-57,-64,-54,-55,-56,-3,-7,-5,-8,7,-63,-4,]),'IF':([0,2,3,4,6,12,13,15,18,23,24,25,26,27,28,29,30,31,47,59,62,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,95,100,102,105,106,107,108,109,115,116,118,119,121,123,127,129,130,131,132,133,134,138,139,141,],[8,8,-12,-2,8,-61,-68,-59,-60,-58,-66,-67,-62,-29,-30,-13,-14,-33,8,-6,-20,-32,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-69,-15,-16,-65,-9,-19,-31,-34,-35,-36,-37,8,8,8,8,-57,-64,-54,-55,-56,-3,-7,-5,-8,8,-63,-4,]),'WHILE':([0,2,3,4,6,12,13,15,18,23,24,25,26,27,28,29,30,31,47,59,62,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,95,100,102,105,106,107,108,109,115,116,118,119,121,123,127,129,130,131,132,133,134,138,139,141,],[10,10,-12,-2,10,-61,-68,-59,-60,-58,-66,-67,-62,-29,-30,-13,-14,-33,10,-6,-20,-32,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-69,-15,-16,-65,-9,-19,-31,-34,-35,-36,-37,10,10,10,10,-57,-64,-54,-55,-56,-3,-7,-5,-8,10,-63,-4,]),'FOR':([0,2,3,4,6,12,13,15,18,23,24,25,26,27,28,29,30,31,47,59,62,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,95,100,102,105,106,107,108,109,115,116,118,119,121,123,127,129,130,131,132,133,134,138,139,141,],[11,11,-12,-2,11,-61,-68,-59,-60,-58,-66,-67,-62,-29,-30,-13,-14,-33,11,-6,-20,-32,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-69,-15,-16,-65,-9,-19,-31,-34,-35,-36,-37,11,11,11,11,-57,-64,-54,-55,-56,-3,-7,-5,-8,11,-63,-4,]),'IMPORT':([0,2,3,4,6,12,13,15,18,23,24,25,26,27,28,29,30,31,47,59,62,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,95,100,102,105,106,107,108,109,115,116,118,119,121,123,127,129,130,131,132,133,134,138,139,141,],[14,14,-12,-2,14,-61,-68,-59,-60,-58,-66,-67,-62,-29,-30,-13,-14,-33,14,-6,-20,-32,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-69,-15,-16,-65,-9,-19,-31,-34,-35,-36,-37,14,14,14,14,-57,-64,-54,-55,-56,-3,-7,-5,-8,14,-63,-4,]),'RETURN':([0,2,3,4,6,7,9,12,13,15,16,18,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,54,56,57,59,62,65,66,67,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,97,100,102,105,106,107,108,109,115,116,118,119,121,122,123,127,129,130,131,132,133,134,138,139,141,],[16,16,-12,-2,16,16,16,-61,-68,-59,16,-60,16,-58,-66,-67,-62,-29,-30,-13,-14,-33,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-6,-20,16,16,16,16,16,-32,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-69,-15,-16,16,-65,16,-9,-19,-31,-34,-35,-36,-37,16,16,16,16,-57,16,-64,-54,-55,-56,-3,-7,-5,-8,16,-63,-4,]),'(':([0,2,3,4,6,7,8,9,10,12,13,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,53,54,56,57,59,62,65,66,67,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,97,100,102,105,106,107,108,109,115,116,118,119,121,122,123,127,129,130,131,132,133,134,138,139,141,],[9,9,-12,-2,9,9,50,9,54,56,-68,-59,9,-60,9,71,72,73,-58,-66,-67,-62,-29,-30,-13,-14,-33,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,56,9,9,9,-6,-20,9,9,9,9,9,-32,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-69,-15,-16,9,-65,9,-9,-19,-31,-34,-35,-36,-37,9,9,9,9,-57,9,-64,-54,-55,-56,-3,-7,-5,-8,9,-63,-4,]),'[':([0,2,3,4,6,7,9,12,13,15,16,17,18,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,53,54,56,57,59,62,65,66,67,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,97,100,102,103,105,106,107,108,109,115,116,118,119,121,122,123,127,129,130,131,132,133,134,136,138,139,141,],[17,17,-12,-2,17,17,17,57,-68,-59,17,60,-60,17,-58,-66,-67,-62,-29,-30,-13,-14,-33,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,57,17,17,17,-6,-20,17,17,17,17,17,-32,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-69,-15,-16,17,-65,17,-9,-19,60,-31,-34,-35,-36,-37,17,17,17,17,-57,17,-64,-54,-55,-56,-3,-7,-5,-8,60,17,-63,-4,]),'-':([0,2,3,4,5,6,7,9,12,13,15,16,18,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,49,50,52,53,54,56,57,59,62,65,66,67,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,95,96,97,99,100,102,105,106,107,108,109,114,115,116,118,119,120,121,122,123,127,129,130,131,132,133,134,135,138,139,141,],[19,19,-12,-2,33,19,19,19,-61,-68,-59,19,-60,19,-58,-66,-67,-62,-29,-30,-13,-14,-33,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,33,19,33,-61,19,19,19,33,-20,19,19,19,19,19,-32,-38,-39,-40,-41,-42,-43,-44,-45,33,33,33,33,33,33,33,-15,-16,19,33,-65,33,19,33,-9,-19,33,33,33,33,33,33,19,19,19,19,33,-57,19,-64,-54,-55,-56,-3,-7,-5,-8,33,19,-63,-4,]),'ZEROS':([0,2,3,4,6,7,9,12,13,15,16,18,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,54,56,57,59,62,65,66,67,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,97,100,102,105,106,107,108,109,115,116,118,119,121,122,123,127,129,130,131,132,133,134,138,139,141,],[20,20,-12,-2,20,20,20,-61,-68,-59,20,-60,20,-58,-66,-67,-62,-29,-30,-13,-14,-33,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,-6,-20,20,20,20,20,20,-32,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-69,-15,-16,20,-65,20,-9,-19,-31,-34,-35,-36,-37,20,20,20,20,-57,20,-64,-54,-55,-56,-3,-7,-5,-8,20,-63,-4,]),'ONES':([0,2,3,4,6,7,9,12,13,15,16,18,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,54,56,57,59,62,65,66,67,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,97,100,102,105,106,107,108,109,115,116,118,119,121,122,123,127,129,130,131,132,133,134,138,139,141,],[21,21,-12,-2,21,21,21,-61,-68,-59,21,-60,21,-58,-66,-67,-62,-29,-30,-13,-14,-33,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,-6,-20,21,21,21,21,21,-32,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-69,-15,-16,21,-65,21,-9,-19,-31,-34,-35,-36,-37,21,21,21,21,-57,21,-64,-54,-55,-56,-3,-7,-5,-8,21,-63,-4,]),'EYE':([0,2,3,4,6,7,9,12,13,15,16,18,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,54,56,57,59,62,65,66,67,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,97,100,102,105,106,107,108,109,115,116,118,119,121,122,123,127,129,130,131,132,133,134,138,139,141,],[22,22,-12,-2,22,22,22,-61,-68,-59,22,-60,22,-58,-66,-67,-62,-29,-30,-13,-14,-33,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,-6,-20,22,22,22,22,22,-32,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-69,-15,-16,22,-65,22,-9,-19,-31,-34,-35,-36,-37,22,22,22,22,-57,22,-64,-54,-55,-56,-3,-7,-5,-8,22,-63,-4,]),'ID':([0,2,3,4,6,7,9,11,12,13,15,16,18,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,54,56,57,59,62,65,66,67,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,94,95,97,100,102,105,106,107,108,109,115,116,118,119,121,122,123,127,129,130,131,132,133,134,138,139,141,],[12,12,-12,-2,12,12,53,55,-61,-68,-59,12,-60,12,-58,-66,-67,-62,-29,-30,-13,-14,-33,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-6,-20,12,12,12,12,12,-32,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-69,-15,-16,12,117,-65,12,-9,-19,-31,-34,-35,-36,-37,12,12,12,12,-57,12,-64,-54,-55,-56,-3,-7,-5,-8,12,-63,-4,]),'STRING':([0,2,3,4,6,7,9,12,13,14,15,16,18,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,54,56,57,59,62,65,66,67,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,97,100,102,105,106,107,108,109,115,116,118,119,121,122,123,127,129,130,131,132,133,134,138,139,141,],[15,15,-12,-2,15,15,15,-61,-68,58,-59,15,-60,15,-58,-66,-67,-62,-29,-30,-13,-14,-33,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-6,-20,15,15,15,15,15,-32,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-69,-15,-16,15,-65,15,-9,-19,-31,-34,-35,-36,-37,15,15,15,15,-57,15,-64,-54,-55,-56,-3,-7,-5,-8,15,-63,-4,]),'BREAK':([0,2,3,4,6,7,9,12,13,15,16,18,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,54,56,57,59,62,65,66,67,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,97,100,102,105,106,107,108,109,115,116,118,119,121,122,123,127,129,130,131,132,133,134,138,139,141,],[24,24,-12,-2,24,24,24,-61,-68,-59,24,-60,24,-58,-66,-67,-62,-29,-30,-13,-14,-33,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,-6,-20,24,24,24,24,24,-32,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-69,-15,-16,24,-65,24,-9,-19,-31,-34,-35,-36,-37,24,24,24,24,-57,24,-64,-54,-55,-56,-3,-7,-5,-8,24,-63,-4,]),'CONTINUE':([0,2,3,4,6,7,9,12,13,15,16,18,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,54,56,57,59,62,65,66,67,68,69,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,97,100,102,105,106,107,108,109,115,116,118,119,121,122,123,127,129,130,131,132,133,134,138,139,141,],[25,25,-12,-2,25,25,25,-61,-68,-59,25,-60,25,-58,-66,-67,-62,-29,-30,-13,-14,-33,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,-6,-20,25,25,25,25,25,-32,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-69,-15,-16,25,-65,25,-9,-19,-31,-34,-35,-36,-37,25,25,25,25,-57,25,-64,-54,-55,-56,-3,-7,-5,-8,25,-63,-4,]),'INTNUM':([0,2,3,4,6,7,9,12,13,15,16,17,18,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,54,56,57,59,60,62,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,97,100,102,103,104,105,106,107,108,109,115,116,118,119,121,122,123,127,128,129,130,131,132,133,134,136,138,139,141,],[27,27,-12,-2,27,27,27,-61,-68,-59,27,27,-60,27,-58,-66,-67,-62,-29,-30,-13,-14,-33,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,-6,27,-20,27,27,27,27,27,-32,27,27,27,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-69,-15,-16,27,-65,27,-9,-19,27,27,-31,-34,-35,-36,-37,27,27,27,27,-57,27,-64,-54,27,-55,-56,-3,-7,-5,-8,27,27,-63,-4,]),'FLOATNUM':([0,2,3,4,6,7,9,12,13,15,16,17,18,19,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,54,56,57,59,60,62,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,95,97,100,102,103,104,105,106,107,108,109,115,116,118,119,121,122,123,127,128,129,130,131,132,133,134,136,138,139,141,],[28,28,-12,-2,28,28,28,-61,-68,-59,28,28,-60,28,-58,-66,-67,-62,-29,-30,-13,-14,-33,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-6,28,-20,28,28,28,28,28,-32,28,28,28,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-69,-15,-16,28,-65,28,-9,-19,28,28,-31,-34,-35,-36,-37,28,28,28,28,-57,28,-64,-54,28,-55,-56,-3,-7,-5,-8,28,28,-63,-4,]),'$end':([1,2,3,4,29,30,89,90,100,131,133,134,141,],[0,-1,-12,-2,-13,-14,-15,-16,-9,-3,-5,-8,-4,]),'}':([3,4,29,30,47,89,90,100,131,133,134,141,],[-12,-2,-13,-14,89,-15,-16,-9,-3,-5,-8,-4,]),'ELSE':([4,30,89,90,100,131,133,134,141,],[-2,-14,-15,-16,-9,138,-5,-8,-4,]),';':([4,5,12,13,15,18,23,24,25,26,27,28,30,31,48,49,58,59,62,63,64,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,95,100,102,105,106,107,108,109,114,121,123,126,127,129,130,131,132,133,134,139,141,],[-2,30,-61,-68,-59,-60,-58,-66,-67,-62,-29,-30,-14,-33,90,-17,100,-6,-20,103,-27,-32,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-69,-15,-16,-65,-9,-19,-31,-34,-35,-36,-37,-18,-57,-64,-28,-54,-55,-56,-3,-7,-5,-8,-63,-4,]),"'":([4,5,12,13,15,18,23,24,25,26,27,28,30,31,49,52,53,59,62,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,95,96,99,100,102,105,106,107,108,109,114,119,120,121,123,127,129,130,131,132,133,134,135,139,141,],[-2,31,-61,-68,-59,-60,-58,-66,-67,-62,-29,-30,-14,-33,31,31,-61,31,-20,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,-15,-16,31,-65,31,31,-9,-19,31,31,31,31,31,31,-68,31,-57,-64,-54,-55,-56,-3,-7,-5,-8,31,-63,-4,]),'+':([4,5,12,13,15,18,23,24,25,26,27,28,30,31,49,52,53,59,62,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,95,96,99,100,102,105,106,107,108,109,114,119,120,121,123,127,129,130,131,132,133,134,135,139,141,],[-2,32,-61,-68,-59,-60,-58,-66,-67,-62,-29,-30,-14,-33,32,32,-61,32,-20,-32,-38,-39,-40,-41,-42,-43,-44,-45,32,32,32,32,32,32,32,-15,-16,32,-65,32,32,-9,-19,32,32,32,32,32,32,-68,32,-57,-64,-54,-55,-56,-3,-7,-5,-8,32,-63,-4,]),'DOTADD':([4,5,12,13,15,18,23,24,25,26,27,28,30,31,49,52,53,59,62,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,95,96,99,100,102,105,106,107,108,109,114,119,120,121,123,127,129,130,131,132,133,134,135,139,141,],[-2,34,-61,-68,-59,-60,-58,-66,-67,-62,-29,-30,-14,-33,34,34,-61,34,-20,-32,-38,-39,-40,-41,-42,-43,-44,-45,34,34,34,34,34,34,34,-15,-16,34,-65,34,34,-9,-19,34,34,34,34,34,34,-68,34,-57,-64,-54,-55,-56,-3,-7,-5,-8,34,-63,-4,]),'DOTSUB':([4,5,12,13,15,18,23,24,25,26,27,28,30,31,49,52,53,59,62,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,95,96,99,100,102,105,106,107,108,109,114,119,120,121,123,127,129,130,131,132,133,134,135,139,141,],[-2,35,-61,-68,-59,-60,-58,-66,-67,-62,-29,-30,-14,-33,35,35,-61,35,-20,-32,-38,-39,-40,-41,-42,-43,-44,-45,35,35,35,35,35,35,35,-15,-16,35,-65,35,35,-9,-19,35,35,35,35,35,35,-68,35,-57,-64,-54,-55,-56,-3,-7,-5,-8,35,-63,-4,]),'*':([4,5,12,13,15,18,23,24,25,26,27,28,30,31,49,52,53,59,62,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,95,96,99,100,102,105,106,107,108,109,114,119,120,121,123,127,129,130,131,132,133,134,135,139,141,],[-2,36,-61,-68,-59,-60,-58,-66,-67,-62,-29,-30,-14,-33,36,36,-61,36,-20,36,36,36,36,36,-42,-43,-44,-45,36,36,36,36,36,36,36,-15,-16,36,-65,36,36,-9,-19,36,36,36,36,36,36,-68,36,-57,-64,-54,-55,-56,-3,-7,-5,-8,36,-63,-4,]),'/':([4,5,12,13,15,18,23,24,25,26,27,28,30,31,49,52,53,59,62,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,95,96,99,100,102,105,106,107,108,109,114,119,120,121,123,127,129,130,131,132,133,134,135,139,141,],[-2,37,-61,-68,-59,-60,-58,-66,-67,-62,-29,-30,-14,-33,37,37,-61,37,-20,37,37,37,37,37,-42,-43,-44,-45,37,37,37,37,37,37,37,-15,-16,37,-65,37,37,-9,-19,37,37,37,37,37,37,-68,37,-57,-64,-54,-55,-56,-3,-7,-5,-8,37,-63,-4,]),'DOTMUL':([4,5,12,13,15,18,23,24,25,26,27,28,30,31,49,52,53,59,62,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,95,96,99,100,102,105,106,107,108,109,114,119,120,121,123,127,129,130,131,132,133,134,135,139,141,],[-2,38,-61,-68,-59,-60,-58,-66,-67,-62,-29,-30,-14,-33,38,38,-61,38,-20,38,38,38,38,38,-42,-43,-44,-45,38,38,38,38,38,38,38,-15,-16,38,-65,38,38,-9,-19,38,38,38,38,38,38,-68,38,-57,-64,-54,-55,-56,-3,-7,-5,-8,38,-63,-4,]),'DOTDIV':([4,5,12,13,15,18,23,24,25,26,27,28,30,31,49,52,53,59,62,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,95,96,99,100,102,105,106,107,108,109,114,119,120,121,123,127,129,130,131,132,133,134,135,139,141,],[-2,39,-61,-68,-59,-60,-58,-66,-67,-62,-29,-30,-14,-33,39,39,-61,39,-20,39,39,39,39,39,-42,-43,-44,-45,39,39,39,39,39,39,39,-15,-16,39,-65,39,39,-9,-19,39,39,39,39,39,39,-68,39,-57,-64,-54,-55,-56,-3,-7,-5,-8,39,-63,-4,]),'EQ':([4,5,12,13,15,18,23,24,25,26,27,28,30,31,49,52,53,59,62,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,95,96,99,100,102,105,106,107,108,109,114,119,120,121,123,127,129,130,131,132,133,134,135,139,141,],[-2,40,-61,-68,-59,-60,-58,-66,-67,-62,-29,-30,-14,-33,40,40,-61,40,-20,-32,-38,-39,-40,-41,-42,-43,-44,-45,-46,40,-48,-49,-50,-51,40,-15,-16,40,-65,40,40,-9,-19,40,40,40,40,40,40,-68,40,-57,-64,-54,-55,-56,-3,-7,-5,-8,40,-63,-4,]),'NOTEQ':([4,5,12,13,15,18,23,24,25,26,27,28,30,31,49,52,53,59,62,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,95,96,99,100,102,105,106,107,108,109,114,119,120,121,123,127,129,130,131,132,133,134,135,139,141,],[-2,41,-61,-68,-59,-60,-58,-66,-67,-62,-29,-30,-14,-33,41,41,-61,41,-20,-32,-38,-39,-40,-41,-42,-43,-44,-45,-46,41,-48,-49,-50,-51,41,-15,-16,41,-65,41,41,-9,-19,-31,41,41,41,41,41,-68,41,-57,-64,-54,-55,-56,-3,-7,-5,-8,41,-63,-4,]),'GT':([4,5,12,13,15,18,23,24,25,26,27,28,30,31,49,52,53,59,62,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,95,96,99,100,102,105,106,107,108,109,114,119,120,121,123,127,129,130,131,132,133,134,135,139,141,],[-2,42,-61,-68,-59,-60,-58,-66,-67,-62,-29,-30,-14,-33,42,42,-61,42,-20,-32,-38,-39,-40,-41,-42,-43,-44,-45,-46,42,-48,-49,-50,-51,42,-15,-16,42,-65,42,42,-9,-19,42,42,42,42,42,42,-68,42,-57,-64,-54,-55,-56,-3,-7,-5,-8,42,-63,-4,]),'LT':([4,5,12,13,15,18,23,24,25,26,27,28,30,31,49,52,53,59,62,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,95,96,99,100,102,105,106,107,108,109,114,119,120,121,123,127,129,130,131,132,133,134,135,139,141,],[-2,43,-61,-68,-59,-60,-58,-66,-67,-62,-29,-30,-14,-33,43,43,-61,43,-20,-32,-38,-39,-40,-41,-42,-43,-44,-45,-46,43,-48,-49,-50,-51,43,-15,-16,43,-65,43,43,-9,-19,43,43,43,43,43,43,-68,43,-57,-64,-54,-55,-56,-3,-7,-5,-8,43,-63,-4,]),'GTEQ':([4,5,12,13,15,18,23,24,25,26,27,28,30,31,49,52,53,59,62,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,95,96,99,100,102,105,106,107,108,109,114,119,120,121,123,127,129,130,131,132,133,134,135,139,141,],[-2,44,-61,-68,-59,-60,-58,-66,-67,-62,-29,-30,-14,-33,44,44,-61,44,-20,-32,-38,-39,-40,-41,-42,-43,-44,-45,-46,44,-48,-49,-50,-51,44,-15,-16,44,-65,44,44,-9,-19,44,44,44,44,44,44,-68,44,-57,-64,-54,-55,-56,-3,-7,-5,-8,44,-63,-4,]),'LTEQ':([4,5,12,13,15,18,23,24,25,26,27,28,30,31,49,52,53,59,62,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,95,96,99,100,102,105,106,107,108,109,114,119,120,121,123,127,129,130,131,132,133,134,135,139,141,],[-2,45,-61,-68,-59,-60,-58,-66,-67,-62,-29,-30,-14,-33,45,45,-61,45,-20,-32,-38,-39,-40,-41,-42,-43,-44,-45,-46,45,-48,-49,-50,-51,45,-15,-16,45,-65,45,45,-9,-19,45,45,45,45,45,45,-68,45,-57,-64,-54,-55,-56,-3,-7,-5,-8,45,-63,-4,]),':':([4,5,12,13,15,18,23,24,25,26,27,28,30,31,49,52,53,59,62,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,95,96,99,100,102,105,106,107,108,109,114,119,120,121,123,127,129,130,131,132,133,134,135,139,141,],[-2,46,-61,-68,-59,-60,-58,-66,-67,-62,-29,-30,-14,-33,46,46,-61,46,-20,-32,-38,-39,-40,-41,-42,-43,-44,-45,-46,46,-48,-49,-50,-51,46,-15,-16,46,-65,46,46,-9,-19,-31,46,46,46,46,46,-68,46,-57,-64,-54,-55,-56,-3,-7,-5,-8,46,-63,-4,]),',':([4,12,13,15,18,23,24,25,26,27,28,30,31,48,49,51,53,59,62,64,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,95,98,99,100,102,105,106,107,108,109,110,111,112,113,114,117,121,123,124,127,129,130,131,132,133,134,137,139,141,],[-2,-61,-68,-59,-60,-58,-66,-67,-62,-29,-30,-14,-33,91,-17,94,-10,-6,-20,104,-32,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-69,-15,-16,-65,91,122,-9,-19,-31,-34,-35,-36,-37,128,-52,128,128,-18,-11,-57,-64,136,-54,-55,-56,-3,-7,-5,-8,-53,-63,-4,]),')':([4,12,13,15,18,23,24,25,26,27,28,30,31,49,51,52,53,59,62,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,92,95,96,98,100,102,105,106,107,108,109,110,111,112,113,114,117,121,123,127,129,130,131,132,133,134,137,139,141,],[-2,-61,-68,-59,-60,-58,-66,-67,-62,-29,-30,-14,-33,-17,93,95,-10,-6,-20,-32,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-69,-15,-16,115,-65,118,121,-9,-19,-31,-34,-35,-36,-37,127,-52,129,130,-18,-11,-57,-64,-54,-55,-56,-3,-7,-5,-8,-53,-63,-4,]),']':([4,12,13,15,17,18,23,24,25,26,27,28,30,31,59,61,62,63,64,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,95,99,100,101,102,103,105,106,107,108,109,121,123,124,125,126,127,129,130,131,132,133,134,135,136,139,140,141,],[-2,-61,-68,-59,62,-60,-58,-66,-67,-62,-29,-30,-14,-33,-6,102,-20,-22,-27,-32,-38,-39,-40,-41,-42,-43,-44,-45,-46,-47,-48,-49,-50,-51,-69,-15,-16,-65,123,-9,124,-19,-21,-31,-34,-35,-36,-37,-57,-64,-24,-25,-28,-54,-55,-56,-3,-7,-5,-8,139,-23,-63,-26,-4,]),'=':([12,18,26,53,55,123,139,],[-61,65,-62,-61,97,-64,-63,]),'ADDASSIGN':([12,18,26,53,123,139,],[-61,66,-62,-61,-64,-63,]),'SUBASSIGN':([12,18,26,53,123,139,],[-61,67,-62,-61,-64,-63,]),'MULASSIGN':([12,18,26,53,123,139,],[-61,68,-62,-61,-64,-63,]),'DIVASSIGN':([12,18,26,53,123,139,],[-61,69,-62,-61,-64,-63,]),'ARROW':([93,],[116,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'start':([0,],[1,]),'statements':([0,6,],[2,47,]),'statement':([0,2,6,47,115,116,118,119,138,],[3,29,3,29,131,132,133,134,141,]),'instruction':([0,2,6,47,115,116,118,119,138,],[4,4,4,4,4,4,4,4,4,]),'expression':([0,2,6,7,9,16,19,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,54,56,57,65,66,67,68,69,91,97,115,116,118,119,122,138,],[5,5,5,49,52,59,70,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,5,92,96,49,99,105,106,107,108,109,114,120,5,5,5,5,135,5,]),'range':([0,2,6,7,9,16,19,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,54,56,57,65,66,67,68,69,91,97,115,116,118,119,122,138,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,119,13,13,13,13,13,13,]),'assignable':([0,2,6,7,9,16,19,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,54,56,57,65,66,67,68,69,91,97,115,116,118,119,122,138,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'number':([0,2,6,7,9,16,17,19,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,54,56,57,60,65,66,67,68,69,71,72,73,91,97,103,104,115,116,118,119,122,128,136,138,],[23,23,23,23,23,23,64,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,64,23,23,23,23,23,111,111,111,23,23,64,64,23,23,23,23,23,137,64,23,]),'matrixcellgetter':([0,2,6,7,9,16,19,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,50,54,56,57,65,66,67,68,69,91,97,115,116,118,119,122,138,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'expressions':([7,56,],[48,98,]),'args':([9,],[51,]),'minit':([17,103,136,],[61,125,140,]),'mrow':([17,60,103,104,136,],[63,101,63,126,63,]),'numbers':([71,72,73,],[110,112,113,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> statements','start',1,'p_start','parser.py',28),
  ('statement -> instruction','statement',1,'p_statement_instruction','parser.py',32),
  ('instruction -> IF ( expression ) statement','instruction',5,'p_instruction_if','parser.py',36),
  ('instruction -> IF ( expression ) statement ELSE statement','instruction',7,'p_instruction_if','parser.py',37),
  ('instruction -> WHILE ( expression ) statement','instruction',5,'p_instruction_while','parser.py',44),
  ('expression -> RETURN expression','expression',2,'p_expression_return','parser.py',48),
  ('expression -> ( args ) ARROW statement','expression',5,'p_instruction_def','parser.py',52),
  ('instruction -> FOR ID = range statement','instruction',5,'p_instruction_for','parser.py',56),
  ('instruction -> IMPORT STRING ;','instruction',3,'p_instruction_import','parser.py',60),
  ('args -> ID','args',1,'p_args','parser.py',64),
  ('args -> args , ID','args',3,'p_args','parser.py',65),
  ('statements -> statement','statements',1,'p_statements','parser.py',72),
  ('statements -> statements statement','statements',2,'p_statements','parser.py',73),
  ('statement -> expression ;','statement',2,'p_statement_expression','parser.py',80),
  ('statement -> { statements }','statement',3,'p_statement_statements','parser.py',84),
  ('statement -> PRINT expressions ;','statement',3,'p_statement_print','parser.py',88),
  ('expressions -> expression','expressions',1,'p_expressions','parser.py',92),
  ('expressions -> expressions , expression','expressions',3,'p_expressions','parser.py',93),
  ('expression -> [ minit ]','expression',3,'p_mexpression_minit','parser.py',100),
  ('expression -> [ ]','expression',2,'p_mexpression_minit','parser.py',101),
  ('minit -> mrow ;','minit',2,'p_minit','parser.py',108),
  ('minit -> mrow','minit',1,'p_minit','parser.py',109),
  ('minit -> [ mrow ] ,','minit',4,'p_minit','parser.py',110),
  ('minit -> [ mrow ]','minit',3,'p_minit','parser.py',111),
  ('minit -> mrow ; minit','minit',3,'p_minit','parser.py',112),
  ('minit -> [ mrow ] , minit','minit',5,'p_minit','parser.py',113),
  ('mrow -> number','mrow',1,'p_mrow','parser.py',125),
  ('mrow -> number , mrow','mrow',3,'p_mrow','parser.py',126),
  ('number -> INTNUM','number',1,'p_number_intnum','parser.py',133),
  ('number -> FLOATNUM','number',1,'p_number_floatnum','parser.py',137),
  ('expression -> assignable = expression','expression',3,'p_expression_assignment','parser.py',141),
  ('expression -> - expression','expression',2,'p_expression_unaryminus','parser.py',145),
  ("expression -> expression '",'expression',2,'p_expression_matrixtranspose','parser.py',149),
  ('expression -> assignable ADDASSIGN expression','expression',3,'p_expression_fancy_assign','parser.py',153),
  ('expression -> assignable SUBASSIGN expression','expression',3,'p_expression_fancy_assign','parser.py',154),
  ('expression -> assignable MULASSIGN expression','expression',3,'p_expression_fancy_assign','parser.py',155),
  ('expression -> assignable DIVASSIGN expression','expression',3,'p_expression_fancy_assign','parser.py',156),
  ('expression -> expression + expression','expression',3,'p_expression_sum','parser.py',168),
  ('expression -> expression - expression','expression',3,'p_expression_sum','parser.py',169),
  ('expression -> expression DOTADD expression','expression',3,'p_expression_sum','parser.py',170),
  ('expression -> expression DOTSUB expression','expression',3,'p_expression_sum','parser.py',171),
  ('expression -> expression * expression','expression',3,'p_expression_mul','parser.py',183),
  ('expression -> expression / expression','expression',3,'p_expression_mul','parser.py',184),
  ('expression -> expression DOTMUL expression','expression',3,'p_expression_mul','parser.py',185),
  ('expression -> expression DOTDIV expression','expression',3,'p_expression_mul','parser.py',186),
  ('expression -> expression EQ expression','expression',3,'p_expression_cond','parser.py',198),
  ('expression -> expression NOTEQ expression','expression',3,'p_expression_cond','parser.py',199),
  ('expression -> expression GT expression','expression',3,'p_expression_cond','parser.py',200),
  ('expression -> expression LT expression','expression',3,'p_expression_cond','parser.py',201),
  ('expression -> expression GTEQ expression','expression',3,'p_expression_cond','parser.py',202),
  ('expression -> expression LTEQ expression','expression',3,'p_expression_cond','parser.py',203),
  ('numbers -> number','numbers',1,'p_numbers','parser.py',219),
  ('numbers -> numbers , number','numbers',3,'p_numbers','parser.py',220),
  ('expression -> ZEROS ( numbers )','expression',4,'p_expression_function','parser.py',227),
  ('expression -> ONES ( numbers )','expression',4,'p_expression_function','parser.py',228),
  ('expression -> EYE ( numbers )','expression',4,'p_expression_function','parser.py',229),
  ('expression -> ID ( expressions )','expression',4,'p_expression_function','parser.py',230),
  ('expression -> number','expression',1,'p_expression_number','parser.py',241),
  ('expression -> STRING','expression',1,'p_expression_string','parser.py',245),
  ('expression -> assignable','expression',1,'p_expression_assignable','parser.py',249),
  ('assignable -> ID','assignable',1,'p_expression_id','parser.py',253),
  ('assignable -> matrixcellgetter','assignable',1,'p_assignable_matrixcellgetter','parser.py',257),
  ('matrixcellgetter -> ID [ expression , expression ]','matrixcellgetter',6,'p_matrixcellgetter','parser.py',261),
  ('matrixcellgetter -> ID [ expression ]','matrixcellgetter',4,'p_matrixcellgetter','parser.py',262),
  ('expression -> ( expression )','expression',3,'p_expression_group','parser.py',269),
  ('expression -> BREAK','expression',1,'p_expression_break','parser.py',273),
  ('expression -> CONTINUE','expression',1,'p_expression_continue','parser.py',277),
  ('expression -> range','expression',1,'p_expression_range','parser.py',281),
  ('range -> expression : expression','range',3,'p_range','parser.py',285),
]
