Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    COMMENT

Grammar

Rule 0     S' -> start
Rule 1     start -> statements
Rule 2     statement -> instruction
Rule 3     instruction -> IF ( expression ) statement
Rule 4     instruction -> IF ( expression ) statement ELSE statement
Rule 5     instruction -> WHILE ( expression ) statement
Rule 6     expression -> RETURN expression
Rule 7     expression -> ( args ) ARROW statement
Rule 8     instruction -> FOR ID = range statement
Rule 9     instruction -> IMPORT STRING ;
Rule 10    args -> ID
Rule 11    args -> args , ID
Rule 12    statements -> statement
Rule 13    statements -> statements statement
Rule 14    statement -> expression ;
Rule 15    statement -> { statements }
Rule 16    statement -> PRINT expressions ;
Rule 17    expressions -> expression
Rule 18    expressions -> expressions , expression
Rule 19    expression -> [ minit ]
Rule 20    expression -> [ ]
Rule 21    minit -> mrow ;
Rule 22    minit -> mrow
Rule 23    minit -> [ mrow ] ,
Rule 24    minit -> [ mrow ]
Rule 25    minit -> mrow ; minit
Rule 26    minit -> [ mrow ] , minit
Rule 27    mrow -> number
Rule 28    mrow -> number , mrow
Rule 29    number -> INTNUM
Rule 30    number -> FLOATNUM
Rule 31    expression -> assignable = expression
Rule 32    expression -> - expression
Rule 33    expression -> expression '
Rule 34    expression -> assignable ADDASSIGN expression
Rule 35    expression -> assignable SUBASSIGN expression
Rule 36    expression -> assignable MULASSIGN expression
Rule 37    expression -> assignable DIVASSIGN expression
Rule 38    expression -> expression + expression
Rule 39    expression -> expression - expression
Rule 40    expression -> expression DOTADD expression
Rule 41    expression -> expression DOTSUB expression
Rule 42    expression -> expression * expression
Rule 43    expression -> expression / expression
Rule 44    expression -> expression DOTMUL expression
Rule 45    expression -> expression DOTDIV expression
Rule 46    expression -> expression EQ expression
Rule 47    expression -> expression NOTEQ expression
Rule 48    expression -> expression GT expression
Rule 49    expression -> expression LT expression
Rule 50    expression -> expression GTEQ expression
Rule 51    expression -> expression LTEQ expression
Rule 52    numbers -> number
Rule 53    numbers -> numbers , number
Rule 54    expression -> ZEROS ( numbers )
Rule 55    expression -> ONES ( numbers )
Rule 56    expression -> EYE ( numbers )
Rule 57    expression -> ID ( expressions )
Rule 58    expression -> number
Rule 59    expression -> STRING
Rule 60    expression -> assignable
Rule 61    assignable -> ID
Rule 62    assignable -> matrixcellgetter
Rule 63    matrixcellgetter -> ID [ expression , expression ]
Rule 64    matrixcellgetter -> ID [ expression ]
Rule 65    expression -> ( expression )
Rule 66    expression -> BREAK
Rule 67    expression -> CONTINUE
Rule 68    expression -> range
Rule 69    range -> expression : expression

Terminals, with rules where they appear

'                    : 33
(                    : 3 4 5 7 54 55 56 57 65
)                    : 3 4 5 7 54 55 56 57 65
*                    : 42
+                    : 38
,                    : 11 18 23 26 28 53 63
-                    : 32 39
/                    : 43
:                    : 69
;                    : 9 14 16 21 25
=                    : 8 31
ADDASSIGN            : 34
ARROW                : 7
BREAK                : 66
COMMENT              : 
CONTINUE             : 67
DIVASSIGN            : 37
DOTADD               : 40
DOTDIV               : 45
DOTMUL               : 44
DOTSUB               : 41
ELSE                 : 4
EQ                   : 46
EYE                  : 56
FLOATNUM             : 30
FOR                  : 8
GT                   : 48
GTEQ                 : 50
ID                   : 8 10 11 57 61 63 64
IF                   : 3 4
IMPORT               : 9
INTNUM               : 29
LT                   : 49
LTEQ                 : 51
MULASSIGN            : 36
NOTEQ                : 47
ONES                 : 55
PRINT                : 16
RETURN               : 6
STRING               : 9 59
SUBASSIGN            : 35
WHILE                : 5
ZEROS                : 54
[                    : 19 20 23 24 26 63 64
]                    : 19 20 23 24 26 63 64
error                : 
{                    : 15
}                    : 15

Nonterminals, with rules where they appear

args                 : 7 11
assignable           : 31 34 35 36 37 60
expression           : 3 4 5 6 14 17 18 31 32 33 34 35 36 37 38 38 39 39 40 40 41 41 42 42 43 43 44 44 45 45 46 46 47 47 48 48 49 49 50 50 51 51 63 63 64 65 69 69
expressions          : 16 18 57
instruction          : 2
matrixcellgetter     : 62
minit                : 19 25 26
mrow                 : 21 22 23 24 25 26 28
number               : 27 28 52 53 58
numbers              : 53 54 55 56
range                : 8 68
start                : 0
statement            : 3 4 4 5 7 8 12 13
statements           : 1 13 15

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . statements
    (12) statements -> . statement
    (13) statements -> . statements statement
    (2) statement -> . instruction
    (14) statement -> . expression ;
    (15) statement -> . { statements }
    (16) statement -> . PRINT expressions ;
    (3) instruction -> . IF ( expression ) statement
    (4) instruction -> . IF ( expression ) statement ELSE statement
    (5) instruction -> . WHILE ( expression ) statement
    (8) instruction -> . FOR ID = range statement
    (9) instruction -> . IMPORT STRING ;
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    {               shift and go to state 6
    PRINT           shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    IMPORT          shift and go to state 14
    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    start                          shift and go to state 1
    statements                     shift and go to state 2
    statement                      shift and go to state 3
    instruction                    shift and go to state 4
    expression                     shift and go to state 5
    range                          shift and go to state 13
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    matrixcellgetter               shift and go to state 26

state 1

    (0) S' -> start .



state 2

    (1) start -> statements .
    (13) statements -> statements . statement
    (2) statement -> . instruction
    (14) statement -> . expression ;
    (15) statement -> . { statements }
    (16) statement -> . PRINT expressions ;
    (3) instruction -> . IF ( expression ) statement
    (4) instruction -> . IF ( expression ) statement ELSE statement
    (5) instruction -> . WHILE ( expression ) statement
    (8) instruction -> . FOR ID = range statement
    (9) instruction -> . IMPORT STRING ;
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    $end            reduce using rule 1 (start -> statements .)
    {               shift and go to state 6
    PRINT           shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    IMPORT          shift and go to state 14
    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    statement                      shift and go to state 29
    instruction                    shift and go to state 4
    expression                     shift and go to state 5
    range                          shift and go to state 13
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    matrixcellgetter               shift and go to state 26

state 3

    (12) statements -> statement .

    {               reduce using rule 12 (statements -> statement .)
    PRINT           reduce using rule 12 (statements -> statement .)
    IF              reduce using rule 12 (statements -> statement .)
    WHILE           reduce using rule 12 (statements -> statement .)
    FOR             reduce using rule 12 (statements -> statement .)
    IMPORT          reduce using rule 12 (statements -> statement .)
    RETURN          reduce using rule 12 (statements -> statement .)
    (               reduce using rule 12 (statements -> statement .)
    [               reduce using rule 12 (statements -> statement .)
    -               reduce using rule 12 (statements -> statement .)
    ZEROS           reduce using rule 12 (statements -> statement .)
    ONES            reduce using rule 12 (statements -> statement .)
    EYE             reduce using rule 12 (statements -> statement .)
    ID              reduce using rule 12 (statements -> statement .)
    STRING          reduce using rule 12 (statements -> statement .)
    BREAK           reduce using rule 12 (statements -> statement .)
    CONTINUE        reduce using rule 12 (statements -> statement .)
    INTNUM          reduce using rule 12 (statements -> statement .)
    FLOATNUM        reduce using rule 12 (statements -> statement .)
    $end            reduce using rule 12 (statements -> statement .)
    }               reduce using rule 12 (statements -> statement .)


state 4

    (2) statement -> instruction .

    {               reduce using rule 2 (statement -> instruction .)
    PRINT           reduce using rule 2 (statement -> instruction .)
    IF              reduce using rule 2 (statement -> instruction .)
    WHILE           reduce using rule 2 (statement -> instruction .)
    FOR             reduce using rule 2 (statement -> instruction .)
    IMPORT          reduce using rule 2 (statement -> instruction .)
    RETURN          reduce using rule 2 (statement -> instruction .)
    (               reduce using rule 2 (statement -> instruction .)
    [               reduce using rule 2 (statement -> instruction .)
    -               reduce using rule 2 (statement -> instruction .)
    ZEROS           reduce using rule 2 (statement -> instruction .)
    ONES            reduce using rule 2 (statement -> instruction .)
    EYE             reduce using rule 2 (statement -> instruction .)
    ID              reduce using rule 2 (statement -> instruction .)
    STRING          reduce using rule 2 (statement -> instruction .)
    BREAK           reduce using rule 2 (statement -> instruction .)
    CONTINUE        reduce using rule 2 (statement -> instruction .)
    INTNUM          reduce using rule 2 (statement -> instruction .)
    FLOATNUM        reduce using rule 2 (statement -> instruction .)
    $end            reduce using rule 2 (statement -> instruction .)
    }               reduce using rule 2 (statement -> instruction .)
    ELSE            reduce using rule 2 (statement -> instruction .)
    ;               reduce using rule 2 (statement -> instruction .)
    '               reduce using rule 2 (statement -> instruction .)
    +               reduce using rule 2 (statement -> instruction .)
    DOTADD          reduce using rule 2 (statement -> instruction .)
    DOTSUB          reduce using rule 2 (statement -> instruction .)
    *               reduce using rule 2 (statement -> instruction .)
    /               reduce using rule 2 (statement -> instruction .)
    DOTMUL          reduce using rule 2 (statement -> instruction .)
    DOTDIV          reduce using rule 2 (statement -> instruction .)
    EQ              reduce using rule 2 (statement -> instruction .)
    NOTEQ           reduce using rule 2 (statement -> instruction .)
    GT              reduce using rule 2 (statement -> instruction .)
    LT              reduce using rule 2 (statement -> instruction .)
    GTEQ            reduce using rule 2 (statement -> instruction .)
    LTEQ            reduce using rule 2 (statement -> instruction .)
    :               reduce using rule 2 (statement -> instruction .)
    ,               reduce using rule 2 (statement -> instruction .)
    )               reduce using rule 2 (statement -> instruction .)
    ]               reduce using rule 2 (statement -> instruction .)


state 5

    (14) statement -> expression . ;
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

    ;               shift and go to state 30
    '               shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    DOTADD          shift and go to state 34
    DOTSUB          shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTMUL          shift and go to state 38
    DOTDIV          shift and go to state 39
    EQ              shift and go to state 40
    NOTEQ           shift and go to state 41
    GT              shift and go to state 42
    LT              shift and go to state 43
    GTEQ            shift and go to state 44
    LTEQ            shift and go to state 45
    :               shift and go to state 46


state 6

    (15) statement -> { . statements }
    (12) statements -> . statement
    (13) statements -> . statements statement
    (2) statement -> . instruction
    (14) statement -> . expression ;
    (15) statement -> . { statements }
    (16) statement -> . PRINT expressions ;
    (3) instruction -> . IF ( expression ) statement
    (4) instruction -> . IF ( expression ) statement ELSE statement
    (5) instruction -> . WHILE ( expression ) statement
    (8) instruction -> . FOR ID = range statement
    (9) instruction -> . IMPORT STRING ;
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    {               shift and go to state 6
    PRINT           shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    IMPORT          shift and go to state 14
    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    statements                     shift and go to state 47
    statement                      shift and go to state 3
    instruction                    shift and go to state 4
    expression                     shift and go to state 5
    range                          shift and go to state 13
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    matrixcellgetter               shift and go to state 26

state 7

    (16) statement -> PRINT . expressions ;
    (17) expressions -> . expression
    (18) expressions -> . expressions , expression
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    expressions                    shift and go to state 48
    expression                     shift and go to state 49
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 8

    (3) instruction -> IF . ( expression ) statement
    (4) instruction -> IF . ( expression ) statement ELSE statement

    (               shift and go to state 50


state 9

    (7) expression -> ( . args ) ARROW statement
    (65) expression -> ( . expression )
    (10) args -> . ID
    (11) args -> . args , ID
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    ID              shift and go to state 53
    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    args                           shift and go to state 51
    expression                     shift and go to state 52
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 10

    (5) instruction -> WHILE . ( expression ) statement

    (               shift and go to state 54


state 11

    (8) instruction -> FOR . ID = range statement

    ID              shift and go to state 55


state 12

    (57) expression -> ID . ( expressions )
    (61) assignable -> ID .
    (63) matrixcellgetter -> ID . [ expression , expression ]
    (64) matrixcellgetter -> ID . [ expression ]

  ! shift/reduce conflict for ( resolved as shift
  ! shift/reduce conflict for [ resolved as shift
    (               shift and go to state 56
    =               reduce using rule 61 (assignable -> ID .)
    ADDASSIGN       reduce using rule 61 (assignable -> ID .)
    SUBASSIGN       reduce using rule 61 (assignable -> ID .)
    MULASSIGN       reduce using rule 61 (assignable -> ID .)
    DIVASSIGN       reduce using rule 61 (assignable -> ID .)
    ;               reduce using rule 61 (assignable -> ID .)
    '               reduce using rule 61 (assignable -> ID .)
    +               reduce using rule 61 (assignable -> ID .)
    -               reduce using rule 61 (assignable -> ID .)
    DOTADD          reduce using rule 61 (assignable -> ID .)
    DOTSUB          reduce using rule 61 (assignable -> ID .)
    *               reduce using rule 61 (assignable -> ID .)
    /               reduce using rule 61 (assignable -> ID .)
    DOTMUL          reduce using rule 61 (assignable -> ID .)
    DOTDIV          reduce using rule 61 (assignable -> ID .)
    EQ              reduce using rule 61 (assignable -> ID .)
    NOTEQ           reduce using rule 61 (assignable -> ID .)
    GT              reduce using rule 61 (assignable -> ID .)
    LT              reduce using rule 61 (assignable -> ID .)
    GTEQ            reduce using rule 61 (assignable -> ID .)
    LTEQ            reduce using rule 61 (assignable -> ID .)
    :               reduce using rule 61 (assignable -> ID .)
    ,               reduce using rule 61 (assignable -> ID .)
    )               reduce using rule 61 (assignable -> ID .)
    ]               reduce using rule 61 (assignable -> ID .)
    {               reduce using rule 61 (assignable -> ID .)
    PRINT           reduce using rule 61 (assignable -> ID .)
    IF              reduce using rule 61 (assignable -> ID .)
    WHILE           reduce using rule 61 (assignable -> ID .)
    FOR             reduce using rule 61 (assignable -> ID .)
    IMPORT          reduce using rule 61 (assignable -> ID .)
    RETURN          reduce using rule 61 (assignable -> ID .)
    ZEROS           reduce using rule 61 (assignable -> ID .)
    ONES            reduce using rule 61 (assignable -> ID .)
    EYE             reduce using rule 61 (assignable -> ID .)
    ID              reduce using rule 61 (assignable -> ID .)
    STRING          reduce using rule 61 (assignable -> ID .)
    BREAK           reduce using rule 61 (assignable -> ID .)
    CONTINUE        reduce using rule 61 (assignable -> ID .)
    INTNUM          reduce using rule 61 (assignable -> ID .)
    FLOATNUM        reduce using rule 61 (assignable -> ID .)
    [               shift and go to state 57

  ! (               [ reduce using rule 61 (assignable -> ID .) ]
  ! [               [ reduce using rule 61 (assignable -> ID .) ]


state 13

    (68) expression -> range .

    ;               reduce using rule 68 (expression -> range .)
    '               reduce using rule 68 (expression -> range .)
    +               reduce using rule 68 (expression -> range .)
    -               reduce using rule 68 (expression -> range .)
    DOTADD          reduce using rule 68 (expression -> range .)
    DOTSUB          reduce using rule 68 (expression -> range .)
    *               reduce using rule 68 (expression -> range .)
    /               reduce using rule 68 (expression -> range .)
    DOTMUL          reduce using rule 68 (expression -> range .)
    DOTDIV          reduce using rule 68 (expression -> range .)
    EQ              reduce using rule 68 (expression -> range .)
    NOTEQ           reduce using rule 68 (expression -> range .)
    GT              reduce using rule 68 (expression -> range .)
    LT              reduce using rule 68 (expression -> range .)
    GTEQ            reduce using rule 68 (expression -> range .)
    LTEQ            reduce using rule 68 (expression -> range .)
    :               reduce using rule 68 (expression -> range .)
    ,               reduce using rule 68 (expression -> range .)
    )               reduce using rule 68 (expression -> range .)
    ]               reduce using rule 68 (expression -> range .)
    {               reduce using rule 68 (expression -> range .)
    PRINT           reduce using rule 68 (expression -> range .)
    IF              reduce using rule 68 (expression -> range .)
    WHILE           reduce using rule 68 (expression -> range .)
    FOR             reduce using rule 68 (expression -> range .)
    IMPORT          reduce using rule 68 (expression -> range .)
    RETURN          reduce using rule 68 (expression -> range .)
    (               reduce using rule 68 (expression -> range .)
    [               reduce using rule 68 (expression -> range .)
    ZEROS           reduce using rule 68 (expression -> range .)
    ONES            reduce using rule 68 (expression -> range .)
    EYE             reduce using rule 68 (expression -> range .)
    ID              reduce using rule 68 (expression -> range .)
    STRING          reduce using rule 68 (expression -> range .)
    BREAK           reduce using rule 68 (expression -> range .)
    CONTINUE        reduce using rule 68 (expression -> range .)
    INTNUM          reduce using rule 68 (expression -> range .)
    FLOATNUM        reduce using rule 68 (expression -> range .)


state 14

    (9) instruction -> IMPORT . STRING ;

    STRING          shift and go to state 58


state 15

    (59) expression -> STRING .

    ;               reduce using rule 59 (expression -> STRING .)
    '               reduce using rule 59 (expression -> STRING .)
    +               reduce using rule 59 (expression -> STRING .)
    -               reduce using rule 59 (expression -> STRING .)
    DOTADD          reduce using rule 59 (expression -> STRING .)
    DOTSUB          reduce using rule 59 (expression -> STRING .)
    *               reduce using rule 59 (expression -> STRING .)
    /               reduce using rule 59 (expression -> STRING .)
    DOTMUL          reduce using rule 59 (expression -> STRING .)
    DOTDIV          reduce using rule 59 (expression -> STRING .)
    EQ              reduce using rule 59 (expression -> STRING .)
    NOTEQ           reduce using rule 59 (expression -> STRING .)
    GT              reduce using rule 59 (expression -> STRING .)
    LT              reduce using rule 59 (expression -> STRING .)
    GTEQ            reduce using rule 59 (expression -> STRING .)
    LTEQ            reduce using rule 59 (expression -> STRING .)
    :               reduce using rule 59 (expression -> STRING .)
    ,               reduce using rule 59 (expression -> STRING .)
    )               reduce using rule 59 (expression -> STRING .)
    ]               reduce using rule 59 (expression -> STRING .)
    {               reduce using rule 59 (expression -> STRING .)
    PRINT           reduce using rule 59 (expression -> STRING .)
    IF              reduce using rule 59 (expression -> STRING .)
    WHILE           reduce using rule 59 (expression -> STRING .)
    FOR             reduce using rule 59 (expression -> STRING .)
    IMPORT          reduce using rule 59 (expression -> STRING .)
    RETURN          reduce using rule 59 (expression -> STRING .)
    (               reduce using rule 59 (expression -> STRING .)
    [               reduce using rule 59 (expression -> STRING .)
    ZEROS           reduce using rule 59 (expression -> STRING .)
    ONES            reduce using rule 59 (expression -> STRING .)
    EYE             reduce using rule 59 (expression -> STRING .)
    ID              reduce using rule 59 (expression -> STRING .)
    STRING          reduce using rule 59 (expression -> STRING .)
    BREAK           reduce using rule 59 (expression -> STRING .)
    CONTINUE        reduce using rule 59 (expression -> STRING .)
    INTNUM          reduce using rule 59 (expression -> STRING .)
    FLOATNUM        reduce using rule 59 (expression -> STRING .)


state 16

    (6) expression -> RETURN . expression
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    expression                     shift and go to state 59
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 17

    (19) expression -> [ . minit ]
    (20) expression -> [ . ]
    (21) minit -> . mrow ;
    (22) minit -> . mrow
    (23) minit -> . [ mrow ] ,
    (24) minit -> . [ mrow ]
    (25) minit -> . mrow ; minit
    (26) minit -> . [ mrow ] , minit
    (27) mrow -> . number
    (28) mrow -> . number , mrow
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM

    ]               shift and go to state 62
    [               shift and go to state 60
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    minit                          shift and go to state 61
    mrow                           shift and go to state 63
    number                         shift and go to state 64

state 18

    (31) expression -> assignable . = expression
    (34) expression -> assignable . ADDASSIGN expression
    (35) expression -> assignable . SUBASSIGN expression
    (36) expression -> assignable . MULASSIGN expression
    (37) expression -> assignable . DIVASSIGN expression
    (60) expression -> assignable .

    =               shift and go to state 65
    ADDASSIGN       shift and go to state 66
    SUBASSIGN       shift and go to state 67
    MULASSIGN       shift and go to state 68
    DIVASSIGN       shift and go to state 69
    ;               reduce using rule 60 (expression -> assignable .)
    '               reduce using rule 60 (expression -> assignable .)
    +               reduce using rule 60 (expression -> assignable .)
    -               reduce using rule 60 (expression -> assignable .)
    DOTADD          reduce using rule 60 (expression -> assignable .)
    DOTSUB          reduce using rule 60 (expression -> assignable .)
    *               reduce using rule 60 (expression -> assignable .)
    /               reduce using rule 60 (expression -> assignable .)
    DOTMUL          reduce using rule 60 (expression -> assignable .)
    DOTDIV          reduce using rule 60 (expression -> assignable .)
    EQ              reduce using rule 60 (expression -> assignable .)
    NOTEQ           reduce using rule 60 (expression -> assignable .)
    GT              reduce using rule 60 (expression -> assignable .)
    LT              reduce using rule 60 (expression -> assignable .)
    GTEQ            reduce using rule 60 (expression -> assignable .)
    LTEQ            reduce using rule 60 (expression -> assignable .)
    :               reduce using rule 60 (expression -> assignable .)
    ,               reduce using rule 60 (expression -> assignable .)
    )               reduce using rule 60 (expression -> assignable .)
    ]               reduce using rule 60 (expression -> assignable .)
    {               reduce using rule 60 (expression -> assignable .)
    PRINT           reduce using rule 60 (expression -> assignable .)
    IF              reduce using rule 60 (expression -> assignable .)
    WHILE           reduce using rule 60 (expression -> assignable .)
    FOR             reduce using rule 60 (expression -> assignable .)
    IMPORT          reduce using rule 60 (expression -> assignable .)
    RETURN          reduce using rule 60 (expression -> assignable .)
    (               reduce using rule 60 (expression -> assignable .)
    [               reduce using rule 60 (expression -> assignable .)
    ZEROS           reduce using rule 60 (expression -> assignable .)
    ONES            reduce using rule 60 (expression -> assignable .)
    EYE             reduce using rule 60 (expression -> assignable .)
    ID              reduce using rule 60 (expression -> assignable .)
    STRING          reduce using rule 60 (expression -> assignable .)
    BREAK           reduce using rule 60 (expression -> assignable .)
    CONTINUE        reduce using rule 60 (expression -> assignable .)
    INTNUM          reduce using rule 60 (expression -> assignable .)
    FLOATNUM        reduce using rule 60 (expression -> assignable .)


state 19

    (32) expression -> - . expression
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    expression                     shift and go to state 70
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 20

    (54) expression -> ZEROS . ( numbers )

    (               shift and go to state 71


state 21

    (55) expression -> ONES . ( numbers )

    (               shift and go to state 72


state 22

    (56) expression -> EYE . ( numbers )

    (               shift and go to state 73


state 23

    (58) expression -> number .

    ;               reduce using rule 58 (expression -> number .)
    '               reduce using rule 58 (expression -> number .)
    +               reduce using rule 58 (expression -> number .)
    -               reduce using rule 58 (expression -> number .)
    DOTADD          reduce using rule 58 (expression -> number .)
    DOTSUB          reduce using rule 58 (expression -> number .)
    *               reduce using rule 58 (expression -> number .)
    /               reduce using rule 58 (expression -> number .)
    DOTMUL          reduce using rule 58 (expression -> number .)
    DOTDIV          reduce using rule 58 (expression -> number .)
    EQ              reduce using rule 58 (expression -> number .)
    NOTEQ           reduce using rule 58 (expression -> number .)
    GT              reduce using rule 58 (expression -> number .)
    LT              reduce using rule 58 (expression -> number .)
    GTEQ            reduce using rule 58 (expression -> number .)
    LTEQ            reduce using rule 58 (expression -> number .)
    :               reduce using rule 58 (expression -> number .)
    ,               reduce using rule 58 (expression -> number .)
    )               reduce using rule 58 (expression -> number .)
    ]               reduce using rule 58 (expression -> number .)
    {               reduce using rule 58 (expression -> number .)
    PRINT           reduce using rule 58 (expression -> number .)
    IF              reduce using rule 58 (expression -> number .)
    WHILE           reduce using rule 58 (expression -> number .)
    FOR             reduce using rule 58 (expression -> number .)
    IMPORT          reduce using rule 58 (expression -> number .)
    RETURN          reduce using rule 58 (expression -> number .)
    (               reduce using rule 58 (expression -> number .)
    [               reduce using rule 58 (expression -> number .)
    ZEROS           reduce using rule 58 (expression -> number .)
    ONES            reduce using rule 58 (expression -> number .)
    EYE             reduce using rule 58 (expression -> number .)
    ID              reduce using rule 58 (expression -> number .)
    STRING          reduce using rule 58 (expression -> number .)
    BREAK           reduce using rule 58 (expression -> number .)
    CONTINUE        reduce using rule 58 (expression -> number .)
    INTNUM          reduce using rule 58 (expression -> number .)
    FLOATNUM        reduce using rule 58 (expression -> number .)


state 24

    (66) expression -> BREAK .

    ;               reduce using rule 66 (expression -> BREAK .)
    '               reduce using rule 66 (expression -> BREAK .)
    +               reduce using rule 66 (expression -> BREAK .)
    -               reduce using rule 66 (expression -> BREAK .)
    DOTADD          reduce using rule 66 (expression -> BREAK .)
    DOTSUB          reduce using rule 66 (expression -> BREAK .)
    *               reduce using rule 66 (expression -> BREAK .)
    /               reduce using rule 66 (expression -> BREAK .)
    DOTMUL          reduce using rule 66 (expression -> BREAK .)
    DOTDIV          reduce using rule 66 (expression -> BREAK .)
    EQ              reduce using rule 66 (expression -> BREAK .)
    NOTEQ           reduce using rule 66 (expression -> BREAK .)
    GT              reduce using rule 66 (expression -> BREAK .)
    LT              reduce using rule 66 (expression -> BREAK .)
    GTEQ            reduce using rule 66 (expression -> BREAK .)
    LTEQ            reduce using rule 66 (expression -> BREAK .)
    :               reduce using rule 66 (expression -> BREAK .)
    ,               reduce using rule 66 (expression -> BREAK .)
    )               reduce using rule 66 (expression -> BREAK .)
    ]               reduce using rule 66 (expression -> BREAK .)
    {               reduce using rule 66 (expression -> BREAK .)
    PRINT           reduce using rule 66 (expression -> BREAK .)
    IF              reduce using rule 66 (expression -> BREAK .)
    WHILE           reduce using rule 66 (expression -> BREAK .)
    FOR             reduce using rule 66 (expression -> BREAK .)
    IMPORT          reduce using rule 66 (expression -> BREAK .)
    RETURN          reduce using rule 66 (expression -> BREAK .)
    (               reduce using rule 66 (expression -> BREAK .)
    [               reduce using rule 66 (expression -> BREAK .)
    ZEROS           reduce using rule 66 (expression -> BREAK .)
    ONES            reduce using rule 66 (expression -> BREAK .)
    EYE             reduce using rule 66 (expression -> BREAK .)
    ID              reduce using rule 66 (expression -> BREAK .)
    STRING          reduce using rule 66 (expression -> BREAK .)
    BREAK           reduce using rule 66 (expression -> BREAK .)
    CONTINUE        reduce using rule 66 (expression -> BREAK .)
    INTNUM          reduce using rule 66 (expression -> BREAK .)
    FLOATNUM        reduce using rule 66 (expression -> BREAK .)


state 25

    (67) expression -> CONTINUE .

    ;               reduce using rule 67 (expression -> CONTINUE .)
    '               reduce using rule 67 (expression -> CONTINUE .)
    +               reduce using rule 67 (expression -> CONTINUE .)
    -               reduce using rule 67 (expression -> CONTINUE .)
    DOTADD          reduce using rule 67 (expression -> CONTINUE .)
    DOTSUB          reduce using rule 67 (expression -> CONTINUE .)
    *               reduce using rule 67 (expression -> CONTINUE .)
    /               reduce using rule 67 (expression -> CONTINUE .)
    DOTMUL          reduce using rule 67 (expression -> CONTINUE .)
    DOTDIV          reduce using rule 67 (expression -> CONTINUE .)
    EQ              reduce using rule 67 (expression -> CONTINUE .)
    NOTEQ           reduce using rule 67 (expression -> CONTINUE .)
    GT              reduce using rule 67 (expression -> CONTINUE .)
    LT              reduce using rule 67 (expression -> CONTINUE .)
    GTEQ            reduce using rule 67 (expression -> CONTINUE .)
    LTEQ            reduce using rule 67 (expression -> CONTINUE .)
    :               reduce using rule 67 (expression -> CONTINUE .)
    ,               reduce using rule 67 (expression -> CONTINUE .)
    )               reduce using rule 67 (expression -> CONTINUE .)
    ]               reduce using rule 67 (expression -> CONTINUE .)
    {               reduce using rule 67 (expression -> CONTINUE .)
    PRINT           reduce using rule 67 (expression -> CONTINUE .)
    IF              reduce using rule 67 (expression -> CONTINUE .)
    WHILE           reduce using rule 67 (expression -> CONTINUE .)
    FOR             reduce using rule 67 (expression -> CONTINUE .)
    IMPORT          reduce using rule 67 (expression -> CONTINUE .)
    RETURN          reduce using rule 67 (expression -> CONTINUE .)
    (               reduce using rule 67 (expression -> CONTINUE .)
    [               reduce using rule 67 (expression -> CONTINUE .)
    ZEROS           reduce using rule 67 (expression -> CONTINUE .)
    ONES            reduce using rule 67 (expression -> CONTINUE .)
    EYE             reduce using rule 67 (expression -> CONTINUE .)
    ID              reduce using rule 67 (expression -> CONTINUE .)
    STRING          reduce using rule 67 (expression -> CONTINUE .)
    BREAK           reduce using rule 67 (expression -> CONTINUE .)
    CONTINUE        reduce using rule 67 (expression -> CONTINUE .)
    INTNUM          reduce using rule 67 (expression -> CONTINUE .)
    FLOATNUM        reduce using rule 67 (expression -> CONTINUE .)


state 26

    (62) assignable -> matrixcellgetter .

    =               reduce using rule 62 (assignable -> matrixcellgetter .)
    ADDASSIGN       reduce using rule 62 (assignable -> matrixcellgetter .)
    SUBASSIGN       reduce using rule 62 (assignable -> matrixcellgetter .)
    MULASSIGN       reduce using rule 62 (assignable -> matrixcellgetter .)
    DIVASSIGN       reduce using rule 62 (assignable -> matrixcellgetter .)
    ;               reduce using rule 62 (assignable -> matrixcellgetter .)
    '               reduce using rule 62 (assignable -> matrixcellgetter .)
    +               reduce using rule 62 (assignable -> matrixcellgetter .)
    -               reduce using rule 62 (assignable -> matrixcellgetter .)
    DOTADD          reduce using rule 62 (assignable -> matrixcellgetter .)
    DOTSUB          reduce using rule 62 (assignable -> matrixcellgetter .)
    *               reduce using rule 62 (assignable -> matrixcellgetter .)
    /               reduce using rule 62 (assignable -> matrixcellgetter .)
    DOTMUL          reduce using rule 62 (assignable -> matrixcellgetter .)
    DOTDIV          reduce using rule 62 (assignable -> matrixcellgetter .)
    EQ              reduce using rule 62 (assignable -> matrixcellgetter .)
    NOTEQ           reduce using rule 62 (assignable -> matrixcellgetter .)
    GT              reduce using rule 62 (assignable -> matrixcellgetter .)
    LT              reduce using rule 62 (assignable -> matrixcellgetter .)
    GTEQ            reduce using rule 62 (assignable -> matrixcellgetter .)
    LTEQ            reduce using rule 62 (assignable -> matrixcellgetter .)
    :               reduce using rule 62 (assignable -> matrixcellgetter .)
    ,               reduce using rule 62 (assignable -> matrixcellgetter .)
    )               reduce using rule 62 (assignable -> matrixcellgetter .)
    ]               reduce using rule 62 (assignable -> matrixcellgetter .)
    {               reduce using rule 62 (assignable -> matrixcellgetter .)
    PRINT           reduce using rule 62 (assignable -> matrixcellgetter .)
    IF              reduce using rule 62 (assignable -> matrixcellgetter .)
    WHILE           reduce using rule 62 (assignable -> matrixcellgetter .)
    FOR             reduce using rule 62 (assignable -> matrixcellgetter .)
    IMPORT          reduce using rule 62 (assignable -> matrixcellgetter .)
    RETURN          reduce using rule 62 (assignable -> matrixcellgetter .)
    (               reduce using rule 62 (assignable -> matrixcellgetter .)
    [               reduce using rule 62 (assignable -> matrixcellgetter .)
    ZEROS           reduce using rule 62 (assignable -> matrixcellgetter .)
    ONES            reduce using rule 62 (assignable -> matrixcellgetter .)
    EYE             reduce using rule 62 (assignable -> matrixcellgetter .)
    ID              reduce using rule 62 (assignable -> matrixcellgetter .)
    STRING          reduce using rule 62 (assignable -> matrixcellgetter .)
    BREAK           reduce using rule 62 (assignable -> matrixcellgetter .)
    CONTINUE        reduce using rule 62 (assignable -> matrixcellgetter .)
    INTNUM          reduce using rule 62 (assignable -> matrixcellgetter .)
    FLOATNUM        reduce using rule 62 (assignable -> matrixcellgetter .)


state 27

    (29) number -> INTNUM .

    ;               reduce using rule 29 (number -> INTNUM .)
    '               reduce using rule 29 (number -> INTNUM .)
    +               reduce using rule 29 (number -> INTNUM .)
    -               reduce using rule 29 (number -> INTNUM .)
    DOTADD          reduce using rule 29 (number -> INTNUM .)
    DOTSUB          reduce using rule 29 (number -> INTNUM .)
    *               reduce using rule 29 (number -> INTNUM .)
    /               reduce using rule 29 (number -> INTNUM .)
    DOTMUL          reduce using rule 29 (number -> INTNUM .)
    DOTDIV          reduce using rule 29 (number -> INTNUM .)
    EQ              reduce using rule 29 (number -> INTNUM .)
    NOTEQ           reduce using rule 29 (number -> INTNUM .)
    GT              reduce using rule 29 (number -> INTNUM .)
    LT              reduce using rule 29 (number -> INTNUM .)
    GTEQ            reduce using rule 29 (number -> INTNUM .)
    LTEQ            reduce using rule 29 (number -> INTNUM .)
    :               reduce using rule 29 (number -> INTNUM .)
    ,               reduce using rule 29 (number -> INTNUM .)
    )               reduce using rule 29 (number -> INTNUM .)
    ]               reduce using rule 29 (number -> INTNUM .)
    {               reduce using rule 29 (number -> INTNUM .)
    PRINT           reduce using rule 29 (number -> INTNUM .)
    IF              reduce using rule 29 (number -> INTNUM .)
    WHILE           reduce using rule 29 (number -> INTNUM .)
    FOR             reduce using rule 29 (number -> INTNUM .)
    IMPORT          reduce using rule 29 (number -> INTNUM .)
    RETURN          reduce using rule 29 (number -> INTNUM .)
    (               reduce using rule 29 (number -> INTNUM .)
    [               reduce using rule 29 (number -> INTNUM .)
    ZEROS           reduce using rule 29 (number -> INTNUM .)
    ONES            reduce using rule 29 (number -> INTNUM .)
    EYE             reduce using rule 29 (number -> INTNUM .)
    ID              reduce using rule 29 (number -> INTNUM .)
    STRING          reduce using rule 29 (number -> INTNUM .)
    BREAK           reduce using rule 29 (number -> INTNUM .)
    CONTINUE        reduce using rule 29 (number -> INTNUM .)
    INTNUM          reduce using rule 29 (number -> INTNUM .)
    FLOATNUM        reduce using rule 29 (number -> INTNUM .)


state 28

    (30) number -> FLOATNUM .

    ;               reduce using rule 30 (number -> FLOATNUM .)
    '               reduce using rule 30 (number -> FLOATNUM .)
    +               reduce using rule 30 (number -> FLOATNUM .)
    -               reduce using rule 30 (number -> FLOATNUM .)
    DOTADD          reduce using rule 30 (number -> FLOATNUM .)
    DOTSUB          reduce using rule 30 (number -> FLOATNUM .)
    *               reduce using rule 30 (number -> FLOATNUM .)
    /               reduce using rule 30 (number -> FLOATNUM .)
    DOTMUL          reduce using rule 30 (number -> FLOATNUM .)
    DOTDIV          reduce using rule 30 (number -> FLOATNUM .)
    EQ              reduce using rule 30 (number -> FLOATNUM .)
    NOTEQ           reduce using rule 30 (number -> FLOATNUM .)
    GT              reduce using rule 30 (number -> FLOATNUM .)
    LT              reduce using rule 30 (number -> FLOATNUM .)
    GTEQ            reduce using rule 30 (number -> FLOATNUM .)
    LTEQ            reduce using rule 30 (number -> FLOATNUM .)
    :               reduce using rule 30 (number -> FLOATNUM .)
    ,               reduce using rule 30 (number -> FLOATNUM .)
    )               reduce using rule 30 (number -> FLOATNUM .)
    ]               reduce using rule 30 (number -> FLOATNUM .)
    {               reduce using rule 30 (number -> FLOATNUM .)
    PRINT           reduce using rule 30 (number -> FLOATNUM .)
    IF              reduce using rule 30 (number -> FLOATNUM .)
    WHILE           reduce using rule 30 (number -> FLOATNUM .)
    FOR             reduce using rule 30 (number -> FLOATNUM .)
    IMPORT          reduce using rule 30 (number -> FLOATNUM .)
    RETURN          reduce using rule 30 (number -> FLOATNUM .)
    (               reduce using rule 30 (number -> FLOATNUM .)
    [               reduce using rule 30 (number -> FLOATNUM .)
    ZEROS           reduce using rule 30 (number -> FLOATNUM .)
    ONES            reduce using rule 30 (number -> FLOATNUM .)
    EYE             reduce using rule 30 (number -> FLOATNUM .)
    ID              reduce using rule 30 (number -> FLOATNUM .)
    STRING          reduce using rule 30 (number -> FLOATNUM .)
    BREAK           reduce using rule 30 (number -> FLOATNUM .)
    CONTINUE        reduce using rule 30 (number -> FLOATNUM .)
    INTNUM          reduce using rule 30 (number -> FLOATNUM .)
    FLOATNUM        reduce using rule 30 (number -> FLOATNUM .)


state 29

    (13) statements -> statements statement .

    {               reduce using rule 13 (statements -> statements statement .)
    PRINT           reduce using rule 13 (statements -> statements statement .)
    IF              reduce using rule 13 (statements -> statements statement .)
    WHILE           reduce using rule 13 (statements -> statements statement .)
    FOR             reduce using rule 13 (statements -> statements statement .)
    IMPORT          reduce using rule 13 (statements -> statements statement .)
    RETURN          reduce using rule 13 (statements -> statements statement .)
    (               reduce using rule 13 (statements -> statements statement .)
    [               reduce using rule 13 (statements -> statements statement .)
    -               reduce using rule 13 (statements -> statements statement .)
    ZEROS           reduce using rule 13 (statements -> statements statement .)
    ONES            reduce using rule 13 (statements -> statements statement .)
    EYE             reduce using rule 13 (statements -> statements statement .)
    ID              reduce using rule 13 (statements -> statements statement .)
    STRING          reduce using rule 13 (statements -> statements statement .)
    BREAK           reduce using rule 13 (statements -> statements statement .)
    CONTINUE        reduce using rule 13 (statements -> statements statement .)
    INTNUM          reduce using rule 13 (statements -> statements statement .)
    FLOATNUM        reduce using rule 13 (statements -> statements statement .)
    $end            reduce using rule 13 (statements -> statements statement .)
    }               reduce using rule 13 (statements -> statements statement .)


state 30

    (14) statement -> expression ; .

    {               reduce using rule 14 (statement -> expression ; .)
    PRINT           reduce using rule 14 (statement -> expression ; .)
    IF              reduce using rule 14 (statement -> expression ; .)
    WHILE           reduce using rule 14 (statement -> expression ; .)
    FOR             reduce using rule 14 (statement -> expression ; .)
    IMPORT          reduce using rule 14 (statement -> expression ; .)
    RETURN          reduce using rule 14 (statement -> expression ; .)
    (               reduce using rule 14 (statement -> expression ; .)
    [               reduce using rule 14 (statement -> expression ; .)
    -               reduce using rule 14 (statement -> expression ; .)
    ZEROS           reduce using rule 14 (statement -> expression ; .)
    ONES            reduce using rule 14 (statement -> expression ; .)
    EYE             reduce using rule 14 (statement -> expression ; .)
    ID              reduce using rule 14 (statement -> expression ; .)
    STRING          reduce using rule 14 (statement -> expression ; .)
    BREAK           reduce using rule 14 (statement -> expression ; .)
    CONTINUE        reduce using rule 14 (statement -> expression ; .)
    INTNUM          reduce using rule 14 (statement -> expression ; .)
    FLOATNUM        reduce using rule 14 (statement -> expression ; .)
    $end            reduce using rule 14 (statement -> expression ; .)
    }               reduce using rule 14 (statement -> expression ; .)
    ELSE            reduce using rule 14 (statement -> expression ; .)
    ;               reduce using rule 14 (statement -> expression ; .)
    '               reduce using rule 14 (statement -> expression ; .)
    +               reduce using rule 14 (statement -> expression ; .)
    DOTADD          reduce using rule 14 (statement -> expression ; .)
    DOTSUB          reduce using rule 14 (statement -> expression ; .)
    *               reduce using rule 14 (statement -> expression ; .)
    /               reduce using rule 14 (statement -> expression ; .)
    DOTMUL          reduce using rule 14 (statement -> expression ; .)
    DOTDIV          reduce using rule 14 (statement -> expression ; .)
    EQ              reduce using rule 14 (statement -> expression ; .)
    NOTEQ           reduce using rule 14 (statement -> expression ; .)
    GT              reduce using rule 14 (statement -> expression ; .)
    LT              reduce using rule 14 (statement -> expression ; .)
    GTEQ            reduce using rule 14 (statement -> expression ; .)
    LTEQ            reduce using rule 14 (statement -> expression ; .)
    :               reduce using rule 14 (statement -> expression ; .)
    ,               reduce using rule 14 (statement -> expression ; .)
    )               reduce using rule 14 (statement -> expression ; .)
    ]               reduce using rule 14 (statement -> expression ; .)


state 31

    (33) expression -> expression ' .

    ;               reduce using rule 33 (expression -> expression ' .)
    '               reduce using rule 33 (expression -> expression ' .)
    +               reduce using rule 33 (expression -> expression ' .)
    -               reduce using rule 33 (expression -> expression ' .)
    DOTADD          reduce using rule 33 (expression -> expression ' .)
    DOTSUB          reduce using rule 33 (expression -> expression ' .)
    *               reduce using rule 33 (expression -> expression ' .)
    /               reduce using rule 33 (expression -> expression ' .)
    DOTMUL          reduce using rule 33 (expression -> expression ' .)
    DOTDIV          reduce using rule 33 (expression -> expression ' .)
    EQ              reduce using rule 33 (expression -> expression ' .)
    NOTEQ           reduce using rule 33 (expression -> expression ' .)
    GT              reduce using rule 33 (expression -> expression ' .)
    LT              reduce using rule 33 (expression -> expression ' .)
    GTEQ            reduce using rule 33 (expression -> expression ' .)
    LTEQ            reduce using rule 33 (expression -> expression ' .)
    :               reduce using rule 33 (expression -> expression ' .)
    ,               reduce using rule 33 (expression -> expression ' .)
    )               reduce using rule 33 (expression -> expression ' .)
    ]               reduce using rule 33 (expression -> expression ' .)
    {               reduce using rule 33 (expression -> expression ' .)
    PRINT           reduce using rule 33 (expression -> expression ' .)
    IF              reduce using rule 33 (expression -> expression ' .)
    WHILE           reduce using rule 33 (expression -> expression ' .)
    FOR             reduce using rule 33 (expression -> expression ' .)
    IMPORT          reduce using rule 33 (expression -> expression ' .)
    RETURN          reduce using rule 33 (expression -> expression ' .)
    (               reduce using rule 33 (expression -> expression ' .)
    [               reduce using rule 33 (expression -> expression ' .)
    ZEROS           reduce using rule 33 (expression -> expression ' .)
    ONES            reduce using rule 33 (expression -> expression ' .)
    EYE             reduce using rule 33 (expression -> expression ' .)
    ID              reduce using rule 33 (expression -> expression ' .)
    STRING          reduce using rule 33 (expression -> expression ' .)
    BREAK           reduce using rule 33 (expression -> expression ' .)
    CONTINUE        reduce using rule 33 (expression -> expression ' .)
    INTNUM          reduce using rule 33 (expression -> expression ' .)
    FLOATNUM        reduce using rule 33 (expression -> expression ' .)


state 32

    (38) expression -> expression + . expression
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    expression                     shift and go to state 74
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 33

    (39) expression -> expression - . expression
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    expression                     shift and go to state 75
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 34

    (40) expression -> expression DOTADD . expression
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    expression                     shift and go to state 76
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 35

    (41) expression -> expression DOTSUB . expression
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    expression                     shift and go to state 77
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 36

    (42) expression -> expression * . expression
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    expression                     shift and go to state 78
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 37

    (43) expression -> expression / . expression
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    expression                     shift and go to state 79
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 38

    (44) expression -> expression DOTMUL . expression
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    expression                     shift and go to state 80
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 39

    (45) expression -> expression DOTDIV . expression
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    expression                     shift and go to state 81
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 40

    (46) expression -> expression EQ . expression
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    expression                     shift and go to state 82
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 41

    (47) expression -> expression NOTEQ . expression
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    expression                     shift and go to state 83
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 42

    (48) expression -> expression GT . expression
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    expression                     shift and go to state 84
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 43

    (49) expression -> expression LT . expression
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    expression                     shift and go to state 85
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 44

    (50) expression -> expression GTEQ . expression
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    expression                     shift and go to state 86
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 45

    (51) expression -> expression LTEQ . expression
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    expression                     shift and go to state 87
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 46

    (69) range -> expression : . expression
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    expression                     shift and go to state 88
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 47

    (15) statement -> { statements . }
    (13) statements -> statements . statement
    (2) statement -> . instruction
    (14) statement -> . expression ;
    (15) statement -> . { statements }
    (16) statement -> . PRINT expressions ;
    (3) instruction -> . IF ( expression ) statement
    (4) instruction -> . IF ( expression ) statement ELSE statement
    (5) instruction -> . WHILE ( expression ) statement
    (8) instruction -> . FOR ID = range statement
    (9) instruction -> . IMPORT STRING ;
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    }               shift and go to state 89
    {               shift and go to state 6
    PRINT           shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    IMPORT          shift and go to state 14
    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    statement                      shift and go to state 29
    instruction                    shift and go to state 4
    expression                     shift and go to state 5
    range                          shift and go to state 13
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    matrixcellgetter               shift and go to state 26

state 48

    (16) statement -> PRINT expressions . ;
    (18) expressions -> expressions . , expression

    ;               shift and go to state 90
    ,               shift and go to state 91


state 49

    (17) expressions -> expression .
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

    ;               reduce using rule 17 (expressions -> expression .)
    ,               reduce using rule 17 (expressions -> expression .)
    )               reduce using rule 17 (expressions -> expression .)
    '               shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    DOTADD          shift and go to state 34
    DOTSUB          shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTMUL          shift and go to state 38
    DOTDIV          shift and go to state 39
    EQ              shift and go to state 40
    NOTEQ           shift and go to state 41
    GT              shift and go to state 42
    LT              shift and go to state 43
    GTEQ            shift and go to state 44
    LTEQ            shift and go to state 45
    :               shift and go to state 46


state 50

    (3) instruction -> IF ( . expression ) statement
    (4) instruction -> IF ( . expression ) statement ELSE statement
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    expression                     shift and go to state 92
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 51

    (7) expression -> ( args . ) ARROW statement
    (11) args -> args . , ID

    )               shift and go to state 93
    ,               shift and go to state 94


state 52

    (65) expression -> ( expression . )
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

    )               shift and go to state 95
    '               shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    DOTADD          shift and go to state 34
    DOTSUB          shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTMUL          shift and go to state 38
    DOTDIV          shift and go to state 39
    EQ              shift and go to state 40
    NOTEQ           shift and go to state 41
    GT              shift and go to state 42
    LT              shift and go to state 43
    GTEQ            shift and go to state 44
    LTEQ            shift and go to state 45
    :               shift and go to state 46


state 53

    (10) args -> ID .
    (57) expression -> ID . ( expressions )
    (61) assignable -> ID .
    (63) matrixcellgetter -> ID . [ expression , expression ]
    (64) matrixcellgetter -> ID . [ expression ]

  ! reduce/reduce conflict for ) resolved using rule 10 (args -> ID .)
    )               reduce using rule 10 (args -> ID .)
    ,               reduce using rule 10 (args -> ID .)
    (               shift and go to state 56
    =               reduce using rule 61 (assignable -> ID .)
    ADDASSIGN       reduce using rule 61 (assignable -> ID .)
    SUBASSIGN       reduce using rule 61 (assignable -> ID .)
    MULASSIGN       reduce using rule 61 (assignable -> ID .)
    DIVASSIGN       reduce using rule 61 (assignable -> ID .)
    '               reduce using rule 61 (assignable -> ID .)
    +               reduce using rule 61 (assignable -> ID .)
    -               reduce using rule 61 (assignable -> ID .)
    DOTADD          reduce using rule 61 (assignable -> ID .)
    DOTSUB          reduce using rule 61 (assignable -> ID .)
    *               reduce using rule 61 (assignable -> ID .)
    /               reduce using rule 61 (assignable -> ID .)
    DOTMUL          reduce using rule 61 (assignable -> ID .)
    DOTDIV          reduce using rule 61 (assignable -> ID .)
    EQ              reduce using rule 61 (assignable -> ID .)
    NOTEQ           reduce using rule 61 (assignable -> ID .)
    GT              reduce using rule 61 (assignable -> ID .)
    LT              reduce using rule 61 (assignable -> ID .)
    GTEQ            reduce using rule 61 (assignable -> ID .)
    LTEQ            reduce using rule 61 (assignable -> ID .)
    :               reduce using rule 61 (assignable -> ID .)
    [               shift and go to state 57

  ! )               [ reduce using rule 61 (assignable -> ID .) ]


state 54

    (5) instruction -> WHILE ( . expression ) statement
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    expression                     shift and go to state 96
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 55

    (8) instruction -> FOR ID . = range statement

    =               shift and go to state 97


state 56

    (57) expression -> ID ( . expressions )
    (17) expressions -> . expression
    (18) expressions -> . expressions , expression
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    expressions                    shift and go to state 98
    expression                     shift and go to state 49
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 57

    (63) matrixcellgetter -> ID [ . expression , expression ]
    (64) matrixcellgetter -> ID [ . expression ]
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    expression                     shift and go to state 99
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 58

    (9) instruction -> IMPORT STRING . ;

    ;               shift and go to state 100


state 59

    (6) expression -> RETURN expression .
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

  ! shift/reduce conflict for ' resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for DOTADD resolved as shift
  ! shift/reduce conflict for DOTSUB resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GTEQ resolved as shift
  ! shift/reduce conflict for LTEQ resolved as shift
  ! shift/reduce conflict for : resolved as shift
    ;               reduce using rule 6 (expression -> RETURN expression .)
    ,               reduce using rule 6 (expression -> RETURN expression .)
    )               reduce using rule 6 (expression -> RETURN expression .)
    ]               reduce using rule 6 (expression -> RETURN expression .)
    {               reduce using rule 6 (expression -> RETURN expression .)
    PRINT           reduce using rule 6 (expression -> RETURN expression .)
    IF              reduce using rule 6 (expression -> RETURN expression .)
    WHILE           reduce using rule 6 (expression -> RETURN expression .)
    FOR             reduce using rule 6 (expression -> RETURN expression .)
    IMPORT          reduce using rule 6 (expression -> RETURN expression .)
    RETURN          reduce using rule 6 (expression -> RETURN expression .)
    (               reduce using rule 6 (expression -> RETURN expression .)
    [               reduce using rule 6 (expression -> RETURN expression .)
    ZEROS           reduce using rule 6 (expression -> RETURN expression .)
    ONES            reduce using rule 6 (expression -> RETURN expression .)
    EYE             reduce using rule 6 (expression -> RETURN expression .)
    ID              reduce using rule 6 (expression -> RETURN expression .)
    STRING          reduce using rule 6 (expression -> RETURN expression .)
    BREAK           reduce using rule 6 (expression -> RETURN expression .)
    CONTINUE        reduce using rule 6 (expression -> RETURN expression .)
    INTNUM          reduce using rule 6 (expression -> RETURN expression .)
    FLOATNUM        reduce using rule 6 (expression -> RETURN expression .)
    '               shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    DOTADD          shift and go to state 34
    DOTSUB          shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTMUL          shift and go to state 38
    DOTDIV          shift and go to state 39
    EQ              shift and go to state 40
    NOTEQ           shift and go to state 41
    GT              shift and go to state 42
    LT              shift and go to state 43
    GTEQ            shift and go to state 44
    LTEQ            shift and go to state 45
    :               shift and go to state 46

  ! '               [ reduce using rule 6 (expression -> RETURN expression .) ]
  ! +               [ reduce using rule 6 (expression -> RETURN expression .) ]
  ! -               [ reduce using rule 6 (expression -> RETURN expression .) ]
  ! DOTADD          [ reduce using rule 6 (expression -> RETURN expression .) ]
  ! DOTSUB          [ reduce using rule 6 (expression -> RETURN expression .) ]
  ! *               [ reduce using rule 6 (expression -> RETURN expression .) ]
  ! /               [ reduce using rule 6 (expression -> RETURN expression .) ]
  ! DOTMUL          [ reduce using rule 6 (expression -> RETURN expression .) ]
  ! DOTDIV          [ reduce using rule 6 (expression -> RETURN expression .) ]
  ! EQ              [ reduce using rule 6 (expression -> RETURN expression .) ]
  ! NOTEQ           [ reduce using rule 6 (expression -> RETURN expression .) ]
  ! GT              [ reduce using rule 6 (expression -> RETURN expression .) ]
  ! LT              [ reduce using rule 6 (expression -> RETURN expression .) ]
  ! GTEQ            [ reduce using rule 6 (expression -> RETURN expression .) ]
  ! LTEQ            [ reduce using rule 6 (expression -> RETURN expression .) ]
  ! :               [ reduce using rule 6 (expression -> RETURN expression .) ]


state 60

    (23) minit -> [ . mrow ] ,
    (24) minit -> [ . mrow ]
    (26) minit -> [ . mrow ] , minit
    (27) mrow -> . number
    (28) mrow -> . number , mrow
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM

    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    mrow                           shift and go to state 101
    number                         shift and go to state 64

state 61

    (19) expression -> [ minit . ]

    ]               shift and go to state 102


state 62

    (20) expression -> [ ] .

    ;               reduce using rule 20 (expression -> [ ] .)
    '               reduce using rule 20 (expression -> [ ] .)
    +               reduce using rule 20 (expression -> [ ] .)
    -               reduce using rule 20 (expression -> [ ] .)
    DOTADD          reduce using rule 20 (expression -> [ ] .)
    DOTSUB          reduce using rule 20 (expression -> [ ] .)
    *               reduce using rule 20 (expression -> [ ] .)
    /               reduce using rule 20 (expression -> [ ] .)
    DOTMUL          reduce using rule 20 (expression -> [ ] .)
    DOTDIV          reduce using rule 20 (expression -> [ ] .)
    EQ              reduce using rule 20 (expression -> [ ] .)
    NOTEQ           reduce using rule 20 (expression -> [ ] .)
    GT              reduce using rule 20 (expression -> [ ] .)
    LT              reduce using rule 20 (expression -> [ ] .)
    GTEQ            reduce using rule 20 (expression -> [ ] .)
    LTEQ            reduce using rule 20 (expression -> [ ] .)
    :               reduce using rule 20 (expression -> [ ] .)
    ,               reduce using rule 20 (expression -> [ ] .)
    )               reduce using rule 20 (expression -> [ ] .)
    ]               reduce using rule 20 (expression -> [ ] .)
    {               reduce using rule 20 (expression -> [ ] .)
    PRINT           reduce using rule 20 (expression -> [ ] .)
    IF              reduce using rule 20 (expression -> [ ] .)
    WHILE           reduce using rule 20 (expression -> [ ] .)
    FOR             reduce using rule 20 (expression -> [ ] .)
    IMPORT          reduce using rule 20 (expression -> [ ] .)
    RETURN          reduce using rule 20 (expression -> [ ] .)
    (               reduce using rule 20 (expression -> [ ] .)
    [               reduce using rule 20 (expression -> [ ] .)
    ZEROS           reduce using rule 20 (expression -> [ ] .)
    ONES            reduce using rule 20 (expression -> [ ] .)
    EYE             reduce using rule 20 (expression -> [ ] .)
    ID              reduce using rule 20 (expression -> [ ] .)
    STRING          reduce using rule 20 (expression -> [ ] .)
    BREAK           reduce using rule 20 (expression -> [ ] .)
    CONTINUE        reduce using rule 20 (expression -> [ ] .)
    INTNUM          reduce using rule 20 (expression -> [ ] .)
    FLOATNUM        reduce using rule 20 (expression -> [ ] .)


state 63

    (21) minit -> mrow . ;
    (22) minit -> mrow .
    (25) minit -> mrow . ; minit

    ;               shift and go to state 103
    ]               reduce using rule 22 (minit -> mrow .)


state 64

    (27) mrow -> number .
    (28) mrow -> number . , mrow

    ;               reduce using rule 27 (mrow -> number .)
    ]               reduce using rule 27 (mrow -> number .)
    ,               shift and go to state 104


state 65

    (31) expression -> assignable = . expression
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    assignable                     shift and go to state 18
    expression                     shift and go to state 105
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 66

    (34) expression -> assignable ADDASSIGN . expression
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    assignable                     shift and go to state 18
    expression                     shift and go to state 106
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 67

    (35) expression -> assignable SUBASSIGN . expression
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    assignable                     shift and go to state 18
    expression                     shift and go to state 107
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 68

    (36) expression -> assignable MULASSIGN . expression
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    assignable                     shift and go to state 18
    expression                     shift and go to state 108
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 69

    (37) expression -> assignable DIVASSIGN . expression
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    assignable                     shift and go to state 18
    expression                     shift and go to state 109
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 70

    (32) expression -> - expression .
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

    ;               reduce using rule 32 (expression -> - expression .)
    +               reduce using rule 32 (expression -> - expression .)
    -               reduce using rule 32 (expression -> - expression .)
    DOTADD          reduce using rule 32 (expression -> - expression .)
    DOTSUB          reduce using rule 32 (expression -> - expression .)
    EQ              reduce using rule 32 (expression -> - expression .)
    NOTEQ           reduce using rule 32 (expression -> - expression .)
    GT              reduce using rule 32 (expression -> - expression .)
    LT              reduce using rule 32 (expression -> - expression .)
    GTEQ            reduce using rule 32 (expression -> - expression .)
    LTEQ            reduce using rule 32 (expression -> - expression .)
    :               reduce using rule 32 (expression -> - expression .)
    ,               reduce using rule 32 (expression -> - expression .)
    )               reduce using rule 32 (expression -> - expression .)
    ]               reduce using rule 32 (expression -> - expression .)
    {               reduce using rule 32 (expression -> - expression .)
    PRINT           reduce using rule 32 (expression -> - expression .)
    IF              reduce using rule 32 (expression -> - expression .)
    WHILE           reduce using rule 32 (expression -> - expression .)
    FOR             reduce using rule 32 (expression -> - expression .)
    IMPORT          reduce using rule 32 (expression -> - expression .)
    RETURN          reduce using rule 32 (expression -> - expression .)
    (               reduce using rule 32 (expression -> - expression .)
    [               reduce using rule 32 (expression -> - expression .)
    ZEROS           reduce using rule 32 (expression -> - expression .)
    ONES            reduce using rule 32 (expression -> - expression .)
    EYE             reduce using rule 32 (expression -> - expression .)
    ID              reduce using rule 32 (expression -> - expression .)
    STRING          reduce using rule 32 (expression -> - expression .)
    BREAK           reduce using rule 32 (expression -> - expression .)
    CONTINUE        reduce using rule 32 (expression -> - expression .)
    INTNUM          reduce using rule 32 (expression -> - expression .)
    FLOATNUM        reduce using rule 32 (expression -> - expression .)
    '               shift and go to state 31
    *               shift and go to state 36
    /               shift and go to state 37
    DOTMUL          shift and go to state 38
    DOTDIV          shift and go to state 39

  ! '               [ reduce using rule 32 (expression -> - expression .) ]
  ! *               [ reduce using rule 32 (expression -> - expression .) ]
  ! /               [ reduce using rule 32 (expression -> - expression .) ]
  ! DOTMUL          [ reduce using rule 32 (expression -> - expression .) ]
  ! DOTDIV          [ reduce using rule 32 (expression -> - expression .) ]
  ! +               [ shift and go to state 32 ]
  ! -               [ shift and go to state 33 ]
  ! DOTADD          [ shift and go to state 34 ]
  ! DOTSUB          [ shift and go to state 35 ]
  ! EQ              [ shift and go to state 40 ]
  ! NOTEQ           [ shift and go to state 41 ]
  ! GT              [ shift and go to state 42 ]
  ! LT              [ shift and go to state 43 ]
  ! GTEQ            [ shift and go to state 44 ]
  ! LTEQ            [ shift and go to state 45 ]
  ! :               [ shift and go to state 46 ]


state 71

    (54) expression -> ZEROS ( . numbers )
    (52) numbers -> . number
    (53) numbers -> . numbers , number
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM

    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    numbers                        shift and go to state 110
    number                         shift and go to state 111

state 72

    (55) expression -> ONES ( . numbers )
    (52) numbers -> . number
    (53) numbers -> . numbers , number
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM

    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    numbers                        shift and go to state 112
    number                         shift and go to state 111

state 73

    (56) expression -> EYE ( . numbers )
    (52) numbers -> . number
    (53) numbers -> . numbers , number
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM

    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    numbers                        shift and go to state 113
    number                         shift and go to state 111

state 74

    (38) expression -> expression + expression .
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

    ;               reduce using rule 38 (expression -> expression + expression .)
    +               reduce using rule 38 (expression -> expression + expression .)
    -               reduce using rule 38 (expression -> expression + expression .)
    DOTADD          reduce using rule 38 (expression -> expression + expression .)
    DOTSUB          reduce using rule 38 (expression -> expression + expression .)
    EQ              reduce using rule 38 (expression -> expression + expression .)
    NOTEQ           reduce using rule 38 (expression -> expression + expression .)
    GT              reduce using rule 38 (expression -> expression + expression .)
    LT              reduce using rule 38 (expression -> expression + expression .)
    GTEQ            reduce using rule 38 (expression -> expression + expression .)
    LTEQ            reduce using rule 38 (expression -> expression + expression .)
    :               reduce using rule 38 (expression -> expression + expression .)
    ,               reduce using rule 38 (expression -> expression + expression .)
    )               reduce using rule 38 (expression -> expression + expression .)
    ]               reduce using rule 38 (expression -> expression + expression .)
    {               reduce using rule 38 (expression -> expression + expression .)
    PRINT           reduce using rule 38 (expression -> expression + expression .)
    IF              reduce using rule 38 (expression -> expression + expression .)
    WHILE           reduce using rule 38 (expression -> expression + expression .)
    FOR             reduce using rule 38 (expression -> expression + expression .)
    IMPORT          reduce using rule 38 (expression -> expression + expression .)
    RETURN          reduce using rule 38 (expression -> expression + expression .)
    (               reduce using rule 38 (expression -> expression + expression .)
    [               reduce using rule 38 (expression -> expression + expression .)
    ZEROS           reduce using rule 38 (expression -> expression + expression .)
    ONES            reduce using rule 38 (expression -> expression + expression .)
    EYE             reduce using rule 38 (expression -> expression + expression .)
    ID              reduce using rule 38 (expression -> expression + expression .)
    STRING          reduce using rule 38 (expression -> expression + expression .)
    BREAK           reduce using rule 38 (expression -> expression + expression .)
    CONTINUE        reduce using rule 38 (expression -> expression + expression .)
    INTNUM          reduce using rule 38 (expression -> expression + expression .)
    FLOATNUM        reduce using rule 38 (expression -> expression + expression .)
    '               shift and go to state 31
    *               shift and go to state 36
    /               shift and go to state 37
    DOTMUL          shift and go to state 38
    DOTDIV          shift and go to state 39

  ! '               [ reduce using rule 38 (expression -> expression + expression .) ]
  ! *               [ reduce using rule 38 (expression -> expression + expression .) ]
  ! /               [ reduce using rule 38 (expression -> expression + expression .) ]
  ! DOTMUL          [ reduce using rule 38 (expression -> expression + expression .) ]
  ! DOTDIV          [ reduce using rule 38 (expression -> expression + expression .) ]
  ! +               [ shift and go to state 32 ]
  ! -               [ shift and go to state 33 ]
  ! DOTADD          [ shift and go to state 34 ]
  ! DOTSUB          [ shift and go to state 35 ]
  ! EQ              [ shift and go to state 40 ]
  ! NOTEQ           [ shift and go to state 41 ]
  ! GT              [ shift and go to state 42 ]
  ! LT              [ shift and go to state 43 ]
  ! GTEQ            [ shift and go to state 44 ]
  ! LTEQ            [ shift and go to state 45 ]
  ! :               [ shift and go to state 46 ]


state 75

    (39) expression -> expression - expression .
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

    ;               reduce using rule 39 (expression -> expression - expression .)
    +               reduce using rule 39 (expression -> expression - expression .)
    -               reduce using rule 39 (expression -> expression - expression .)
    DOTADD          reduce using rule 39 (expression -> expression - expression .)
    DOTSUB          reduce using rule 39 (expression -> expression - expression .)
    EQ              reduce using rule 39 (expression -> expression - expression .)
    NOTEQ           reduce using rule 39 (expression -> expression - expression .)
    GT              reduce using rule 39 (expression -> expression - expression .)
    LT              reduce using rule 39 (expression -> expression - expression .)
    GTEQ            reduce using rule 39 (expression -> expression - expression .)
    LTEQ            reduce using rule 39 (expression -> expression - expression .)
    :               reduce using rule 39 (expression -> expression - expression .)
    ,               reduce using rule 39 (expression -> expression - expression .)
    )               reduce using rule 39 (expression -> expression - expression .)
    ]               reduce using rule 39 (expression -> expression - expression .)
    {               reduce using rule 39 (expression -> expression - expression .)
    PRINT           reduce using rule 39 (expression -> expression - expression .)
    IF              reduce using rule 39 (expression -> expression - expression .)
    WHILE           reduce using rule 39 (expression -> expression - expression .)
    FOR             reduce using rule 39 (expression -> expression - expression .)
    IMPORT          reduce using rule 39 (expression -> expression - expression .)
    RETURN          reduce using rule 39 (expression -> expression - expression .)
    (               reduce using rule 39 (expression -> expression - expression .)
    [               reduce using rule 39 (expression -> expression - expression .)
    ZEROS           reduce using rule 39 (expression -> expression - expression .)
    ONES            reduce using rule 39 (expression -> expression - expression .)
    EYE             reduce using rule 39 (expression -> expression - expression .)
    ID              reduce using rule 39 (expression -> expression - expression .)
    STRING          reduce using rule 39 (expression -> expression - expression .)
    BREAK           reduce using rule 39 (expression -> expression - expression .)
    CONTINUE        reduce using rule 39 (expression -> expression - expression .)
    INTNUM          reduce using rule 39 (expression -> expression - expression .)
    FLOATNUM        reduce using rule 39 (expression -> expression - expression .)
    '               shift and go to state 31
    *               shift and go to state 36
    /               shift and go to state 37
    DOTMUL          shift and go to state 38
    DOTDIV          shift and go to state 39

  ! '               [ reduce using rule 39 (expression -> expression - expression .) ]
  ! *               [ reduce using rule 39 (expression -> expression - expression .) ]
  ! /               [ reduce using rule 39 (expression -> expression - expression .) ]
  ! DOTMUL          [ reduce using rule 39 (expression -> expression - expression .) ]
  ! DOTDIV          [ reduce using rule 39 (expression -> expression - expression .) ]
  ! +               [ shift and go to state 32 ]
  ! -               [ shift and go to state 33 ]
  ! DOTADD          [ shift and go to state 34 ]
  ! DOTSUB          [ shift and go to state 35 ]
  ! EQ              [ shift and go to state 40 ]
  ! NOTEQ           [ shift and go to state 41 ]
  ! GT              [ shift and go to state 42 ]
  ! LT              [ shift and go to state 43 ]
  ! GTEQ            [ shift and go to state 44 ]
  ! LTEQ            [ shift and go to state 45 ]
  ! :               [ shift and go to state 46 ]


state 76

    (40) expression -> expression DOTADD expression .
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

    ;               reduce using rule 40 (expression -> expression DOTADD expression .)
    +               reduce using rule 40 (expression -> expression DOTADD expression .)
    -               reduce using rule 40 (expression -> expression DOTADD expression .)
    DOTADD          reduce using rule 40 (expression -> expression DOTADD expression .)
    DOTSUB          reduce using rule 40 (expression -> expression DOTADD expression .)
    EQ              reduce using rule 40 (expression -> expression DOTADD expression .)
    NOTEQ           reduce using rule 40 (expression -> expression DOTADD expression .)
    GT              reduce using rule 40 (expression -> expression DOTADD expression .)
    LT              reduce using rule 40 (expression -> expression DOTADD expression .)
    GTEQ            reduce using rule 40 (expression -> expression DOTADD expression .)
    LTEQ            reduce using rule 40 (expression -> expression DOTADD expression .)
    :               reduce using rule 40 (expression -> expression DOTADD expression .)
    ,               reduce using rule 40 (expression -> expression DOTADD expression .)
    )               reduce using rule 40 (expression -> expression DOTADD expression .)
    ]               reduce using rule 40 (expression -> expression DOTADD expression .)
    {               reduce using rule 40 (expression -> expression DOTADD expression .)
    PRINT           reduce using rule 40 (expression -> expression DOTADD expression .)
    IF              reduce using rule 40 (expression -> expression DOTADD expression .)
    WHILE           reduce using rule 40 (expression -> expression DOTADD expression .)
    FOR             reduce using rule 40 (expression -> expression DOTADD expression .)
    IMPORT          reduce using rule 40 (expression -> expression DOTADD expression .)
    RETURN          reduce using rule 40 (expression -> expression DOTADD expression .)
    (               reduce using rule 40 (expression -> expression DOTADD expression .)
    [               reduce using rule 40 (expression -> expression DOTADD expression .)
    ZEROS           reduce using rule 40 (expression -> expression DOTADD expression .)
    ONES            reduce using rule 40 (expression -> expression DOTADD expression .)
    EYE             reduce using rule 40 (expression -> expression DOTADD expression .)
    ID              reduce using rule 40 (expression -> expression DOTADD expression .)
    STRING          reduce using rule 40 (expression -> expression DOTADD expression .)
    BREAK           reduce using rule 40 (expression -> expression DOTADD expression .)
    CONTINUE        reduce using rule 40 (expression -> expression DOTADD expression .)
    INTNUM          reduce using rule 40 (expression -> expression DOTADD expression .)
    FLOATNUM        reduce using rule 40 (expression -> expression DOTADD expression .)
    '               shift and go to state 31
    *               shift and go to state 36
    /               shift and go to state 37
    DOTMUL          shift and go to state 38
    DOTDIV          shift and go to state 39

  ! '               [ reduce using rule 40 (expression -> expression DOTADD expression .) ]
  ! *               [ reduce using rule 40 (expression -> expression DOTADD expression .) ]
  ! /               [ reduce using rule 40 (expression -> expression DOTADD expression .) ]
  ! DOTMUL          [ reduce using rule 40 (expression -> expression DOTADD expression .) ]
  ! DOTDIV          [ reduce using rule 40 (expression -> expression DOTADD expression .) ]
  ! +               [ shift and go to state 32 ]
  ! -               [ shift and go to state 33 ]
  ! DOTADD          [ shift and go to state 34 ]
  ! DOTSUB          [ shift and go to state 35 ]
  ! EQ              [ shift and go to state 40 ]
  ! NOTEQ           [ shift and go to state 41 ]
  ! GT              [ shift and go to state 42 ]
  ! LT              [ shift and go to state 43 ]
  ! GTEQ            [ shift and go to state 44 ]
  ! LTEQ            [ shift and go to state 45 ]
  ! :               [ shift and go to state 46 ]


state 77

    (41) expression -> expression DOTSUB expression .
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

    ;               reduce using rule 41 (expression -> expression DOTSUB expression .)
    +               reduce using rule 41 (expression -> expression DOTSUB expression .)
    -               reduce using rule 41 (expression -> expression DOTSUB expression .)
    DOTADD          reduce using rule 41 (expression -> expression DOTSUB expression .)
    DOTSUB          reduce using rule 41 (expression -> expression DOTSUB expression .)
    EQ              reduce using rule 41 (expression -> expression DOTSUB expression .)
    NOTEQ           reduce using rule 41 (expression -> expression DOTSUB expression .)
    GT              reduce using rule 41 (expression -> expression DOTSUB expression .)
    LT              reduce using rule 41 (expression -> expression DOTSUB expression .)
    GTEQ            reduce using rule 41 (expression -> expression DOTSUB expression .)
    LTEQ            reduce using rule 41 (expression -> expression DOTSUB expression .)
    :               reduce using rule 41 (expression -> expression DOTSUB expression .)
    ,               reduce using rule 41 (expression -> expression DOTSUB expression .)
    )               reduce using rule 41 (expression -> expression DOTSUB expression .)
    ]               reduce using rule 41 (expression -> expression DOTSUB expression .)
    {               reduce using rule 41 (expression -> expression DOTSUB expression .)
    PRINT           reduce using rule 41 (expression -> expression DOTSUB expression .)
    IF              reduce using rule 41 (expression -> expression DOTSUB expression .)
    WHILE           reduce using rule 41 (expression -> expression DOTSUB expression .)
    FOR             reduce using rule 41 (expression -> expression DOTSUB expression .)
    IMPORT          reduce using rule 41 (expression -> expression DOTSUB expression .)
    RETURN          reduce using rule 41 (expression -> expression DOTSUB expression .)
    (               reduce using rule 41 (expression -> expression DOTSUB expression .)
    [               reduce using rule 41 (expression -> expression DOTSUB expression .)
    ZEROS           reduce using rule 41 (expression -> expression DOTSUB expression .)
    ONES            reduce using rule 41 (expression -> expression DOTSUB expression .)
    EYE             reduce using rule 41 (expression -> expression DOTSUB expression .)
    ID              reduce using rule 41 (expression -> expression DOTSUB expression .)
    STRING          reduce using rule 41 (expression -> expression DOTSUB expression .)
    BREAK           reduce using rule 41 (expression -> expression DOTSUB expression .)
    CONTINUE        reduce using rule 41 (expression -> expression DOTSUB expression .)
    INTNUM          reduce using rule 41 (expression -> expression DOTSUB expression .)
    FLOATNUM        reduce using rule 41 (expression -> expression DOTSUB expression .)
    '               shift and go to state 31
    *               shift and go to state 36
    /               shift and go to state 37
    DOTMUL          shift and go to state 38
    DOTDIV          shift and go to state 39

  ! '               [ reduce using rule 41 (expression -> expression DOTSUB expression .) ]
  ! *               [ reduce using rule 41 (expression -> expression DOTSUB expression .) ]
  ! /               [ reduce using rule 41 (expression -> expression DOTSUB expression .) ]
  ! DOTMUL          [ reduce using rule 41 (expression -> expression DOTSUB expression .) ]
  ! DOTDIV          [ reduce using rule 41 (expression -> expression DOTSUB expression .) ]
  ! +               [ shift and go to state 32 ]
  ! -               [ shift and go to state 33 ]
  ! DOTADD          [ shift and go to state 34 ]
  ! DOTSUB          [ shift and go to state 35 ]
  ! EQ              [ shift and go to state 40 ]
  ! NOTEQ           [ shift and go to state 41 ]
  ! GT              [ shift and go to state 42 ]
  ! LT              [ shift and go to state 43 ]
  ! GTEQ            [ shift and go to state 44 ]
  ! LTEQ            [ shift and go to state 45 ]
  ! :               [ shift and go to state 46 ]


state 78

    (42) expression -> expression * expression .
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

    ;               reduce using rule 42 (expression -> expression * expression .)
    +               reduce using rule 42 (expression -> expression * expression .)
    -               reduce using rule 42 (expression -> expression * expression .)
    DOTADD          reduce using rule 42 (expression -> expression * expression .)
    DOTSUB          reduce using rule 42 (expression -> expression * expression .)
    *               reduce using rule 42 (expression -> expression * expression .)
    /               reduce using rule 42 (expression -> expression * expression .)
    DOTMUL          reduce using rule 42 (expression -> expression * expression .)
    DOTDIV          reduce using rule 42 (expression -> expression * expression .)
    EQ              reduce using rule 42 (expression -> expression * expression .)
    NOTEQ           reduce using rule 42 (expression -> expression * expression .)
    GT              reduce using rule 42 (expression -> expression * expression .)
    LT              reduce using rule 42 (expression -> expression * expression .)
    GTEQ            reduce using rule 42 (expression -> expression * expression .)
    LTEQ            reduce using rule 42 (expression -> expression * expression .)
    :               reduce using rule 42 (expression -> expression * expression .)
    ,               reduce using rule 42 (expression -> expression * expression .)
    )               reduce using rule 42 (expression -> expression * expression .)
    ]               reduce using rule 42 (expression -> expression * expression .)
    {               reduce using rule 42 (expression -> expression * expression .)
    PRINT           reduce using rule 42 (expression -> expression * expression .)
    IF              reduce using rule 42 (expression -> expression * expression .)
    WHILE           reduce using rule 42 (expression -> expression * expression .)
    FOR             reduce using rule 42 (expression -> expression * expression .)
    IMPORT          reduce using rule 42 (expression -> expression * expression .)
    RETURN          reduce using rule 42 (expression -> expression * expression .)
    (               reduce using rule 42 (expression -> expression * expression .)
    [               reduce using rule 42 (expression -> expression * expression .)
    ZEROS           reduce using rule 42 (expression -> expression * expression .)
    ONES            reduce using rule 42 (expression -> expression * expression .)
    EYE             reduce using rule 42 (expression -> expression * expression .)
    ID              reduce using rule 42 (expression -> expression * expression .)
    STRING          reduce using rule 42 (expression -> expression * expression .)
    BREAK           reduce using rule 42 (expression -> expression * expression .)
    CONTINUE        reduce using rule 42 (expression -> expression * expression .)
    INTNUM          reduce using rule 42 (expression -> expression * expression .)
    FLOATNUM        reduce using rule 42 (expression -> expression * expression .)
    '               shift and go to state 31

  ! '               [ reduce using rule 42 (expression -> expression * expression .) ]
  ! +               [ shift and go to state 32 ]
  ! -               [ shift and go to state 33 ]
  ! DOTADD          [ shift and go to state 34 ]
  ! DOTSUB          [ shift and go to state 35 ]
  ! *               [ shift and go to state 36 ]
  ! /               [ shift and go to state 37 ]
  ! DOTMUL          [ shift and go to state 38 ]
  ! DOTDIV          [ shift and go to state 39 ]
  ! EQ              [ shift and go to state 40 ]
  ! NOTEQ           [ shift and go to state 41 ]
  ! GT              [ shift and go to state 42 ]
  ! LT              [ shift and go to state 43 ]
  ! GTEQ            [ shift and go to state 44 ]
  ! LTEQ            [ shift and go to state 45 ]
  ! :               [ shift and go to state 46 ]


state 79

    (43) expression -> expression / expression .
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

    ;               reduce using rule 43 (expression -> expression / expression .)
    +               reduce using rule 43 (expression -> expression / expression .)
    -               reduce using rule 43 (expression -> expression / expression .)
    DOTADD          reduce using rule 43 (expression -> expression / expression .)
    DOTSUB          reduce using rule 43 (expression -> expression / expression .)
    *               reduce using rule 43 (expression -> expression / expression .)
    /               reduce using rule 43 (expression -> expression / expression .)
    DOTMUL          reduce using rule 43 (expression -> expression / expression .)
    DOTDIV          reduce using rule 43 (expression -> expression / expression .)
    EQ              reduce using rule 43 (expression -> expression / expression .)
    NOTEQ           reduce using rule 43 (expression -> expression / expression .)
    GT              reduce using rule 43 (expression -> expression / expression .)
    LT              reduce using rule 43 (expression -> expression / expression .)
    GTEQ            reduce using rule 43 (expression -> expression / expression .)
    LTEQ            reduce using rule 43 (expression -> expression / expression .)
    :               reduce using rule 43 (expression -> expression / expression .)
    ,               reduce using rule 43 (expression -> expression / expression .)
    )               reduce using rule 43 (expression -> expression / expression .)
    ]               reduce using rule 43 (expression -> expression / expression .)
    {               reduce using rule 43 (expression -> expression / expression .)
    PRINT           reduce using rule 43 (expression -> expression / expression .)
    IF              reduce using rule 43 (expression -> expression / expression .)
    WHILE           reduce using rule 43 (expression -> expression / expression .)
    FOR             reduce using rule 43 (expression -> expression / expression .)
    IMPORT          reduce using rule 43 (expression -> expression / expression .)
    RETURN          reduce using rule 43 (expression -> expression / expression .)
    (               reduce using rule 43 (expression -> expression / expression .)
    [               reduce using rule 43 (expression -> expression / expression .)
    ZEROS           reduce using rule 43 (expression -> expression / expression .)
    ONES            reduce using rule 43 (expression -> expression / expression .)
    EYE             reduce using rule 43 (expression -> expression / expression .)
    ID              reduce using rule 43 (expression -> expression / expression .)
    STRING          reduce using rule 43 (expression -> expression / expression .)
    BREAK           reduce using rule 43 (expression -> expression / expression .)
    CONTINUE        reduce using rule 43 (expression -> expression / expression .)
    INTNUM          reduce using rule 43 (expression -> expression / expression .)
    FLOATNUM        reduce using rule 43 (expression -> expression / expression .)
    '               shift and go to state 31

  ! '               [ reduce using rule 43 (expression -> expression / expression .) ]
  ! +               [ shift and go to state 32 ]
  ! -               [ shift and go to state 33 ]
  ! DOTADD          [ shift and go to state 34 ]
  ! DOTSUB          [ shift and go to state 35 ]
  ! *               [ shift and go to state 36 ]
  ! /               [ shift and go to state 37 ]
  ! DOTMUL          [ shift and go to state 38 ]
  ! DOTDIV          [ shift and go to state 39 ]
  ! EQ              [ shift and go to state 40 ]
  ! NOTEQ           [ shift and go to state 41 ]
  ! GT              [ shift and go to state 42 ]
  ! LT              [ shift and go to state 43 ]
  ! GTEQ            [ shift and go to state 44 ]
  ! LTEQ            [ shift and go to state 45 ]
  ! :               [ shift and go to state 46 ]


state 80

    (44) expression -> expression DOTMUL expression .
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

    ;               reduce using rule 44 (expression -> expression DOTMUL expression .)
    +               reduce using rule 44 (expression -> expression DOTMUL expression .)
    -               reduce using rule 44 (expression -> expression DOTMUL expression .)
    DOTADD          reduce using rule 44 (expression -> expression DOTMUL expression .)
    DOTSUB          reduce using rule 44 (expression -> expression DOTMUL expression .)
    *               reduce using rule 44 (expression -> expression DOTMUL expression .)
    /               reduce using rule 44 (expression -> expression DOTMUL expression .)
    DOTMUL          reduce using rule 44 (expression -> expression DOTMUL expression .)
    DOTDIV          reduce using rule 44 (expression -> expression DOTMUL expression .)
    EQ              reduce using rule 44 (expression -> expression DOTMUL expression .)
    NOTEQ           reduce using rule 44 (expression -> expression DOTMUL expression .)
    GT              reduce using rule 44 (expression -> expression DOTMUL expression .)
    LT              reduce using rule 44 (expression -> expression DOTMUL expression .)
    GTEQ            reduce using rule 44 (expression -> expression DOTMUL expression .)
    LTEQ            reduce using rule 44 (expression -> expression DOTMUL expression .)
    :               reduce using rule 44 (expression -> expression DOTMUL expression .)
    ,               reduce using rule 44 (expression -> expression DOTMUL expression .)
    )               reduce using rule 44 (expression -> expression DOTMUL expression .)
    ]               reduce using rule 44 (expression -> expression DOTMUL expression .)
    {               reduce using rule 44 (expression -> expression DOTMUL expression .)
    PRINT           reduce using rule 44 (expression -> expression DOTMUL expression .)
    IF              reduce using rule 44 (expression -> expression DOTMUL expression .)
    WHILE           reduce using rule 44 (expression -> expression DOTMUL expression .)
    FOR             reduce using rule 44 (expression -> expression DOTMUL expression .)
    IMPORT          reduce using rule 44 (expression -> expression DOTMUL expression .)
    RETURN          reduce using rule 44 (expression -> expression DOTMUL expression .)
    (               reduce using rule 44 (expression -> expression DOTMUL expression .)
    [               reduce using rule 44 (expression -> expression DOTMUL expression .)
    ZEROS           reduce using rule 44 (expression -> expression DOTMUL expression .)
    ONES            reduce using rule 44 (expression -> expression DOTMUL expression .)
    EYE             reduce using rule 44 (expression -> expression DOTMUL expression .)
    ID              reduce using rule 44 (expression -> expression DOTMUL expression .)
    STRING          reduce using rule 44 (expression -> expression DOTMUL expression .)
    BREAK           reduce using rule 44 (expression -> expression DOTMUL expression .)
    CONTINUE        reduce using rule 44 (expression -> expression DOTMUL expression .)
    INTNUM          reduce using rule 44 (expression -> expression DOTMUL expression .)
    FLOATNUM        reduce using rule 44 (expression -> expression DOTMUL expression .)
    '               shift and go to state 31

  ! '               [ reduce using rule 44 (expression -> expression DOTMUL expression .) ]
  ! +               [ shift and go to state 32 ]
  ! -               [ shift and go to state 33 ]
  ! DOTADD          [ shift and go to state 34 ]
  ! DOTSUB          [ shift and go to state 35 ]
  ! *               [ shift and go to state 36 ]
  ! /               [ shift and go to state 37 ]
  ! DOTMUL          [ shift and go to state 38 ]
  ! DOTDIV          [ shift and go to state 39 ]
  ! EQ              [ shift and go to state 40 ]
  ! NOTEQ           [ shift and go to state 41 ]
  ! GT              [ shift and go to state 42 ]
  ! LT              [ shift and go to state 43 ]
  ! GTEQ            [ shift and go to state 44 ]
  ! LTEQ            [ shift and go to state 45 ]
  ! :               [ shift and go to state 46 ]


state 81

    (45) expression -> expression DOTDIV expression .
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

    ;               reduce using rule 45 (expression -> expression DOTDIV expression .)
    +               reduce using rule 45 (expression -> expression DOTDIV expression .)
    -               reduce using rule 45 (expression -> expression DOTDIV expression .)
    DOTADD          reduce using rule 45 (expression -> expression DOTDIV expression .)
    DOTSUB          reduce using rule 45 (expression -> expression DOTDIV expression .)
    *               reduce using rule 45 (expression -> expression DOTDIV expression .)
    /               reduce using rule 45 (expression -> expression DOTDIV expression .)
    DOTMUL          reduce using rule 45 (expression -> expression DOTDIV expression .)
    DOTDIV          reduce using rule 45 (expression -> expression DOTDIV expression .)
    EQ              reduce using rule 45 (expression -> expression DOTDIV expression .)
    NOTEQ           reduce using rule 45 (expression -> expression DOTDIV expression .)
    GT              reduce using rule 45 (expression -> expression DOTDIV expression .)
    LT              reduce using rule 45 (expression -> expression DOTDIV expression .)
    GTEQ            reduce using rule 45 (expression -> expression DOTDIV expression .)
    LTEQ            reduce using rule 45 (expression -> expression DOTDIV expression .)
    :               reduce using rule 45 (expression -> expression DOTDIV expression .)
    ,               reduce using rule 45 (expression -> expression DOTDIV expression .)
    )               reduce using rule 45 (expression -> expression DOTDIV expression .)
    ]               reduce using rule 45 (expression -> expression DOTDIV expression .)
    {               reduce using rule 45 (expression -> expression DOTDIV expression .)
    PRINT           reduce using rule 45 (expression -> expression DOTDIV expression .)
    IF              reduce using rule 45 (expression -> expression DOTDIV expression .)
    WHILE           reduce using rule 45 (expression -> expression DOTDIV expression .)
    FOR             reduce using rule 45 (expression -> expression DOTDIV expression .)
    IMPORT          reduce using rule 45 (expression -> expression DOTDIV expression .)
    RETURN          reduce using rule 45 (expression -> expression DOTDIV expression .)
    (               reduce using rule 45 (expression -> expression DOTDIV expression .)
    [               reduce using rule 45 (expression -> expression DOTDIV expression .)
    ZEROS           reduce using rule 45 (expression -> expression DOTDIV expression .)
    ONES            reduce using rule 45 (expression -> expression DOTDIV expression .)
    EYE             reduce using rule 45 (expression -> expression DOTDIV expression .)
    ID              reduce using rule 45 (expression -> expression DOTDIV expression .)
    STRING          reduce using rule 45 (expression -> expression DOTDIV expression .)
    BREAK           reduce using rule 45 (expression -> expression DOTDIV expression .)
    CONTINUE        reduce using rule 45 (expression -> expression DOTDIV expression .)
    INTNUM          reduce using rule 45 (expression -> expression DOTDIV expression .)
    FLOATNUM        reduce using rule 45 (expression -> expression DOTDIV expression .)
    '               shift and go to state 31

  ! '               [ reduce using rule 45 (expression -> expression DOTDIV expression .) ]
  ! +               [ shift and go to state 32 ]
  ! -               [ shift and go to state 33 ]
  ! DOTADD          [ shift and go to state 34 ]
  ! DOTSUB          [ shift and go to state 35 ]
  ! *               [ shift and go to state 36 ]
  ! /               [ shift and go to state 37 ]
  ! DOTMUL          [ shift and go to state 38 ]
  ! DOTDIV          [ shift and go to state 39 ]
  ! EQ              [ shift and go to state 40 ]
  ! NOTEQ           [ shift and go to state 41 ]
  ! GT              [ shift and go to state 42 ]
  ! LT              [ shift and go to state 43 ]
  ! GTEQ            [ shift and go to state 44 ]
  ! LTEQ            [ shift and go to state 45 ]
  ! :               [ shift and go to state 46 ]


state 82

    (46) expression -> expression EQ expression .
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

    ;               reduce using rule 46 (expression -> expression EQ expression .)
    EQ              reduce using rule 46 (expression -> expression EQ expression .)
    NOTEQ           reduce using rule 46 (expression -> expression EQ expression .)
    GT              reduce using rule 46 (expression -> expression EQ expression .)
    LT              reduce using rule 46 (expression -> expression EQ expression .)
    GTEQ            reduce using rule 46 (expression -> expression EQ expression .)
    LTEQ            reduce using rule 46 (expression -> expression EQ expression .)
    :               reduce using rule 46 (expression -> expression EQ expression .)
    ,               reduce using rule 46 (expression -> expression EQ expression .)
    )               reduce using rule 46 (expression -> expression EQ expression .)
    ]               reduce using rule 46 (expression -> expression EQ expression .)
    {               reduce using rule 46 (expression -> expression EQ expression .)
    PRINT           reduce using rule 46 (expression -> expression EQ expression .)
    IF              reduce using rule 46 (expression -> expression EQ expression .)
    WHILE           reduce using rule 46 (expression -> expression EQ expression .)
    FOR             reduce using rule 46 (expression -> expression EQ expression .)
    IMPORT          reduce using rule 46 (expression -> expression EQ expression .)
    RETURN          reduce using rule 46 (expression -> expression EQ expression .)
    (               reduce using rule 46 (expression -> expression EQ expression .)
    [               reduce using rule 46 (expression -> expression EQ expression .)
    ZEROS           reduce using rule 46 (expression -> expression EQ expression .)
    ONES            reduce using rule 46 (expression -> expression EQ expression .)
    EYE             reduce using rule 46 (expression -> expression EQ expression .)
    ID              reduce using rule 46 (expression -> expression EQ expression .)
    STRING          reduce using rule 46 (expression -> expression EQ expression .)
    BREAK           reduce using rule 46 (expression -> expression EQ expression .)
    CONTINUE        reduce using rule 46 (expression -> expression EQ expression .)
    INTNUM          reduce using rule 46 (expression -> expression EQ expression .)
    FLOATNUM        reduce using rule 46 (expression -> expression EQ expression .)
    '               shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    DOTADD          shift and go to state 34
    DOTSUB          shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTMUL          shift and go to state 38
    DOTDIV          shift and go to state 39

  ! '               [ reduce using rule 46 (expression -> expression EQ expression .) ]
  ! +               [ reduce using rule 46 (expression -> expression EQ expression .) ]
  ! -               [ reduce using rule 46 (expression -> expression EQ expression .) ]
  ! DOTADD          [ reduce using rule 46 (expression -> expression EQ expression .) ]
  ! DOTSUB          [ reduce using rule 46 (expression -> expression EQ expression .) ]
  ! *               [ reduce using rule 46 (expression -> expression EQ expression .) ]
  ! /               [ reduce using rule 46 (expression -> expression EQ expression .) ]
  ! DOTMUL          [ reduce using rule 46 (expression -> expression EQ expression .) ]
  ! DOTDIV          [ reduce using rule 46 (expression -> expression EQ expression .) ]
  ! EQ              [ shift and go to state 40 ]
  ! NOTEQ           [ shift and go to state 41 ]
  ! GT              [ shift and go to state 42 ]
  ! LT              [ shift and go to state 43 ]
  ! GTEQ            [ shift and go to state 44 ]
  ! LTEQ            [ shift and go to state 45 ]
  ! :               [ shift and go to state 46 ]


state 83

    (47) expression -> expression NOTEQ expression .
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

  ! shift/reduce conflict for ' resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for DOTADD resolved as shift
  ! shift/reduce conflict for DOTSUB resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GTEQ resolved as shift
  ! shift/reduce conflict for LTEQ resolved as shift
  ! shift/reduce conflict for : resolved as shift
    ;               reduce using rule 47 (expression -> expression NOTEQ expression .)
    ,               reduce using rule 47 (expression -> expression NOTEQ expression .)
    )               reduce using rule 47 (expression -> expression NOTEQ expression .)
    ]               reduce using rule 47 (expression -> expression NOTEQ expression .)
    {               reduce using rule 47 (expression -> expression NOTEQ expression .)
    PRINT           reduce using rule 47 (expression -> expression NOTEQ expression .)
    IF              reduce using rule 47 (expression -> expression NOTEQ expression .)
    WHILE           reduce using rule 47 (expression -> expression NOTEQ expression .)
    FOR             reduce using rule 47 (expression -> expression NOTEQ expression .)
    IMPORT          reduce using rule 47 (expression -> expression NOTEQ expression .)
    RETURN          reduce using rule 47 (expression -> expression NOTEQ expression .)
    (               reduce using rule 47 (expression -> expression NOTEQ expression .)
    [               reduce using rule 47 (expression -> expression NOTEQ expression .)
    ZEROS           reduce using rule 47 (expression -> expression NOTEQ expression .)
    ONES            reduce using rule 47 (expression -> expression NOTEQ expression .)
    EYE             reduce using rule 47 (expression -> expression NOTEQ expression .)
    ID              reduce using rule 47 (expression -> expression NOTEQ expression .)
    STRING          reduce using rule 47 (expression -> expression NOTEQ expression .)
    BREAK           reduce using rule 47 (expression -> expression NOTEQ expression .)
    CONTINUE        reduce using rule 47 (expression -> expression NOTEQ expression .)
    INTNUM          reduce using rule 47 (expression -> expression NOTEQ expression .)
    FLOATNUM        reduce using rule 47 (expression -> expression NOTEQ expression .)
    '               shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    DOTADD          shift and go to state 34
    DOTSUB          shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTMUL          shift and go to state 38
    DOTDIV          shift and go to state 39
    EQ              shift and go to state 40
    NOTEQ           shift and go to state 41
    GT              shift and go to state 42
    LT              shift and go to state 43
    GTEQ            shift and go to state 44
    LTEQ            shift and go to state 45
    :               shift and go to state 46

  ! '               [ reduce using rule 47 (expression -> expression NOTEQ expression .) ]
  ! +               [ reduce using rule 47 (expression -> expression NOTEQ expression .) ]
  ! -               [ reduce using rule 47 (expression -> expression NOTEQ expression .) ]
  ! DOTADD          [ reduce using rule 47 (expression -> expression NOTEQ expression .) ]
  ! DOTSUB          [ reduce using rule 47 (expression -> expression NOTEQ expression .) ]
  ! *               [ reduce using rule 47 (expression -> expression NOTEQ expression .) ]
  ! /               [ reduce using rule 47 (expression -> expression NOTEQ expression .) ]
  ! DOTMUL          [ reduce using rule 47 (expression -> expression NOTEQ expression .) ]
  ! DOTDIV          [ reduce using rule 47 (expression -> expression NOTEQ expression .) ]
  ! EQ              [ reduce using rule 47 (expression -> expression NOTEQ expression .) ]
  ! NOTEQ           [ reduce using rule 47 (expression -> expression NOTEQ expression .) ]
  ! GT              [ reduce using rule 47 (expression -> expression NOTEQ expression .) ]
  ! LT              [ reduce using rule 47 (expression -> expression NOTEQ expression .) ]
  ! GTEQ            [ reduce using rule 47 (expression -> expression NOTEQ expression .) ]
  ! LTEQ            [ reduce using rule 47 (expression -> expression NOTEQ expression .) ]
  ! :               [ reduce using rule 47 (expression -> expression NOTEQ expression .) ]


state 84

    (48) expression -> expression GT expression .
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

    ;               reduce using rule 48 (expression -> expression GT expression .)
    EQ              reduce using rule 48 (expression -> expression GT expression .)
    NOTEQ           reduce using rule 48 (expression -> expression GT expression .)
    GT              reduce using rule 48 (expression -> expression GT expression .)
    LT              reduce using rule 48 (expression -> expression GT expression .)
    GTEQ            reduce using rule 48 (expression -> expression GT expression .)
    LTEQ            reduce using rule 48 (expression -> expression GT expression .)
    :               reduce using rule 48 (expression -> expression GT expression .)
    ,               reduce using rule 48 (expression -> expression GT expression .)
    )               reduce using rule 48 (expression -> expression GT expression .)
    ]               reduce using rule 48 (expression -> expression GT expression .)
    {               reduce using rule 48 (expression -> expression GT expression .)
    PRINT           reduce using rule 48 (expression -> expression GT expression .)
    IF              reduce using rule 48 (expression -> expression GT expression .)
    WHILE           reduce using rule 48 (expression -> expression GT expression .)
    FOR             reduce using rule 48 (expression -> expression GT expression .)
    IMPORT          reduce using rule 48 (expression -> expression GT expression .)
    RETURN          reduce using rule 48 (expression -> expression GT expression .)
    (               reduce using rule 48 (expression -> expression GT expression .)
    [               reduce using rule 48 (expression -> expression GT expression .)
    ZEROS           reduce using rule 48 (expression -> expression GT expression .)
    ONES            reduce using rule 48 (expression -> expression GT expression .)
    EYE             reduce using rule 48 (expression -> expression GT expression .)
    ID              reduce using rule 48 (expression -> expression GT expression .)
    STRING          reduce using rule 48 (expression -> expression GT expression .)
    BREAK           reduce using rule 48 (expression -> expression GT expression .)
    CONTINUE        reduce using rule 48 (expression -> expression GT expression .)
    INTNUM          reduce using rule 48 (expression -> expression GT expression .)
    FLOATNUM        reduce using rule 48 (expression -> expression GT expression .)
    '               shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    DOTADD          shift and go to state 34
    DOTSUB          shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTMUL          shift and go to state 38
    DOTDIV          shift and go to state 39

  ! '               [ reduce using rule 48 (expression -> expression GT expression .) ]
  ! +               [ reduce using rule 48 (expression -> expression GT expression .) ]
  ! -               [ reduce using rule 48 (expression -> expression GT expression .) ]
  ! DOTADD          [ reduce using rule 48 (expression -> expression GT expression .) ]
  ! DOTSUB          [ reduce using rule 48 (expression -> expression GT expression .) ]
  ! *               [ reduce using rule 48 (expression -> expression GT expression .) ]
  ! /               [ reduce using rule 48 (expression -> expression GT expression .) ]
  ! DOTMUL          [ reduce using rule 48 (expression -> expression GT expression .) ]
  ! DOTDIV          [ reduce using rule 48 (expression -> expression GT expression .) ]
  ! EQ              [ shift and go to state 40 ]
  ! NOTEQ           [ shift and go to state 41 ]
  ! GT              [ shift and go to state 42 ]
  ! LT              [ shift and go to state 43 ]
  ! GTEQ            [ shift and go to state 44 ]
  ! LTEQ            [ shift and go to state 45 ]
  ! :               [ shift and go to state 46 ]


state 85

    (49) expression -> expression LT expression .
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

    ;               reduce using rule 49 (expression -> expression LT expression .)
    EQ              reduce using rule 49 (expression -> expression LT expression .)
    NOTEQ           reduce using rule 49 (expression -> expression LT expression .)
    GT              reduce using rule 49 (expression -> expression LT expression .)
    LT              reduce using rule 49 (expression -> expression LT expression .)
    GTEQ            reduce using rule 49 (expression -> expression LT expression .)
    LTEQ            reduce using rule 49 (expression -> expression LT expression .)
    :               reduce using rule 49 (expression -> expression LT expression .)
    ,               reduce using rule 49 (expression -> expression LT expression .)
    )               reduce using rule 49 (expression -> expression LT expression .)
    ]               reduce using rule 49 (expression -> expression LT expression .)
    {               reduce using rule 49 (expression -> expression LT expression .)
    PRINT           reduce using rule 49 (expression -> expression LT expression .)
    IF              reduce using rule 49 (expression -> expression LT expression .)
    WHILE           reduce using rule 49 (expression -> expression LT expression .)
    FOR             reduce using rule 49 (expression -> expression LT expression .)
    IMPORT          reduce using rule 49 (expression -> expression LT expression .)
    RETURN          reduce using rule 49 (expression -> expression LT expression .)
    (               reduce using rule 49 (expression -> expression LT expression .)
    [               reduce using rule 49 (expression -> expression LT expression .)
    ZEROS           reduce using rule 49 (expression -> expression LT expression .)
    ONES            reduce using rule 49 (expression -> expression LT expression .)
    EYE             reduce using rule 49 (expression -> expression LT expression .)
    ID              reduce using rule 49 (expression -> expression LT expression .)
    STRING          reduce using rule 49 (expression -> expression LT expression .)
    BREAK           reduce using rule 49 (expression -> expression LT expression .)
    CONTINUE        reduce using rule 49 (expression -> expression LT expression .)
    INTNUM          reduce using rule 49 (expression -> expression LT expression .)
    FLOATNUM        reduce using rule 49 (expression -> expression LT expression .)
    '               shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    DOTADD          shift and go to state 34
    DOTSUB          shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTMUL          shift and go to state 38
    DOTDIV          shift and go to state 39

  ! '               [ reduce using rule 49 (expression -> expression LT expression .) ]
  ! +               [ reduce using rule 49 (expression -> expression LT expression .) ]
  ! -               [ reduce using rule 49 (expression -> expression LT expression .) ]
  ! DOTADD          [ reduce using rule 49 (expression -> expression LT expression .) ]
  ! DOTSUB          [ reduce using rule 49 (expression -> expression LT expression .) ]
  ! *               [ reduce using rule 49 (expression -> expression LT expression .) ]
  ! /               [ reduce using rule 49 (expression -> expression LT expression .) ]
  ! DOTMUL          [ reduce using rule 49 (expression -> expression LT expression .) ]
  ! DOTDIV          [ reduce using rule 49 (expression -> expression LT expression .) ]
  ! EQ              [ shift and go to state 40 ]
  ! NOTEQ           [ shift and go to state 41 ]
  ! GT              [ shift and go to state 42 ]
  ! LT              [ shift and go to state 43 ]
  ! GTEQ            [ shift and go to state 44 ]
  ! LTEQ            [ shift and go to state 45 ]
  ! :               [ shift and go to state 46 ]


state 86

    (50) expression -> expression GTEQ expression .
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

    ;               reduce using rule 50 (expression -> expression GTEQ expression .)
    EQ              reduce using rule 50 (expression -> expression GTEQ expression .)
    NOTEQ           reduce using rule 50 (expression -> expression GTEQ expression .)
    GT              reduce using rule 50 (expression -> expression GTEQ expression .)
    LT              reduce using rule 50 (expression -> expression GTEQ expression .)
    GTEQ            reduce using rule 50 (expression -> expression GTEQ expression .)
    LTEQ            reduce using rule 50 (expression -> expression GTEQ expression .)
    :               reduce using rule 50 (expression -> expression GTEQ expression .)
    ,               reduce using rule 50 (expression -> expression GTEQ expression .)
    )               reduce using rule 50 (expression -> expression GTEQ expression .)
    ]               reduce using rule 50 (expression -> expression GTEQ expression .)
    {               reduce using rule 50 (expression -> expression GTEQ expression .)
    PRINT           reduce using rule 50 (expression -> expression GTEQ expression .)
    IF              reduce using rule 50 (expression -> expression GTEQ expression .)
    WHILE           reduce using rule 50 (expression -> expression GTEQ expression .)
    FOR             reduce using rule 50 (expression -> expression GTEQ expression .)
    IMPORT          reduce using rule 50 (expression -> expression GTEQ expression .)
    RETURN          reduce using rule 50 (expression -> expression GTEQ expression .)
    (               reduce using rule 50 (expression -> expression GTEQ expression .)
    [               reduce using rule 50 (expression -> expression GTEQ expression .)
    ZEROS           reduce using rule 50 (expression -> expression GTEQ expression .)
    ONES            reduce using rule 50 (expression -> expression GTEQ expression .)
    EYE             reduce using rule 50 (expression -> expression GTEQ expression .)
    ID              reduce using rule 50 (expression -> expression GTEQ expression .)
    STRING          reduce using rule 50 (expression -> expression GTEQ expression .)
    BREAK           reduce using rule 50 (expression -> expression GTEQ expression .)
    CONTINUE        reduce using rule 50 (expression -> expression GTEQ expression .)
    INTNUM          reduce using rule 50 (expression -> expression GTEQ expression .)
    FLOATNUM        reduce using rule 50 (expression -> expression GTEQ expression .)
    '               shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    DOTADD          shift and go to state 34
    DOTSUB          shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTMUL          shift and go to state 38
    DOTDIV          shift and go to state 39

  ! '               [ reduce using rule 50 (expression -> expression GTEQ expression .) ]
  ! +               [ reduce using rule 50 (expression -> expression GTEQ expression .) ]
  ! -               [ reduce using rule 50 (expression -> expression GTEQ expression .) ]
  ! DOTADD          [ reduce using rule 50 (expression -> expression GTEQ expression .) ]
  ! DOTSUB          [ reduce using rule 50 (expression -> expression GTEQ expression .) ]
  ! *               [ reduce using rule 50 (expression -> expression GTEQ expression .) ]
  ! /               [ reduce using rule 50 (expression -> expression GTEQ expression .) ]
  ! DOTMUL          [ reduce using rule 50 (expression -> expression GTEQ expression .) ]
  ! DOTDIV          [ reduce using rule 50 (expression -> expression GTEQ expression .) ]
  ! EQ              [ shift and go to state 40 ]
  ! NOTEQ           [ shift and go to state 41 ]
  ! GT              [ shift and go to state 42 ]
  ! LT              [ shift and go to state 43 ]
  ! GTEQ            [ shift and go to state 44 ]
  ! LTEQ            [ shift and go to state 45 ]
  ! :               [ shift and go to state 46 ]


state 87

    (51) expression -> expression LTEQ expression .
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

    ;               reduce using rule 51 (expression -> expression LTEQ expression .)
    EQ              reduce using rule 51 (expression -> expression LTEQ expression .)
    NOTEQ           reduce using rule 51 (expression -> expression LTEQ expression .)
    GT              reduce using rule 51 (expression -> expression LTEQ expression .)
    LT              reduce using rule 51 (expression -> expression LTEQ expression .)
    GTEQ            reduce using rule 51 (expression -> expression LTEQ expression .)
    LTEQ            reduce using rule 51 (expression -> expression LTEQ expression .)
    :               reduce using rule 51 (expression -> expression LTEQ expression .)
    ,               reduce using rule 51 (expression -> expression LTEQ expression .)
    )               reduce using rule 51 (expression -> expression LTEQ expression .)
    ]               reduce using rule 51 (expression -> expression LTEQ expression .)
    {               reduce using rule 51 (expression -> expression LTEQ expression .)
    PRINT           reduce using rule 51 (expression -> expression LTEQ expression .)
    IF              reduce using rule 51 (expression -> expression LTEQ expression .)
    WHILE           reduce using rule 51 (expression -> expression LTEQ expression .)
    FOR             reduce using rule 51 (expression -> expression LTEQ expression .)
    IMPORT          reduce using rule 51 (expression -> expression LTEQ expression .)
    RETURN          reduce using rule 51 (expression -> expression LTEQ expression .)
    (               reduce using rule 51 (expression -> expression LTEQ expression .)
    [               reduce using rule 51 (expression -> expression LTEQ expression .)
    ZEROS           reduce using rule 51 (expression -> expression LTEQ expression .)
    ONES            reduce using rule 51 (expression -> expression LTEQ expression .)
    EYE             reduce using rule 51 (expression -> expression LTEQ expression .)
    ID              reduce using rule 51 (expression -> expression LTEQ expression .)
    STRING          reduce using rule 51 (expression -> expression LTEQ expression .)
    BREAK           reduce using rule 51 (expression -> expression LTEQ expression .)
    CONTINUE        reduce using rule 51 (expression -> expression LTEQ expression .)
    INTNUM          reduce using rule 51 (expression -> expression LTEQ expression .)
    FLOATNUM        reduce using rule 51 (expression -> expression LTEQ expression .)
    '               shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    DOTADD          shift and go to state 34
    DOTSUB          shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTMUL          shift and go to state 38
    DOTDIV          shift and go to state 39

  ! '               [ reduce using rule 51 (expression -> expression LTEQ expression .) ]
  ! +               [ reduce using rule 51 (expression -> expression LTEQ expression .) ]
  ! -               [ reduce using rule 51 (expression -> expression LTEQ expression .) ]
  ! DOTADD          [ reduce using rule 51 (expression -> expression LTEQ expression .) ]
  ! DOTSUB          [ reduce using rule 51 (expression -> expression LTEQ expression .) ]
  ! *               [ reduce using rule 51 (expression -> expression LTEQ expression .) ]
  ! /               [ reduce using rule 51 (expression -> expression LTEQ expression .) ]
  ! DOTMUL          [ reduce using rule 51 (expression -> expression LTEQ expression .) ]
  ! DOTDIV          [ reduce using rule 51 (expression -> expression LTEQ expression .) ]
  ! EQ              [ shift and go to state 40 ]
  ! NOTEQ           [ shift and go to state 41 ]
  ! GT              [ shift and go to state 42 ]
  ! LT              [ shift and go to state 43 ]
  ! GTEQ            [ shift and go to state 44 ]
  ! LTEQ            [ shift and go to state 45 ]
  ! :               [ shift and go to state 46 ]


state 88

    (69) range -> expression : expression .
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

  ! shift/reduce conflict for ' resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for DOTADD resolved as shift
  ! shift/reduce conflict for DOTSUB resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GTEQ resolved as shift
  ! shift/reduce conflict for LTEQ resolved as shift
  ! shift/reduce conflict for : resolved as shift
    ;               reduce using rule 69 (range -> expression : expression .)
    ,               reduce using rule 69 (range -> expression : expression .)
    )               reduce using rule 69 (range -> expression : expression .)
    ]               reduce using rule 69 (range -> expression : expression .)
    {               reduce using rule 69 (range -> expression : expression .)
    PRINT           reduce using rule 69 (range -> expression : expression .)
    IF              reduce using rule 69 (range -> expression : expression .)
    WHILE           reduce using rule 69 (range -> expression : expression .)
    FOR             reduce using rule 69 (range -> expression : expression .)
    IMPORT          reduce using rule 69 (range -> expression : expression .)
    RETURN          reduce using rule 69 (range -> expression : expression .)
    (               reduce using rule 69 (range -> expression : expression .)
    [               reduce using rule 69 (range -> expression : expression .)
    ZEROS           reduce using rule 69 (range -> expression : expression .)
    ONES            reduce using rule 69 (range -> expression : expression .)
    EYE             reduce using rule 69 (range -> expression : expression .)
    ID              reduce using rule 69 (range -> expression : expression .)
    STRING          reduce using rule 69 (range -> expression : expression .)
    BREAK           reduce using rule 69 (range -> expression : expression .)
    CONTINUE        reduce using rule 69 (range -> expression : expression .)
    INTNUM          reduce using rule 69 (range -> expression : expression .)
    FLOATNUM        reduce using rule 69 (range -> expression : expression .)
    '               shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    DOTADD          shift and go to state 34
    DOTSUB          shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTMUL          shift and go to state 38
    DOTDIV          shift and go to state 39
    EQ              shift and go to state 40
    NOTEQ           shift and go to state 41
    GT              shift and go to state 42
    LT              shift and go to state 43
    GTEQ            shift and go to state 44
    LTEQ            shift and go to state 45
    :               shift and go to state 46

  ! '               [ reduce using rule 69 (range -> expression : expression .) ]
  ! +               [ reduce using rule 69 (range -> expression : expression .) ]
  ! -               [ reduce using rule 69 (range -> expression : expression .) ]
  ! DOTADD          [ reduce using rule 69 (range -> expression : expression .) ]
  ! DOTSUB          [ reduce using rule 69 (range -> expression : expression .) ]
  ! *               [ reduce using rule 69 (range -> expression : expression .) ]
  ! /               [ reduce using rule 69 (range -> expression : expression .) ]
  ! DOTMUL          [ reduce using rule 69 (range -> expression : expression .) ]
  ! DOTDIV          [ reduce using rule 69 (range -> expression : expression .) ]
  ! EQ              [ reduce using rule 69 (range -> expression : expression .) ]
  ! NOTEQ           [ reduce using rule 69 (range -> expression : expression .) ]
  ! GT              [ reduce using rule 69 (range -> expression : expression .) ]
  ! LT              [ reduce using rule 69 (range -> expression : expression .) ]
  ! GTEQ            [ reduce using rule 69 (range -> expression : expression .) ]
  ! LTEQ            [ reduce using rule 69 (range -> expression : expression .) ]
  ! :               [ reduce using rule 69 (range -> expression : expression .) ]


state 89

    (15) statement -> { statements } .

    {               reduce using rule 15 (statement -> { statements } .)
    PRINT           reduce using rule 15 (statement -> { statements } .)
    IF              reduce using rule 15 (statement -> { statements } .)
    WHILE           reduce using rule 15 (statement -> { statements } .)
    FOR             reduce using rule 15 (statement -> { statements } .)
    IMPORT          reduce using rule 15 (statement -> { statements } .)
    RETURN          reduce using rule 15 (statement -> { statements } .)
    (               reduce using rule 15 (statement -> { statements } .)
    [               reduce using rule 15 (statement -> { statements } .)
    -               reduce using rule 15 (statement -> { statements } .)
    ZEROS           reduce using rule 15 (statement -> { statements } .)
    ONES            reduce using rule 15 (statement -> { statements } .)
    EYE             reduce using rule 15 (statement -> { statements } .)
    ID              reduce using rule 15 (statement -> { statements } .)
    STRING          reduce using rule 15 (statement -> { statements } .)
    BREAK           reduce using rule 15 (statement -> { statements } .)
    CONTINUE        reduce using rule 15 (statement -> { statements } .)
    INTNUM          reduce using rule 15 (statement -> { statements } .)
    FLOATNUM        reduce using rule 15 (statement -> { statements } .)
    $end            reduce using rule 15 (statement -> { statements } .)
    }               reduce using rule 15 (statement -> { statements } .)
    ELSE            reduce using rule 15 (statement -> { statements } .)
    ;               reduce using rule 15 (statement -> { statements } .)
    '               reduce using rule 15 (statement -> { statements } .)
    +               reduce using rule 15 (statement -> { statements } .)
    DOTADD          reduce using rule 15 (statement -> { statements } .)
    DOTSUB          reduce using rule 15 (statement -> { statements } .)
    *               reduce using rule 15 (statement -> { statements } .)
    /               reduce using rule 15 (statement -> { statements } .)
    DOTMUL          reduce using rule 15 (statement -> { statements } .)
    DOTDIV          reduce using rule 15 (statement -> { statements } .)
    EQ              reduce using rule 15 (statement -> { statements } .)
    NOTEQ           reduce using rule 15 (statement -> { statements } .)
    GT              reduce using rule 15 (statement -> { statements } .)
    LT              reduce using rule 15 (statement -> { statements } .)
    GTEQ            reduce using rule 15 (statement -> { statements } .)
    LTEQ            reduce using rule 15 (statement -> { statements } .)
    :               reduce using rule 15 (statement -> { statements } .)
    ,               reduce using rule 15 (statement -> { statements } .)
    )               reduce using rule 15 (statement -> { statements } .)
    ]               reduce using rule 15 (statement -> { statements } .)


state 90

    (16) statement -> PRINT expressions ; .

    {               reduce using rule 16 (statement -> PRINT expressions ; .)
    PRINT           reduce using rule 16 (statement -> PRINT expressions ; .)
    IF              reduce using rule 16 (statement -> PRINT expressions ; .)
    WHILE           reduce using rule 16 (statement -> PRINT expressions ; .)
    FOR             reduce using rule 16 (statement -> PRINT expressions ; .)
    IMPORT          reduce using rule 16 (statement -> PRINT expressions ; .)
    RETURN          reduce using rule 16 (statement -> PRINT expressions ; .)
    (               reduce using rule 16 (statement -> PRINT expressions ; .)
    [               reduce using rule 16 (statement -> PRINT expressions ; .)
    -               reduce using rule 16 (statement -> PRINT expressions ; .)
    ZEROS           reduce using rule 16 (statement -> PRINT expressions ; .)
    ONES            reduce using rule 16 (statement -> PRINT expressions ; .)
    EYE             reduce using rule 16 (statement -> PRINT expressions ; .)
    ID              reduce using rule 16 (statement -> PRINT expressions ; .)
    STRING          reduce using rule 16 (statement -> PRINT expressions ; .)
    BREAK           reduce using rule 16 (statement -> PRINT expressions ; .)
    CONTINUE        reduce using rule 16 (statement -> PRINT expressions ; .)
    INTNUM          reduce using rule 16 (statement -> PRINT expressions ; .)
    FLOATNUM        reduce using rule 16 (statement -> PRINT expressions ; .)
    $end            reduce using rule 16 (statement -> PRINT expressions ; .)
    }               reduce using rule 16 (statement -> PRINT expressions ; .)
    ELSE            reduce using rule 16 (statement -> PRINT expressions ; .)
    ;               reduce using rule 16 (statement -> PRINT expressions ; .)
    '               reduce using rule 16 (statement -> PRINT expressions ; .)
    +               reduce using rule 16 (statement -> PRINT expressions ; .)
    DOTADD          reduce using rule 16 (statement -> PRINT expressions ; .)
    DOTSUB          reduce using rule 16 (statement -> PRINT expressions ; .)
    *               reduce using rule 16 (statement -> PRINT expressions ; .)
    /               reduce using rule 16 (statement -> PRINT expressions ; .)
    DOTMUL          reduce using rule 16 (statement -> PRINT expressions ; .)
    DOTDIV          reduce using rule 16 (statement -> PRINT expressions ; .)
    EQ              reduce using rule 16 (statement -> PRINT expressions ; .)
    NOTEQ           reduce using rule 16 (statement -> PRINT expressions ; .)
    GT              reduce using rule 16 (statement -> PRINT expressions ; .)
    LT              reduce using rule 16 (statement -> PRINT expressions ; .)
    GTEQ            reduce using rule 16 (statement -> PRINT expressions ; .)
    LTEQ            reduce using rule 16 (statement -> PRINT expressions ; .)
    :               reduce using rule 16 (statement -> PRINT expressions ; .)
    ,               reduce using rule 16 (statement -> PRINT expressions ; .)
    )               reduce using rule 16 (statement -> PRINT expressions ; .)
    ]               reduce using rule 16 (statement -> PRINT expressions ; .)


state 91

    (18) expressions -> expressions , . expression
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    expression                     shift and go to state 114
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 92

    (3) instruction -> IF ( expression . ) statement
    (4) instruction -> IF ( expression . ) statement ELSE statement
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

    )               shift and go to state 115
    '               shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    DOTADD          shift and go to state 34
    DOTSUB          shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTMUL          shift and go to state 38
    DOTDIV          shift and go to state 39
    EQ              shift and go to state 40
    NOTEQ           shift and go to state 41
    GT              shift and go to state 42
    LT              shift and go to state 43
    GTEQ            shift and go to state 44
    LTEQ            shift and go to state 45
    :               shift and go to state 46


state 93

    (7) expression -> ( args ) . ARROW statement

    ARROW           shift and go to state 116


state 94

    (11) args -> args , . ID

    ID              shift and go to state 117


state 95

    (65) expression -> ( expression ) .

    ;               reduce using rule 65 (expression -> ( expression ) .)
    '               reduce using rule 65 (expression -> ( expression ) .)
    +               reduce using rule 65 (expression -> ( expression ) .)
    -               reduce using rule 65 (expression -> ( expression ) .)
    DOTADD          reduce using rule 65 (expression -> ( expression ) .)
    DOTSUB          reduce using rule 65 (expression -> ( expression ) .)
    *               reduce using rule 65 (expression -> ( expression ) .)
    /               reduce using rule 65 (expression -> ( expression ) .)
    DOTMUL          reduce using rule 65 (expression -> ( expression ) .)
    DOTDIV          reduce using rule 65 (expression -> ( expression ) .)
    EQ              reduce using rule 65 (expression -> ( expression ) .)
    NOTEQ           reduce using rule 65 (expression -> ( expression ) .)
    GT              reduce using rule 65 (expression -> ( expression ) .)
    LT              reduce using rule 65 (expression -> ( expression ) .)
    GTEQ            reduce using rule 65 (expression -> ( expression ) .)
    LTEQ            reduce using rule 65 (expression -> ( expression ) .)
    :               reduce using rule 65 (expression -> ( expression ) .)
    ,               reduce using rule 65 (expression -> ( expression ) .)
    )               reduce using rule 65 (expression -> ( expression ) .)
    ]               reduce using rule 65 (expression -> ( expression ) .)
    {               reduce using rule 65 (expression -> ( expression ) .)
    PRINT           reduce using rule 65 (expression -> ( expression ) .)
    IF              reduce using rule 65 (expression -> ( expression ) .)
    WHILE           reduce using rule 65 (expression -> ( expression ) .)
    FOR             reduce using rule 65 (expression -> ( expression ) .)
    IMPORT          reduce using rule 65 (expression -> ( expression ) .)
    RETURN          reduce using rule 65 (expression -> ( expression ) .)
    (               reduce using rule 65 (expression -> ( expression ) .)
    [               reduce using rule 65 (expression -> ( expression ) .)
    ZEROS           reduce using rule 65 (expression -> ( expression ) .)
    ONES            reduce using rule 65 (expression -> ( expression ) .)
    EYE             reduce using rule 65 (expression -> ( expression ) .)
    ID              reduce using rule 65 (expression -> ( expression ) .)
    STRING          reduce using rule 65 (expression -> ( expression ) .)
    BREAK           reduce using rule 65 (expression -> ( expression ) .)
    CONTINUE        reduce using rule 65 (expression -> ( expression ) .)
    INTNUM          reduce using rule 65 (expression -> ( expression ) .)
    FLOATNUM        reduce using rule 65 (expression -> ( expression ) .)


state 96

    (5) instruction -> WHILE ( expression . ) statement
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

    )               shift and go to state 118
    '               shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    DOTADD          shift and go to state 34
    DOTSUB          shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTMUL          shift and go to state 38
    DOTDIV          shift and go to state 39
    EQ              shift and go to state 40
    NOTEQ           shift and go to state 41
    GT              shift and go to state 42
    LT              shift and go to state 43
    GTEQ            shift and go to state 44
    LTEQ            shift and go to state 45
    :               shift and go to state 46


state 97

    (8) instruction -> FOR ID = . range statement
    (69) range -> . expression : expression
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    range                          shift and go to state 119
    expression                     shift and go to state 120
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    matrixcellgetter               shift and go to state 26

state 98

    (57) expression -> ID ( expressions . )
    (18) expressions -> expressions . , expression

    )               shift and go to state 121
    ,               shift and go to state 91


state 99

    (63) matrixcellgetter -> ID [ expression . , expression ]
    (64) matrixcellgetter -> ID [ expression . ]
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

    ,               shift and go to state 122
    ]               shift and go to state 123
    '               shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    DOTADD          shift and go to state 34
    DOTSUB          shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTMUL          shift and go to state 38
    DOTDIV          shift and go to state 39
    EQ              shift and go to state 40
    NOTEQ           shift and go to state 41
    GT              shift and go to state 42
    LT              shift and go to state 43
    GTEQ            shift and go to state 44
    LTEQ            shift and go to state 45
    :               shift and go to state 46


state 100

    (9) instruction -> IMPORT STRING ; .

    {               reduce using rule 9 (instruction -> IMPORT STRING ; .)
    PRINT           reduce using rule 9 (instruction -> IMPORT STRING ; .)
    IF              reduce using rule 9 (instruction -> IMPORT STRING ; .)
    WHILE           reduce using rule 9 (instruction -> IMPORT STRING ; .)
    FOR             reduce using rule 9 (instruction -> IMPORT STRING ; .)
    IMPORT          reduce using rule 9 (instruction -> IMPORT STRING ; .)
    RETURN          reduce using rule 9 (instruction -> IMPORT STRING ; .)
    (               reduce using rule 9 (instruction -> IMPORT STRING ; .)
    [               reduce using rule 9 (instruction -> IMPORT STRING ; .)
    -               reduce using rule 9 (instruction -> IMPORT STRING ; .)
    ZEROS           reduce using rule 9 (instruction -> IMPORT STRING ; .)
    ONES            reduce using rule 9 (instruction -> IMPORT STRING ; .)
    EYE             reduce using rule 9 (instruction -> IMPORT STRING ; .)
    ID              reduce using rule 9 (instruction -> IMPORT STRING ; .)
    STRING          reduce using rule 9 (instruction -> IMPORT STRING ; .)
    BREAK           reduce using rule 9 (instruction -> IMPORT STRING ; .)
    CONTINUE        reduce using rule 9 (instruction -> IMPORT STRING ; .)
    INTNUM          reduce using rule 9 (instruction -> IMPORT STRING ; .)
    FLOATNUM        reduce using rule 9 (instruction -> IMPORT STRING ; .)
    $end            reduce using rule 9 (instruction -> IMPORT STRING ; .)
    }               reduce using rule 9 (instruction -> IMPORT STRING ; .)
    ELSE            reduce using rule 9 (instruction -> IMPORT STRING ; .)
    ;               reduce using rule 9 (instruction -> IMPORT STRING ; .)
    '               reduce using rule 9 (instruction -> IMPORT STRING ; .)
    +               reduce using rule 9 (instruction -> IMPORT STRING ; .)
    DOTADD          reduce using rule 9 (instruction -> IMPORT STRING ; .)
    DOTSUB          reduce using rule 9 (instruction -> IMPORT STRING ; .)
    *               reduce using rule 9 (instruction -> IMPORT STRING ; .)
    /               reduce using rule 9 (instruction -> IMPORT STRING ; .)
    DOTMUL          reduce using rule 9 (instruction -> IMPORT STRING ; .)
    DOTDIV          reduce using rule 9 (instruction -> IMPORT STRING ; .)
    EQ              reduce using rule 9 (instruction -> IMPORT STRING ; .)
    NOTEQ           reduce using rule 9 (instruction -> IMPORT STRING ; .)
    GT              reduce using rule 9 (instruction -> IMPORT STRING ; .)
    LT              reduce using rule 9 (instruction -> IMPORT STRING ; .)
    GTEQ            reduce using rule 9 (instruction -> IMPORT STRING ; .)
    LTEQ            reduce using rule 9 (instruction -> IMPORT STRING ; .)
    :               reduce using rule 9 (instruction -> IMPORT STRING ; .)
    ,               reduce using rule 9 (instruction -> IMPORT STRING ; .)
    )               reduce using rule 9 (instruction -> IMPORT STRING ; .)
    ]               reduce using rule 9 (instruction -> IMPORT STRING ; .)


state 101

    (23) minit -> [ mrow . ] ,
    (24) minit -> [ mrow . ]
    (26) minit -> [ mrow . ] , minit

    ]               shift and go to state 124


state 102

    (19) expression -> [ minit ] .

    ;               reduce using rule 19 (expression -> [ minit ] .)
    '               reduce using rule 19 (expression -> [ minit ] .)
    +               reduce using rule 19 (expression -> [ minit ] .)
    -               reduce using rule 19 (expression -> [ minit ] .)
    DOTADD          reduce using rule 19 (expression -> [ minit ] .)
    DOTSUB          reduce using rule 19 (expression -> [ minit ] .)
    *               reduce using rule 19 (expression -> [ minit ] .)
    /               reduce using rule 19 (expression -> [ minit ] .)
    DOTMUL          reduce using rule 19 (expression -> [ minit ] .)
    DOTDIV          reduce using rule 19 (expression -> [ minit ] .)
    EQ              reduce using rule 19 (expression -> [ minit ] .)
    NOTEQ           reduce using rule 19 (expression -> [ minit ] .)
    GT              reduce using rule 19 (expression -> [ minit ] .)
    LT              reduce using rule 19 (expression -> [ minit ] .)
    GTEQ            reduce using rule 19 (expression -> [ minit ] .)
    LTEQ            reduce using rule 19 (expression -> [ minit ] .)
    :               reduce using rule 19 (expression -> [ minit ] .)
    ,               reduce using rule 19 (expression -> [ minit ] .)
    )               reduce using rule 19 (expression -> [ minit ] .)
    ]               reduce using rule 19 (expression -> [ minit ] .)
    {               reduce using rule 19 (expression -> [ minit ] .)
    PRINT           reduce using rule 19 (expression -> [ minit ] .)
    IF              reduce using rule 19 (expression -> [ minit ] .)
    WHILE           reduce using rule 19 (expression -> [ minit ] .)
    FOR             reduce using rule 19 (expression -> [ minit ] .)
    IMPORT          reduce using rule 19 (expression -> [ minit ] .)
    RETURN          reduce using rule 19 (expression -> [ minit ] .)
    (               reduce using rule 19 (expression -> [ minit ] .)
    [               reduce using rule 19 (expression -> [ minit ] .)
    ZEROS           reduce using rule 19 (expression -> [ minit ] .)
    ONES            reduce using rule 19 (expression -> [ minit ] .)
    EYE             reduce using rule 19 (expression -> [ minit ] .)
    ID              reduce using rule 19 (expression -> [ minit ] .)
    STRING          reduce using rule 19 (expression -> [ minit ] .)
    BREAK           reduce using rule 19 (expression -> [ minit ] .)
    CONTINUE        reduce using rule 19 (expression -> [ minit ] .)
    INTNUM          reduce using rule 19 (expression -> [ minit ] .)
    FLOATNUM        reduce using rule 19 (expression -> [ minit ] .)


state 103

    (21) minit -> mrow ; .
    (25) minit -> mrow ; . minit
    (21) minit -> . mrow ;
    (22) minit -> . mrow
    (23) minit -> . [ mrow ] ,
    (24) minit -> . [ mrow ]
    (25) minit -> . mrow ; minit
    (26) minit -> . [ mrow ] , minit
    (27) mrow -> . number
    (28) mrow -> . number , mrow
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM

    ]               reduce using rule 21 (minit -> mrow ; .)
    [               shift and go to state 60
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    mrow                           shift and go to state 63
    minit                          shift and go to state 125
    number                         shift and go to state 64

state 104

    (28) mrow -> number , . mrow
    (27) mrow -> . number
    (28) mrow -> . number , mrow
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM

    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    number                         shift and go to state 64
    mrow                           shift and go to state 126

state 105

    (31) expression -> assignable = expression .
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

    ;               reduce using rule 31 (expression -> assignable = expression .)
    NOTEQ           reduce using rule 31 (expression -> assignable = expression .)
    :               reduce using rule 31 (expression -> assignable = expression .)
    ,               reduce using rule 31 (expression -> assignable = expression .)
    )               reduce using rule 31 (expression -> assignable = expression .)
    ]               reduce using rule 31 (expression -> assignable = expression .)
    {               reduce using rule 31 (expression -> assignable = expression .)
    PRINT           reduce using rule 31 (expression -> assignable = expression .)
    IF              reduce using rule 31 (expression -> assignable = expression .)
    WHILE           reduce using rule 31 (expression -> assignable = expression .)
    FOR             reduce using rule 31 (expression -> assignable = expression .)
    IMPORT          reduce using rule 31 (expression -> assignable = expression .)
    RETURN          reduce using rule 31 (expression -> assignable = expression .)
    (               reduce using rule 31 (expression -> assignable = expression .)
    [               reduce using rule 31 (expression -> assignable = expression .)
    ZEROS           reduce using rule 31 (expression -> assignable = expression .)
    ONES            reduce using rule 31 (expression -> assignable = expression .)
    EYE             reduce using rule 31 (expression -> assignable = expression .)
    ID              reduce using rule 31 (expression -> assignable = expression .)
    STRING          reduce using rule 31 (expression -> assignable = expression .)
    BREAK           reduce using rule 31 (expression -> assignable = expression .)
    CONTINUE        reduce using rule 31 (expression -> assignable = expression .)
    INTNUM          reduce using rule 31 (expression -> assignable = expression .)
    FLOATNUM        reduce using rule 31 (expression -> assignable = expression .)
    '               shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    DOTADD          shift and go to state 34
    DOTSUB          shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTMUL          shift and go to state 38
    DOTDIV          shift and go to state 39
    EQ              shift and go to state 40
    GT              shift and go to state 42
    LT              shift and go to state 43
    GTEQ            shift and go to state 44
    LTEQ            shift and go to state 45

  ! '               [ reduce using rule 31 (expression -> assignable = expression .) ]
  ! +               [ reduce using rule 31 (expression -> assignable = expression .) ]
  ! -               [ reduce using rule 31 (expression -> assignable = expression .) ]
  ! DOTADD          [ reduce using rule 31 (expression -> assignable = expression .) ]
  ! DOTSUB          [ reduce using rule 31 (expression -> assignable = expression .) ]
  ! *               [ reduce using rule 31 (expression -> assignable = expression .) ]
  ! /               [ reduce using rule 31 (expression -> assignable = expression .) ]
  ! DOTMUL          [ reduce using rule 31 (expression -> assignable = expression .) ]
  ! DOTDIV          [ reduce using rule 31 (expression -> assignable = expression .) ]
  ! EQ              [ reduce using rule 31 (expression -> assignable = expression .) ]
  ! GT              [ reduce using rule 31 (expression -> assignable = expression .) ]
  ! LT              [ reduce using rule 31 (expression -> assignable = expression .) ]
  ! GTEQ            [ reduce using rule 31 (expression -> assignable = expression .) ]
  ! LTEQ            [ reduce using rule 31 (expression -> assignable = expression .) ]
  ! NOTEQ           [ shift and go to state 41 ]
  ! :               [ shift and go to state 46 ]


state 106

    (34) expression -> assignable ADDASSIGN expression .
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

  ! shift/reduce conflict for ' resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for DOTADD resolved as shift
  ! shift/reduce conflict for DOTSUB resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GTEQ resolved as shift
  ! shift/reduce conflict for LTEQ resolved as shift
  ! shift/reduce conflict for : resolved as shift
    ;               reduce using rule 34 (expression -> assignable ADDASSIGN expression .)
    ,               reduce using rule 34 (expression -> assignable ADDASSIGN expression .)
    )               reduce using rule 34 (expression -> assignable ADDASSIGN expression .)
    ]               reduce using rule 34 (expression -> assignable ADDASSIGN expression .)
    {               reduce using rule 34 (expression -> assignable ADDASSIGN expression .)
    PRINT           reduce using rule 34 (expression -> assignable ADDASSIGN expression .)
    IF              reduce using rule 34 (expression -> assignable ADDASSIGN expression .)
    WHILE           reduce using rule 34 (expression -> assignable ADDASSIGN expression .)
    FOR             reduce using rule 34 (expression -> assignable ADDASSIGN expression .)
    IMPORT          reduce using rule 34 (expression -> assignable ADDASSIGN expression .)
    RETURN          reduce using rule 34 (expression -> assignable ADDASSIGN expression .)
    (               reduce using rule 34 (expression -> assignable ADDASSIGN expression .)
    [               reduce using rule 34 (expression -> assignable ADDASSIGN expression .)
    ZEROS           reduce using rule 34 (expression -> assignable ADDASSIGN expression .)
    ONES            reduce using rule 34 (expression -> assignable ADDASSIGN expression .)
    EYE             reduce using rule 34 (expression -> assignable ADDASSIGN expression .)
    ID              reduce using rule 34 (expression -> assignable ADDASSIGN expression .)
    STRING          reduce using rule 34 (expression -> assignable ADDASSIGN expression .)
    BREAK           reduce using rule 34 (expression -> assignable ADDASSIGN expression .)
    CONTINUE        reduce using rule 34 (expression -> assignable ADDASSIGN expression .)
    INTNUM          reduce using rule 34 (expression -> assignable ADDASSIGN expression .)
    FLOATNUM        reduce using rule 34 (expression -> assignable ADDASSIGN expression .)
    '               shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    DOTADD          shift and go to state 34
    DOTSUB          shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTMUL          shift and go to state 38
    DOTDIV          shift and go to state 39
    EQ              shift and go to state 40
    NOTEQ           shift and go to state 41
    GT              shift and go to state 42
    LT              shift and go to state 43
    GTEQ            shift and go to state 44
    LTEQ            shift and go to state 45
    :               shift and go to state 46

  ! '               [ reduce using rule 34 (expression -> assignable ADDASSIGN expression .) ]
  ! +               [ reduce using rule 34 (expression -> assignable ADDASSIGN expression .) ]
  ! -               [ reduce using rule 34 (expression -> assignable ADDASSIGN expression .) ]
  ! DOTADD          [ reduce using rule 34 (expression -> assignable ADDASSIGN expression .) ]
  ! DOTSUB          [ reduce using rule 34 (expression -> assignable ADDASSIGN expression .) ]
  ! *               [ reduce using rule 34 (expression -> assignable ADDASSIGN expression .) ]
  ! /               [ reduce using rule 34 (expression -> assignable ADDASSIGN expression .) ]
  ! DOTMUL          [ reduce using rule 34 (expression -> assignable ADDASSIGN expression .) ]
  ! DOTDIV          [ reduce using rule 34 (expression -> assignable ADDASSIGN expression .) ]
  ! EQ              [ reduce using rule 34 (expression -> assignable ADDASSIGN expression .) ]
  ! NOTEQ           [ reduce using rule 34 (expression -> assignable ADDASSIGN expression .) ]
  ! GT              [ reduce using rule 34 (expression -> assignable ADDASSIGN expression .) ]
  ! LT              [ reduce using rule 34 (expression -> assignable ADDASSIGN expression .) ]
  ! GTEQ            [ reduce using rule 34 (expression -> assignable ADDASSIGN expression .) ]
  ! LTEQ            [ reduce using rule 34 (expression -> assignable ADDASSIGN expression .) ]
  ! :               [ reduce using rule 34 (expression -> assignable ADDASSIGN expression .) ]


state 107

    (35) expression -> assignable SUBASSIGN expression .
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

  ! shift/reduce conflict for ' resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for DOTADD resolved as shift
  ! shift/reduce conflict for DOTSUB resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GTEQ resolved as shift
  ! shift/reduce conflict for LTEQ resolved as shift
  ! shift/reduce conflict for : resolved as shift
    ;               reduce using rule 35 (expression -> assignable SUBASSIGN expression .)
    ,               reduce using rule 35 (expression -> assignable SUBASSIGN expression .)
    )               reduce using rule 35 (expression -> assignable SUBASSIGN expression .)
    ]               reduce using rule 35 (expression -> assignable SUBASSIGN expression .)
    {               reduce using rule 35 (expression -> assignable SUBASSIGN expression .)
    PRINT           reduce using rule 35 (expression -> assignable SUBASSIGN expression .)
    IF              reduce using rule 35 (expression -> assignable SUBASSIGN expression .)
    WHILE           reduce using rule 35 (expression -> assignable SUBASSIGN expression .)
    FOR             reduce using rule 35 (expression -> assignable SUBASSIGN expression .)
    IMPORT          reduce using rule 35 (expression -> assignable SUBASSIGN expression .)
    RETURN          reduce using rule 35 (expression -> assignable SUBASSIGN expression .)
    (               reduce using rule 35 (expression -> assignable SUBASSIGN expression .)
    [               reduce using rule 35 (expression -> assignable SUBASSIGN expression .)
    ZEROS           reduce using rule 35 (expression -> assignable SUBASSIGN expression .)
    ONES            reduce using rule 35 (expression -> assignable SUBASSIGN expression .)
    EYE             reduce using rule 35 (expression -> assignable SUBASSIGN expression .)
    ID              reduce using rule 35 (expression -> assignable SUBASSIGN expression .)
    STRING          reduce using rule 35 (expression -> assignable SUBASSIGN expression .)
    BREAK           reduce using rule 35 (expression -> assignable SUBASSIGN expression .)
    CONTINUE        reduce using rule 35 (expression -> assignable SUBASSIGN expression .)
    INTNUM          reduce using rule 35 (expression -> assignable SUBASSIGN expression .)
    FLOATNUM        reduce using rule 35 (expression -> assignable SUBASSIGN expression .)
    '               shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    DOTADD          shift and go to state 34
    DOTSUB          shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTMUL          shift and go to state 38
    DOTDIV          shift and go to state 39
    EQ              shift and go to state 40
    NOTEQ           shift and go to state 41
    GT              shift and go to state 42
    LT              shift and go to state 43
    GTEQ            shift and go to state 44
    LTEQ            shift and go to state 45
    :               shift and go to state 46

  ! '               [ reduce using rule 35 (expression -> assignable SUBASSIGN expression .) ]
  ! +               [ reduce using rule 35 (expression -> assignable SUBASSIGN expression .) ]
  ! -               [ reduce using rule 35 (expression -> assignable SUBASSIGN expression .) ]
  ! DOTADD          [ reduce using rule 35 (expression -> assignable SUBASSIGN expression .) ]
  ! DOTSUB          [ reduce using rule 35 (expression -> assignable SUBASSIGN expression .) ]
  ! *               [ reduce using rule 35 (expression -> assignable SUBASSIGN expression .) ]
  ! /               [ reduce using rule 35 (expression -> assignable SUBASSIGN expression .) ]
  ! DOTMUL          [ reduce using rule 35 (expression -> assignable SUBASSIGN expression .) ]
  ! DOTDIV          [ reduce using rule 35 (expression -> assignable SUBASSIGN expression .) ]
  ! EQ              [ reduce using rule 35 (expression -> assignable SUBASSIGN expression .) ]
  ! NOTEQ           [ reduce using rule 35 (expression -> assignable SUBASSIGN expression .) ]
  ! GT              [ reduce using rule 35 (expression -> assignable SUBASSIGN expression .) ]
  ! LT              [ reduce using rule 35 (expression -> assignable SUBASSIGN expression .) ]
  ! GTEQ            [ reduce using rule 35 (expression -> assignable SUBASSIGN expression .) ]
  ! LTEQ            [ reduce using rule 35 (expression -> assignable SUBASSIGN expression .) ]
  ! :               [ reduce using rule 35 (expression -> assignable SUBASSIGN expression .) ]


state 108

    (36) expression -> assignable MULASSIGN expression .
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

  ! shift/reduce conflict for ' resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for DOTADD resolved as shift
  ! shift/reduce conflict for DOTSUB resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GTEQ resolved as shift
  ! shift/reduce conflict for LTEQ resolved as shift
  ! shift/reduce conflict for : resolved as shift
    ;               reduce using rule 36 (expression -> assignable MULASSIGN expression .)
    ,               reduce using rule 36 (expression -> assignable MULASSIGN expression .)
    )               reduce using rule 36 (expression -> assignable MULASSIGN expression .)
    ]               reduce using rule 36 (expression -> assignable MULASSIGN expression .)
    {               reduce using rule 36 (expression -> assignable MULASSIGN expression .)
    PRINT           reduce using rule 36 (expression -> assignable MULASSIGN expression .)
    IF              reduce using rule 36 (expression -> assignable MULASSIGN expression .)
    WHILE           reduce using rule 36 (expression -> assignable MULASSIGN expression .)
    FOR             reduce using rule 36 (expression -> assignable MULASSIGN expression .)
    IMPORT          reduce using rule 36 (expression -> assignable MULASSIGN expression .)
    RETURN          reduce using rule 36 (expression -> assignable MULASSIGN expression .)
    (               reduce using rule 36 (expression -> assignable MULASSIGN expression .)
    [               reduce using rule 36 (expression -> assignable MULASSIGN expression .)
    ZEROS           reduce using rule 36 (expression -> assignable MULASSIGN expression .)
    ONES            reduce using rule 36 (expression -> assignable MULASSIGN expression .)
    EYE             reduce using rule 36 (expression -> assignable MULASSIGN expression .)
    ID              reduce using rule 36 (expression -> assignable MULASSIGN expression .)
    STRING          reduce using rule 36 (expression -> assignable MULASSIGN expression .)
    BREAK           reduce using rule 36 (expression -> assignable MULASSIGN expression .)
    CONTINUE        reduce using rule 36 (expression -> assignable MULASSIGN expression .)
    INTNUM          reduce using rule 36 (expression -> assignable MULASSIGN expression .)
    FLOATNUM        reduce using rule 36 (expression -> assignable MULASSIGN expression .)
    '               shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    DOTADD          shift and go to state 34
    DOTSUB          shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTMUL          shift and go to state 38
    DOTDIV          shift and go to state 39
    EQ              shift and go to state 40
    NOTEQ           shift and go to state 41
    GT              shift and go to state 42
    LT              shift and go to state 43
    GTEQ            shift and go to state 44
    LTEQ            shift and go to state 45
    :               shift and go to state 46

  ! '               [ reduce using rule 36 (expression -> assignable MULASSIGN expression .) ]
  ! +               [ reduce using rule 36 (expression -> assignable MULASSIGN expression .) ]
  ! -               [ reduce using rule 36 (expression -> assignable MULASSIGN expression .) ]
  ! DOTADD          [ reduce using rule 36 (expression -> assignable MULASSIGN expression .) ]
  ! DOTSUB          [ reduce using rule 36 (expression -> assignable MULASSIGN expression .) ]
  ! *               [ reduce using rule 36 (expression -> assignable MULASSIGN expression .) ]
  ! /               [ reduce using rule 36 (expression -> assignable MULASSIGN expression .) ]
  ! DOTMUL          [ reduce using rule 36 (expression -> assignable MULASSIGN expression .) ]
  ! DOTDIV          [ reduce using rule 36 (expression -> assignable MULASSIGN expression .) ]
  ! EQ              [ reduce using rule 36 (expression -> assignable MULASSIGN expression .) ]
  ! NOTEQ           [ reduce using rule 36 (expression -> assignable MULASSIGN expression .) ]
  ! GT              [ reduce using rule 36 (expression -> assignable MULASSIGN expression .) ]
  ! LT              [ reduce using rule 36 (expression -> assignable MULASSIGN expression .) ]
  ! GTEQ            [ reduce using rule 36 (expression -> assignable MULASSIGN expression .) ]
  ! LTEQ            [ reduce using rule 36 (expression -> assignable MULASSIGN expression .) ]
  ! :               [ reduce using rule 36 (expression -> assignable MULASSIGN expression .) ]


state 109

    (37) expression -> assignable DIVASSIGN expression .
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

  ! shift/reduce conflict for ' resolved as shift
  ! shift/reduce conflict for + resolved as shift
  ! shift/reduce conflict for - resolved as shift
  ! shift/reduce conflict for DOTADD resolved as shift
  ! shift/reduce conflict for DOTSUB resolved as shift
  ! shift/reduce conflict for * resolved as shift
  ! shift/reduce conflict for / resolved as shift
  ! shift/reduce conflict for DOTMUL resolved as shift
  ! shift/reduce conflict for DOTDIV resolved as shift
  ! shift/reduce conflict for EQ resolved as shift
  ! shift/reduce conflict for NOTEQ resolved as shift
  ! shift/reduce conflict for GT resolved as shift
  ! shift/reduce conflict for LT resolved as shift
  ! shift/reduce conflict for GTEQ resolved as shift
  ! shift/reduce conflict for LTEQ resolved as shift
  ! shift/reduce conflict for : resolved as shift
    ;               reduce using rule 37 (expression -> assignable DIVASSIGN expression .)
    ,               reduce using rule 37 (expression -> assignable DIVASSIGN expression .)
    )               reduce using rule 37 (expression -> assignable DIVASSIGN expression .)
    ]               reduce using rule 37 (expression -> assignable DIVASSIGN expression .)
    {               reduce using rule 37 (expression -> assignable DIVASSIGN expression .)
    PRINT           reduce using rule 37 (expression -> assignable DIVASSIGN expression .)
    IF              reduce using rule 37 (expression -> assignable DIVASSIGN expression .)
    WHILE           reduce using rule 37 (expression -> assignable DIVASSIGN expression .)
    FOR             reduce using rule 37 (expression -> assignable DIVASSIGN expression .)
    IMPORT          reduce using rule 37 (expression -> assignable DIVASSIGN expression .)
    RETURN          reduce using rule 37 (expression -> assignable DIVASSIGN expression .)
    (               reduce using rule 37 (expression -> assignable DIVASSIGN expression .)
    [               reduce using rule 37 (expression -> assignable DIVASSIGN expression .)
    ZEROS           reduce using rule 37 (expression -> assignable DIVASSIGN expression .)
    ONES            reduce using rule 37 (expression -> assignable DIVASSIGN expression .)
    EYE             reduce using rule 37 (expression -> assignable DIVASSIGN expression .)
    ID              reduce using rule 37 (expression -> assignable DIVASSIGN expression .)
    STRING          reduce using rule 37 (expression -> assignable DIVASSIGN expression .)
    BREAK           reduce using rule 37 (expression -> assignable DIVASSIGN expression .)
    CONTINUE        reduce using rule 37 (expression -> assignable DIVASSIGN expression .)
    INTNUM          reduce using rule 37 (expression -> assignable DIVASSIGN expression .)
    FLOATNUM        reduce using rule 37 (expression -> assignable DIVASSIGN expression .)
    '               shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    DOTADD          shift and go to state 34
    DOTSUB          shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTMUL          shift and go to state 38
    DOTDIV          shift and go to state 39
    EQ              shift and go to state 40
    NOTEQ           shift and go to state 41
    GT              shift and go to state 42
    LT              shift and go to state 43
    GTEQ            shift and go to state 44
    LTEQ            shift and go to state 45
    :               shift and go to state 46

  ! '               [ reduce using rule 37 (expression -> assignable DIVASSIGN expression .) ]
  ! +               [ reduce using rule 37 (expression -> assignable DIVASSIGN expression .) ]
  ! -               [ reduce using rule 37 (expression -> assignable DIVASSIGN expression .) ]
  ! DOTADD          [ reduce using rule 37 (expression -> assignable DIVASSIGN expression .) ]
  ! DOTSUB          [ reduce using rule 37 (expression -> assignable DIVASSIGN expression .) ]
  ! *               [ reduce using rule 37 (expression -> assignable DIVASSIGN expression .) ]
  ! /               [ reduce using rule 37 (expression -> assignable DIVASSIGN expression .) ]
  ! DOTMUL          [ reduce using rule 37 (expression -> assignable DIVASSIGN expression .) ]
  ! DOTDIV          [ reduce using rule 37 (expression -> assignable DIVASSIGN expression .) ]
  ! EQ              [ reduce using rule 37 (expression -> assignable DIVASSIGN expression .) ]
  ! NOTEQ           [ reduce using rule 37 (expression -> assignable DIVASSIGN expression .) ]
  ! GT              [ reduce using rule 37 (expression -> assignable DIVASSIGN expression .) ]
  ! LT              [ reduce using rule 37 (expression -> assignable DIVASSIGN expression .) ]
  ! GTEQ            [ reduce using rule 37 (expression -> assignable DIVASSIGN expression .) ]
  ! LTEQ            [ reduce using rule 37 (expression -> assignable DIVASSIGN expression .) ]
  ! :               [ reduce using rule 37 (expression -> assignable DIVASSIGN expression .) ]


state 110

    (54) expression -> ZEROS ( numbers . )
    (53) numbers -> numbers . , number

    )               shift and go to state 127
    ,               shift and go to state 128


state 111

    (52) numbers -> number .

    )               reduce using rule 52 (numbers -> number .)
    ,               reduce using rule 52 (numbers -> number .)


state 112

    (55) expression -> ONES ( numbers . )
    (53) numbers -> numbers . , number

    )               shift and go to state 129
    ,               shift and go to state 128


state 113

    (56) expression -> EYE ( numbers . )
    (53) numbers -> numbers . , number

    )               shift and go to state 130
    ,               shift and go to state 128


state 114

    (18) expressions -> expressions , expression .
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

    ;               reduce using rule 18 (expressions -> expressions , expression .)
    ,               reduce using rule 18 (expressions -> expressions , expression .)
    )               reduce using rule 18 (expressions -> expressions , expression .)
    '               shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    DOTADD          shift and go to state 34
    DOTSUB          shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTMUL          shift and go to state 38
    DOTDIV          shift and go to state 39
    EQ              shift and go to state 40
    NOTEQ           shift and go to state 41
    GT              shift and go to state 42
    LT              shift and go to state 43
    GTEQ            shift and go to state 44
    LTEQ            shift and go to state 45
    :               shift and go to state 46


state 115

    (3) instruction -> IF ( expression ) . statement
    (4) instruction -> IF ( expression ) . statement ELSE statement
    (2) statement -> . instruction
    (14) statement -> . expression ;
    (15) statement -> . { statements }
    (16) statement -> . PRINT expressions ;
    (3) instruction -> . IF ( expression ) statement
    (4) instruction -> . IF ( expression ) statement ELSE statement
    (5) instruction -> . WHILE ( expression ) statement
    (8) instruction -> . FOR ID = range statement
    (9) instruction -> . IMPORT STRING ;
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    {               shift and go to state 6
    PRINT           shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    IMPORT          shift and go to state 14
    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    expression                     shift and go to state 5
    statement                      shift and go to state 131
    instruction                    shift and go to state 4
    range                          shift and go to state 13
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    matrixcellgetter               shift and go to state 26

state 116

    (7) expression -> ( args ) ARROW . statement
    (2) statement -> . instruction
    (14) statement -> . expression ;
    (15) statement -> . { statements }
    (16) statement -> . PRINT expressions ;
    (3) instruction -> . IF ( expression ) statement
    (4) instruction -> . IF ( expression ) statement ELSE statement
    (5) instruction -> . WHILE ( expression ) statement
    (8) instruction -> . FOR ID = range statement
    (9) instruction -> . IMPORT STRING ;
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    {               shift and go to state 6
    PRINT           shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    IMPORT          shift and go to state 14
    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    statement                      shift and go to state 132
    instruction                    shift and go to state 4
    expression                     shift and go to state 5
    range                          shift and go to state 13
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    matrixcellgetter               shift and go to state 26

state 117

    (11) args -> args , ID .

    )               reduce using rule 11 (args -> args , ID .)
    ,               reduce using rule 11 (args -> args , ID .)


state 118

    (5) instruction -> WHILE ( expression ) . statement
    (2) statement -> . instruction
    (14) statement -> . expression ;
    (15) statement -> . { statements }
    (16) statement -> . PRINT expressions ;
    (3) instruction -> . IF ( expression ) statement
    (4) instruction -> . IF ( expression ) statement ELSE statement
    (5) instruction -> . WHILE ( expression ) statement
    (8) instruction -> . FOR ID = range statement
    (9) instruction -> . IMPORT STRING ;
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    {               shift and go to state 6
    PRINT           shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    IMPORT          shift and go to state 14
    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    expression                     shift and go to state 5
    statement                      shift and go to state 133
    instruction                    shift and go to state 4
    range                          shift and go to state 13
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    matrixcellgetter               shift and go to state 26

state 119

    (8) instruction -> FOR ID = range . statement
    (68) expression -> range .
    (2) statement -> . instruction
    (14) statement -> . expression ;
    (15) statement -> . { statements }
    (16) statement -> . PRINT expressions ;
    (3) instruction -> . IF ( expression ) statement
    (4) instruction -> . IF ( expression ) statement ELSE statement
    (5) instruction -> . WHILE ( expression ) statement
    (8) instruction -> . FOR ID = range statement
    (9) instruction -> . IMPORT STRING ;
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

  ! shift/reduce conflict for - resolved as shift
    :               reduce using rule 68 (expression -> range .)
    '               reduce using rule 68 (expression -> range .)
    +               reduce using rule 68 (expression -> range .)
    DOTADD          reduce using rule 68 (expression -> range .)
    DOTSUB          reduce using rule 68 (expression -> range .)
    *               reduce using rule 68 (expression -> range .)
    /               reduce using rule 68 (expression -> range .)
    DOTMUL          reduce using rule 68 (expression -> range .)
    DOTDIV          reduce using rule 68 (expression -> range .)
    EQ              reduce using rule 68 (expression -> range .)
    NOTEQ           reduce using rule 68 (expression -> range .)
    GT              reduce using rule 68 (expression -> range .)
    LT              reduce using rule 68 (expression -> range .)
    GTEQ            reduce using rule 68 (expression -> range .)
    LTEQ            reduce using rule 68 (expression -> range .)
    {               shift and go to state 6
    PRINT           shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    IMPORT          shift and go to state 14
    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

  ! -               [ reduce using rule 68 (expression -> range .) ]

    range                          shift and go to state 13
    statement                      shift and go to state 134
    instruction                    shift and go to state 4
    expression                     shift and go to state 5
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    matrixcellgetter               shift and go to state 26

state 120

    (69) range -> expression . : expression
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression

    :               shift and go to state 46
    '               shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    DOTADD          shift and go to state 34
    DOTSUB          shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTMUL          shift and go to state 38
    DOTDIV          shift and go to state 39
    EQ              shift and go to state 40
    NOTEQ           shift and go to state 41
    GT              shift and go to state 42
    LT              shift and go to state 43
    GTEQ            shift and go to state 44
    LTEQ            shift and go to state 45


state 121

    (57) expression -> ID ( expressions ) .

    ;               reduce using rule 57 (expression -> ID ( expressions ) .)
    '               reduce using rule 57 (expression -> ID ( expressions ) .)
    +               reduce using rule 57 (expression -> ID ( expressions ) .)
    -               reduce using rule 57 (expression -> ID ( expressions ) .)
    DOTADD          reduce using rule 57 (expression -> ID ( expressions ) .)
    DOTSUB          reduce using rule 57 (expression -> ID ( expressions ) .)
    *               reduce using rule 57 (expression -> ID ( expressions ) .)
    /               reduce using rule 57 (expression -> ID ( expressions ) .)
    DOTMUL          reduce using rule 57 (expression -> ID ( expressions ) .)
    DOTDIV          reduce using rule 57 (expression -> ID ( expressions ) .)
    EQ              reduce using rule 57 (expression -> ID ( expressions ) .)
    NOTEQ           reduce using rule 57 (expression -> ID ( expressions ) .)
    GT              reduce using rule 57 (expression -> ID ( expressions ) .)
    LT              reduce using rule 57 (expression -> ID ( expressions ) .)
    GTEQ            reduce using rule 57 (expression -> ID ( expressions ) .)
    LTEQ            reduce using rule 57 (expression -> ID ( expressions ) .)
    :               reduce using rule 57 (expression -> ID ( expressions ) .)
    ,               reduce using rule 57 (expression -> ID ( expressions ) .)
    )               reduce using rule 57 (expression -> ID ( expressions ) .)
    ]               reduce using rule 57 (expression -> ID ( expressions ) .)
    {               reduce using rule 57 (expression -> ID ( expressions ) .)
    PRINT           reduce using rule 57 (expression -> ID ( expressions ) .)
    IF              reduce using rule 57 (expression -> ID ( expressions ) .)
    WHILE           reduce using rule 57 (expression -> ID ( expressions ) .)
    FOR             reduce using rule 57 (expression -> ID ( expressions ) .)
    IMPORT          reduce using rule 57 (expression -> ID ( expressions ) .)
    RETURN          reduce using rule 57 (expression -> ID ( expressions ) .)
    (               reduce using rule 57 (expression -> ID ( expressions ) .)
    [               reduce using rule 57 (expression -> ID ( expressions ) .)
    ZEROS           reduce using rule 57 (expression -> ID ( expressions ) .)
    ONES            reduce using rule 57 (expression -> ID ( expressions ) .)
    EYE             reduce using rule 57 (expression -> ID ( expressions ) .)
    ID              reduce using rule 57 (expression -> ID ( expressions ) .)
    STRING          reduce using rule 57 (expression -> ID ( expressions ) .)
    BREAK           reduce using rule 57 (expression -> ID ( expressions ) .)
    CONTINUE        reduce using rule 57 (expression -> ID ( expressions ) .)
    INTNUM          reduce using rule 57 (expression -> ID ( expressions ) .)
    FLOATNUM        reduce using rule 57 (expression -> ID ( expressions ) .)


state 122

    (63) matrixcellgetter -> ID [ expression , . expression ]
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    expression                     shift and go to state 135
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    range                          shift and go to state 13
    matrixcellgetter               shift and go to state 26

state 123

    (64) matrixcellgetter -> ID [ expression ] .

    =               reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    ADDASSIGN       reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    SUBASSIGN       reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    MULASSIGN       reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    DIVASSIGN       reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    ;               reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    '               reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    +               reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    -               reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    DOTADD          reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    DOTSUB          reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    *               reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    /               reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    DOTMUL          reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    DOTDIV          reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    EQ              reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    NOTEQ           reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    GT              reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    LT              reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    GTEQ            reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    LTEQ            reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    :               reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    ,               reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    )               reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    ]               reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    {               reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    PRINT           reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    IF              reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    WHILE           reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    FOR             reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    IMPORT          reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    RETURN          reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    (               reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    [               reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    ZEROS           reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    ONES            reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    EYE             reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    ID              reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    STRING          reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    BREAK           reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    CONTINUE        reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    INTNUM          reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)
    FLOATNUM        reduce using rule 64 (matrixcellgetter -> ID [ expression ] .)


state 124

    (23) minit -> [ mrow ] . ,
    (24) minit -> [ mrow ] .
    (26) minit -> [ mrow ] . , minit

    ,               shift and go to state 136
    ]               reduce using rule 24 (minit -> [ mrow ] .)


state 125

    (25) minit -> mrow ; minit .

    ]               reduce using rule 25 (minit -> mrow ; minit .)


state 126

    (28) mrow -> number , mrow .

    ;               reduce using rule 28 (mrow -> number , mrow .)
    ]               reduce using rule 28 (mrow -> number , mrow .)


state 127

    (54) expression -> ZEROS ( numbers ) .

    ;               reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    '               reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    +               reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    -               reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    DOTADD          reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    DOTSUB          reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    *               reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    /               reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    DOTMUL          reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    DOTDIV          reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    EQ              reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    NOTEQ           reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    GT              reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    LT              reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    GTEQ            reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    LTEQ            reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    :               reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    ,               reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    )               reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    ]               reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    {               reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    PRINT           reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    IF              reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    WHILE           reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    FOR             reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    IMPORT          reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    RETURN          reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    (               reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    [               reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    ZEROS           reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    ONES            reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    EYE             reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    ID              reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    STRING          reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    BREAK           reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    CONTINUE        reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    INTNUM          reduce using rule 54 (expression -> ZEROS ( numbers ) .)
    FLOATNUM        reduce using rule 54 (expression -> ZEROS ( numbers ) .)


state 128

    (53) numbers -> numbers , . number
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM

    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    number                         shift and go to state 137

state 129

    (55) expression -> ONES ( numbers ) .

    ;               reduce using rule 55 (expression -> ONES ( numbers ) .)
    '               reduce using rule 55 (expression -> ONES ( numbers ) .)
    +               reduce using rule 55 (expression -> ONES ( numbers ) .)
    -               reduce using rule 55 (expression -> ONES ( numbers ) .)
    DOTADD          reduce using rule 55 (expression -> ONES ( numbers ) .)
    DOTSUB          reduce using rule 55 (expression -> ONES ( numbers ) .)
    *               reduce using rule 55 (expression -> ONES ( numbers ) .)
    /               reduce using rule 55 (expression -> ONES ( numbers ) .)
    DOTMUL          reduce using rule 55 (expression -> ONES ( numbers ) .)
    DOTDIV          reduce using rule 55 (expression -> ONES ( numbers ) .)
    EQ              reduce using rule 55 (expression -> ONES ( numbers ) .)
    NOTEQ           reduce using rule 55 (expression -> ONES ( numbers ) .)
    GT              reduce using rule 55 (expression -> ONES ( numbers ) .)
    LT              reduce using rule 55 (expression -> ONES ( numbers ) .)
    GTEQ            reduce using rule 55 (expression -> ONES ( numbers ) .)
    LTEQ            reduce using rule 55 (expression -> ONES ( numbers ) .)
    :               reduce using rule 55 (expression -> ONES ( numbers ) .)
    ,               reduce using rule 55 (expression -> ONES ( numbers ) .)
    )               reduce using rule 55 (expression -> ONES ( numbers ) .)
    ]               reduce using rule 55 (expression -> ONES ( numbers ) .)
    {               reduce using rule 55 (expression -> ONES ( numbers ) .)
    PRINT           reduce using rule 55 (expression -> ONES ( numbers ) .)
    IF              reduce using rule 55 (expression -> ONES ( numbers ) .)
    WHILE           reduce using rule 55 (expression -> ONES ( numbers ) .)
    FOR             reduce using rule 55 (expression -> ONES ( numbers ) .)
    IMPORT          reduce using rule 55 (expression -> ONES ( numbers ) .)
    RETURN          reduce using rule 55 (expression -> ONES ( numbers ) .)
    (               reduce using rule 55 (expression -> ONES ( numbers ) .)
    [               reduce using rule 55 (expression -> ONES ( numbers ) .)
    ZEROS           reduce using rule 55 (expression -> ONES ( numbers ) .)
    ONES            reduce using rule 55 (expression -> ONES ( numbers ) .)
    EYE             reduce using rule 55 (expression -> ONES ( numbers ) .)
    ID              reduce using rule 55 (expression -> ONES ( numbers ) .)
    STRING          reduce using rule 55 (expression -> ONES ( numbers ) .)
    BREAK           reduce using rule 55 (expression -> ONES ( numbers ) .)
    CONTINUE        reduce using rule 55 (expression -> ONES ( numbers ) .)
    INTNUM          reduce using rule 55 (expression -> ONES ( numbers ) .)
    FLOATNUM        reduce using rule 55 (expression -> ONES ( numbers ) .)


state 130

    (56) expression -> EYE ( numbers ) .

    ;               reduce using rule 56 (expression -> EYE ( numbers ) .)
    '               reduce using rule 56 (expression -> EYE ( numbers ) .)
    +               reduce using rule 56 (expression -> EYE ( numbers ) .)
    -               reduce using rule 56 (expression -> EYE ( numbers ) .)
    DOTADD          reduce using rule 56 (expression -> EYE ( numbers ) .)
    DOTSUB          reduce using rule 56 (expression -> EYE ( numbers ) .)
    *               reduce using rule 56 (expression -> EYE ( numbers ) .)
    /               reduce using rule 56 (expression -> EYE ( numbers ) .)
    DOTMUL          reduce using rule 56 (expression -> EYE ( numbers ) .)
    DOTDIV          reduce using rule 56 (expression -> EYE ( numbers ) .)
    EQ              reduce using rule 56 (expression -> EYE ( numbers ) .)
    NOTEQ           reduce using rule 56 (expression -> EYE ( numbers ) .)
    GT              reduce using rule 56 (expression -> EYE ( numbers ) .)
    LT              reduce using rule 56 (expression -> EYE ( numbers ) .)
    GTEQ            reduce using rule 56 (expression -> EYE ( numbers ) .)
    LTEQ            reduce using rule 56 (expression -> EYE ( numbers ) .)
    :               reduce using rule 56 (expression -> EYE ( numbers ) .)
    ,               reduce using rule 56 (expression -> EYE ( numbers ) .)
    )               reduce using rule 56 (expression -> EYE ( numbers ) .)
    ]               reduce using rule 56 (expression -> EYE ( numbers ) .)
    {               reduce using rule 56 (expression -> EYE ( numbers ) .)
    PRINT           reduce using rule 56 (expression -> EYE ( numbers ) .)
    IF              reduce using rule 56 (expression -> EYE ( numbers ) .)
    WHILE           reduce using rule 56 (expression -> EYE ( numbers ) .)
    FOR             reduce using rule 56 (expression -> EYE ( numbers ) .)
    IMPORT          reduce using rule 56 (expression -> EYE ( numbers ) .)
    RETURN          reduce using rule 56 (expression -> EYE ( numbers ) .)
    (               reduce using rule 56 (expression -> EYE ( numbers ) .)
    [               reduce using rule 56 (expression -> EYE ( numbers ) .)
    ZEROS           reduce using rule 56 (expression -> EYE ( numbers ) .)
    ONES            reduce using rule 56 (expression -> EYE ( numbers ) .)
    EYE             reduce using rule 56 (expression -> EYE ( numbers ) .)
    ID              reduce using rule 56 (expression -> EYE ( numbers ) .)
    STRING          reduce using rule 56 (expression -> EYE ( numbers ) .)
    BREAK           reduce using rule 56 (expression -> EYE ( numbers ) .)
    CONTINUE        reduce using rule 56 (expression -> EYE ( numbers ) .)
    INTNUM          reduce using rule 56 (expression -> EYE ( numbers ) .)
    FLOATNUM        reduce using rule 56 (expression -> EYE ( numbers ) .)


state 131

    (3) instruction -> IF ( expression ) statement .
    (4) instruction -> IF ( expression ) statement . ELSE statement

  ! shift/reduce conflict for ELSE resolved as shift
    {               reduce using rule 3 (instruction -> IF ( expression ) statement .)
    PRINT           reduce using rule 3 (instruction -> IF ( expression ) statement .)
    IF              reduce using rule 3 (instruction -> IF ( expression ) statement .)
    WHILE           reduce using rule 3 (instruction -> IF ( expression ) statement .)
    FOR             reduce using rule 3 (instruction -> IF ( expression ) statement .)
    IMPORT          reduce using rule 3 (instruction -> IF ( expression ) statement .)
    RETURN          reduce using rule 3 (instruction -> IF ( expression ) statement .)
    (               reduce using rule 3 (instruction -> IF ( expression ) statement .)
    [               reduce using rule 3 (instruction -> IF ( expression ) statement .)
    -               reduce using rule 3 (instruction -> IF ( expression ) statement .)
    ZEROS           reduce using rule 3 (instruction -> IF ( expression ) statement .)
    ONES            reduce using rule 3 (instruction -> IF ( expression ) statement .)
    EYE             reduce using rule 3 (instruction -> IF ( expression ) statement .)
    ID              reduce using rule 3 (instruction -> IF ( expression ) statement .)
    STRING          reduce using rule 3 (instruction -> IF ( expression ) statement .)
    BREAK           reduce using rule 3 (instruction -> IF ( expression ) statement .)
    CONTINUE        reduce using rule 3 (instruction -> IF ( expression ) statement .)
    INTNUM          reduce using rule 3 (instruction -> IF ( expression ) statement .)
    FLOATNUM        reduce using rule 3 (instruction -> IF ( expression ) statement .)
    $end            reduce using rule 3 (instruction -> IF ( expression ) statement .)
    }               reduce using rule 3 (instruction -> IF ( expression ) statement .)
    ;               reduce using rule 3 (instruction -> IF ( expression ) statement .)
    '               reduce using rule 3 (instruction -> IF ( expression ) statement .)
    +               reduce using rule 3 (instruction -> IF ( expression ) statement .)
    DOTADD          reduce using rule 3 (instruction -> IF ( expression ) statement .)
    DOTSUB          reduce using rule 3 (instruction -> IF ( expression ) statement .)
    *               reduce using rule 3 (instruction -> IF ( expression ) statement .)
    /               reduce using rule 3 (instruction -> IF ( expression ) statement .)
    DOTMUL          reduce using rule 3 (instruction -> IF ( expression ) statement .)
    DOTDIV          reduce using rule 3 (instruction -> IF ( expression ) statement .)
    EQ              reduce using rule 3 (instruction -> IF ( expression ) statement .)
    NOTEQ           reduce using rule 3 (instruction -> IF ( expression ) statement .)
    GT              reduce using rule 3 (instruction -> IF ( expression ) statement .)
    LT              reduce using rule 3 (instruction -> IF ( expression ) statement .)
    GTEQ            reduce using rule 3 (instruction -> IF ( expression ) statement .)
    LTEQ            reduce using rule 3 (instruction -> IF ( expression ) statement .)
    :               reduce using rule 3 (instruction -> IF ( expression ) statement .)
    ,               reduce using rule 3 (instruction -> IF ( expression ) statement .)
    )               reduce using rule 3 (instruction -> IF ( expression ) statement .)
    ]               reduce using rule 3 (instruction -> IF ( expression ) statement .)
    ELSE            shift and go to state 138

  ! ELSE            [ reduce using rule 3 (instruction -> IF ( expression ) statement .) ]


state 132

    (7) expression -> ( args ) ARROW statement .

    ;               reduce using rule 7 (expression -> ( args ) ARROW statement .)
    '               reduce using rule 7 (expression -> ( args ) ARROW statement .)
    +               reduce using rule 7 (expression -> ( args ) ARROW statement .)
    -               reduce using rule 7 (expression -> ( args ) ARROW statement .)
    DOTADD          reduce using rule 7 (expression -> ( args ) ARROW statement .)
    DOTSUB          reduce using rule 7 (expression -> ( args ) ARROW statement .)
    *               reduce using rule 7 (expression -> ( args ) ARROW statement .)
    /               reduce using rule 7 (expression -> ( args ) ARROW statement .)
    DOTMUL          reduce using rule 7 (expression -> ( args ) ARROW statement .)
    DOTDIV          reduce using rule 7 (expression -> ( args ) ARROW statement .)
    EQ              reduce using rule 7 (expression -> ( args ) ARROW statement .)
    NOTEQ           reduce using rule 7 (expression -> ( args ) ARROW statement .)
    GT              reduce using rule 7 (expression -> ( args ) ARROW statement .)
    LT              reduce using rule 7 (expression -> ( args ) ARROW statement .)
    GTEQ            reduce using rule 7 (expression -> ( args ) ARROW statement .)
    LTEQ            reduce using rule 7 (expression -> ( args ) ARROW statement .)
    :               reduce using rule 7 (expression -> ( args ) ARROW statement .)
    ,               reduce using rule 7 (expression -> ( args ) ARROW statement .)
    )               reduce using rule 7 (expression -> ( args ) ARROW statement .)
    ]               reduce using rule 7 (expression -> ( args ) ARROW statement .)
    {               reduce using rule 7 (expression -> ( args ) ARROW statement .)
    PRINT           reduce using rule 7 (expression -> ( args ) ARROW statement .)
    IF              reduce using rule 7 (expression -> ( args ) ARROW statement .)
    WHILE           reduce using rule 7 (expression -> ( args ) ARROW statement .)
    FOR             reduce using rule 7 (expression -> ( args ) ARROW statement .)
    IMPORT          reduce using rule 7 (expression -> ( args ) ARROW statement .)
    RETURN          reduce using rule 7 (expression -> ( args ) ARROW statement .)
    (               reduce using rule 7 (expression -> ( args ) ARROW statement .)
    [               reduce using rule 7 (expression -> ( args ) ARROW statement .)
    ZEROS           reduce using rule 7 (expression -> ( args ) ARROW statement .)
    ONES            reduce using rule 7 (expression -> ( args ) ARROW statement .)
    EYE             reduce using rule 7 (expression -> ( args ) ARROW statement .)
    ID              reduce using rule 7 (expression -> ( args ) ARROW statement .)
    STRING          reduce using rule 7 (expression -> ( args ) ARROW statement .)
    BREAK           reduce using rule 7 (expression -> ( args ) ARROW statement .)
    CONTINUE        reduce using rule 7 (expression -> ( args ) ARROW statement .)
    INTNUM          reduce using rule 7 (expression -> ( args ) ARROW statement .)
    FLOATNUM        reduce using rule 7 (expression -> ( args ) ARROW statement .)


state 133

    (5) instruction -> WHILE ( expression ) statement .

    {               reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    PRINT           reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    IF              reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    WHILE           reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    FOR             reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    IMPORT          reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    RETURN          reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    (               reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    [               reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    -               reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    ZEROS           reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    ONES            reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    EYE             reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    ID              reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    STRING          reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    BREAK           reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    CONTINUE        reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    INTNUM          reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    FLOATNUM        reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    $end            reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    }               reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    ELSE            reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    ;               reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    '               reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    +               reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    DOTADD          reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    DOTSUB          reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    *               reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    /               reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    DOTMUL          reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    DOTDIV          reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    EQ              reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    NOTEQ           reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    GT              reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    LT              reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    GTEQ            reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    LTEQ            reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    :               reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    ,               reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    )               reduce using rule 5 (instruction -> WHILE ( expression ) statement .)
    ]               reduce using rule 5 (instruction -> WHILE ( expression ) statement .)


state 134

    (8) instruction -> FOR ID = range statement .

    {               reduce using rule 8 (instruction -> FOR ID = range statement .)
    PRINT           reduce using rule 8 (instruction -> FOR ID = range statement .)
    IF              reduce using rule 8 (instruction -> FOR ID = range statement .)
    WHILE           reduce using rule 8 (instruction -> FOR ID = range statement .)
    FOR             reduce using rule 8 (instruction -> FOR ID = range statement .)
    IMPORT          reduce using rule 8 (instruction -> FOR ID = range statement .)
    RETURN          reduce using rule 8 (instruction -> FOR ID = range statement .)
    (               reduce using rule 8 (instruction -> FOR ID = range statement .)
    [               reduce using rule 8 (instruction -> FOR ID = range statement .)
    -               reduce using rule 8 (instruction -> FOR ID = range statement .)
    ZEROS           reduce using rule 8 (instruction -> FOR ID = range statement .)
    ONES            reduce using rule 8 (instruction -> FOR ID = range statement .)
    EYE             reduce using rule 8 (instruction -> FOR ID = range statement .)
    ID              reduce using rule 8 (instruction -> FOR ID = range statement .)
    STRING          reduce using rule 8 (instruction -> FOR ID = range statement .)
    BREAK           reduce using rule 8 (instruction -> FOR ID = range statement .)
    CONTINUE        reduce using rule 8 (instruction -> FOR ID = range statement .)
    INTNUM          reduce using rule 8 (instruction -> FOR ID = range statement .)
    FLOATNUM        reduce using rule 8 (instruction -> FOR ID = range statement .)
    $end            reduce using rule 8 (instruction -> FOR ID = range statement .)
    }               reduce using rule 8 (instruction -> FOR ID = range statement .)
    ELSE            reduce using rule 8 (instruction -> FOR ID = range statement .)
    ;               reduce using rule 8 (instruction -> FOR ID = range statement .)
    '               reduce using rule 8 (instruction -> FOR ID = range statement .)
    +               reduce using rule 8 (instruction -> FOR ID = range statement .)
    DOTADD          reduce using rule 8 (instruction -> FOR ID = range statement .)
    DOTSUB          reduce using rule 8 (instruction -> FOR ID = range statement .)
    *               reduce using rule 8 (instruction -> FOR ID = range statement .)
    /               reduce using rule 8 (instruction -> FOR ID = range statement .)
    DOTMUL          reduce using rule 8 (instruction -> FOR ID = range statement .)
    DOTDIV          reduce using rule 8 (instruction -> FOR ID = range statement .)
    EQ              reduce using rule 8 (instruction -> FOR ID = range statement .)
    NOTEQ           reduce using rule 8 (instruction -> FOR ID = range statement .)
    GT              reduce using rule 8 (instruction -> FOR ID = range statement .)
    LT              reduce using rule 8 (instruction -> FOR ID = range statement .)
    GTEQ            reduce using rule 8 (instruction -> FOR ID = range statement .)
    LTEQ            reduce using rule 8 (instruction -> FOR ID = range statement .)
    :               reduce using rule 8 (instruction -> FOR ID = range statement .)
    ,               reduce using rule 8 (instruction -> FOR ID = range statement .)
    )               reduce using rule 8 (instruction -> FOR ID = range statement .)
    ]               reduce using rule 8 (instruction -> FOR ID = range statement .)


state 135

    (63) matrixcellgetter -> ID [ expression , expression . ]
    (33) expression -> expression . '
    (38) expression -> expression . + expression
    (39) expression -> expression . - expression
    (40) expression -> expression . DOTADD expression
    (41) expression -> expression . DOTSUB expression
    (42) expression -> expression . * expression
    (43) expression -> expression . / expression
    (44) expression -> expression . DOTMUL expression
    (45) expression -> expression . DOTDIV expression
    (46) expression -> expression . EQ expression
    (47) expression -> expression . NOTEQ expression
    (48) expression -> expression . GT expression
    (49) expression -> expression . LT expression
    (50) expression -> expression . GTEQ expression
    (51) expression -> expression . LTEQ expression
    (69) range -> expression . : expression

    ]               shift and go to state 139
    '               shift and go to state 31
    +               shift and go to state 32
    -               shift and go to state 33
    DOTADD          shift and go to state 34
    DOTSUB          shift and go to state 35
    *               shift and go to state 36
    /               shift and go to state 37
    DOTMUL          shift and go to state 38
    DOTDIV          shift and go to state 39
    EQ              shift and go to state 40
    NOTEQ           shift and go to state 41
    GT              shift and go to state 42
    LT              shift and go to state 43
    GTEQ            shift and go to state 44
    LTEQ            shift and go to state 45
    :               shift and go to state 46


state 136

    (23) minit -> [ mrow ] , .
    (26) minit -> [ mrow ] , . minit
    (21) minit -> . mrow ;
    (22) minit -> . mrow
    (23) minit -> . [ mrow ] ,
    (24) minit -> . [ mrow ]
    (25) minit -> . mrow ; minit
    (26) minit -> . [ mrow ] , minit
    (27) mrow -> . number
    (28) mrow -> . number , mrow
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM

    ]               reduce using rule 23 (minit -> [ mrow ] , .)
    [               shift and go to state 60
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    mrow                           shift and go to state 63
    minit                          shift and go to state 140
    number                         shift and go to state 64

state 137

    (53) numbers -> numbers , number .

    )               reduce using rule 53 (numbers -> numbers , number .)
    ,               reduce using rule 53 (numbers -> numbers , number .)


state 138

    (4) instruction -> IF ( expression ) statement ELSE . statement
    (2) statement -> . instruction
    (14) statement -> . expression ;
    (15) statement -> . { statements }
    (16) statement -> . PRINT expressions ;
    (3) instruction -> . IF ( expression ) statement
    (4) instruction -> . IF ( expression ) statement ELSE statement
    (5) instruction -> . WHILE ( expression ) statement
    (8) instruction -> . FOR ID = range statement
    (9) instruction -> . IMPORT STRING ;
    (6) expression -> . RETURN expression
    (7) expression -> . ( args ) ARROW statement
    (19) expression -> . [ minit ]
    (20) expression -> . [ ]
    (31) expression -> . assignable = expression
    (32) expression -> . - expression
    (33) expression -> . expression '
    (34) expression -> . assignable ADDASSIGN expression
    (35) expression -> . assignable SUBASSIGN expression
    (36) expression -> . assignable MULASSIGN expression
    (37) expression -> . assignable DIVASSIGN expression
    (38) expression -> . expression + expression
    (39) expression -> . expression - expression
    (40) expression -> . expression DOTADD expression
    (41) expression -> . expression DOTSUB expression
    (42) expression -> . expression * expression
    (43) expression -> . expression / expression
    (44) expression -> . expression DOTMUL expression
    (45) expression -> . expression DOTDIV expression
    (46) expression -> . expression EQ expression
    (47) expression -> . expression NOTEQ expression
    (48) expression -> . expression GT expression
    (49) expression -> . expression LT expression
    (50) expression -> . expression GTEQ expression
    (51) expression -> . expression LTEQ expression
    (54) expression -> . ZEROS ( numbers )
    (55) expression -> . ONES ( numbers )
    (56) expression -> . EYE ( numbers )
    (57) expression -> . ID ( expressions )
    (58) expression -> . number
    (59) expression -> . STRING
    (60) expression -> . assignable
    (65) expression -> . ( expression )
    (66) expression -> . BREAK
    (67) expression -> . CONTINUE
    (68) expression -> . range
    (61) assignable -> . ID
    (62) assignable -> . matrixcellgetter
    (29) number -> . INTNUM
    (30) number -> . FLOATNUM
    (69) range -> . expression : expression
    (63) matrixcellgetter -> . ID [ expression , expression ]
    (64) matrixcellgetter -> . ID [ expression ]

    {               shift and go to state 6
    PRINT           shift and go to state 7
    IF              shift and go to state 8
    WHILE           shift and go to state 10
    FOR             shift and go to state 11
    IMPORT          shift and go to state 14
    RETURN          shift and go to state 16
    (               shift and go to state 9
    [               shift and go to state 17
    -               shift and go to state 19
    ZEROS           shift and go to state 20
    ONES            shift and go to state 21
    EYE             shift and go to state 22
    ID              shift and go to state 12
    STRING          shift and go to state 15
    BREAK           shift and go to state 24
    CONTINUE        shift and go to state 25
    INTNUM          shift and go to state 27
    FLOATNUM        shift and go to state 28

    expression                     shift and go to state 5
    statement                      shift and go to state 141
    instruction                    shift and go to state 4
    range                          shift and go to state 13
    assignable                     shift and go to state 18
    number                         shift and go to state 23
    matrixcellgetter               shift and go to state 26

state 139

    (63) matrixcellgetter -> ID [ expression , expression ] .

    =               reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    ADDASSIGN       reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    SUBASSIGN       reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    MULASSIGN       reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    DIVASSIGN       reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    ;               reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    '               reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    +               reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    -               reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    DOTADD          reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    DOTSUB          reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    *               reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    /               reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    DOTMUL          reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    DOTDIV          reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    EQ              reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    NOTEQ           reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    GT              reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    LT              reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    GTEQ            reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    LTEQ            reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    :               reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    ,               reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    )               reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    ]               reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    {               reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    PRINT           reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    IF              reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    WHILE           reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    FOR             reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    IMPORT          reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    RETURN          reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    (               reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    [               reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    ZEROS           reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    ONES            reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    EYE             reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    ID              reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    STRING          reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    BREAK           reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    CONTINUE        reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    INTNUM          reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)
    FLOATNUM        reduce using rule 63 (matrixcellgetter -> ID [ expression , expression ] .)


state 140

    (26) minit -> [ mrow ] , minit .

    ]               reduce using rule 26 (minit -> [ mrow ] , minit .)


state 141

    (4) instruction -> IF ( expression ) statement ELSE statement .

    {               reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    PRINT           reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    IF              reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    WHILE           reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    FOR             reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    IMPORT          reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    RETURN          reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    (               reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    [               reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    -               reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    ZEROS           reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    ONES            reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    EYE             reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    ID              reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    STRING          reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    BREAK           reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    CONTINUE        reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    INTNUM          reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    FLOATNUM        reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    $end            reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    }               reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    ELSE            reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    ;               reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    '               reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    +               reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    DOTADD          reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    DOTSUB          reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    *               reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    /               reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    DOTMUL          reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    DOTDIV          reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    EQ              reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    NOTEQ           reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    GT              reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    LT              reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    GTEQ            reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    LTEQ            reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    :               reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    ,               reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    )               reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)
    ]               reduce using rule 4 (instruction -> IF ( expression ) statement ELSE statement .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ( in state 12 resolved as shift
WARNING: shift/reduce conflict for [ in state 12 resolved as shift
WARNING: shift/reduce conflict for ' in state 59 resolved as shift
WARNING: shift/reduce conflict for + in state 59 resolved as shift
WARNING: shift/reduce conflict for - in state 59 resolved as shift
WARNING: shift/reduce conflict for DOTADD in state 59 resolved as shift
WARNING: shift/reduce conflict for DOTSUB in state 59 resolved as shift
WARNING: shift/reduce conflict for * in state 59 resolved as shift
WARNING: shift/reduce conflict for / in state 59 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 59 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 59 resolved as shift
WARNING: shift/reduce conflict for EQ in state 59 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 59 resolved as shift
WARNING: shift/reduce conflict for GT in state 59 resolved as shift
WARNING: shift/reduce conflict for LT in state 59 resolved as shift
WARNING: shift/reduce conflict for GTEQ in state 59 resolved as shift
WARNING: shift/reduce conflict for LTEQ in state 59 resolved as shift
WARNING: shift/reduce conflict for : in state 59 resolved as shift
WARNING: shift/reduce conflict for ' in state 83 resolved as shift
WARNING: shift/reduce conflict for + in state 83 resolved as shift
WARNING: shift/reduce conflict for - in state 83 resolved as shift
WARNING: shift/reduce conflict for DOTADD in state 83 resolved as shift
WARNING: shift/reduce conflict for DOTSUB in state 83 resolved as shift
WARNING: shift/reduce conflict for * in state 83 resolved as shift
WARNING: shift/reduce conflict for / in state 83 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 83 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 83 resolved as shift
WARNING: shift/reduce conflict for EQ in state 83 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 83 resolved as shift
WARNING: shift/reduce conflict for GT in state 83 resolved as shift
WARNING: shift/reduce conflict for LT in state 83 resolved as shift
WARNING: shift/reduce conflict for GTEQ in state 83 resolved as shift
WARNING: shift/reduce conflict for LTEQ in state 83 resolved as shift
WARNING: shift/reduce conflict for : in state 83 resolved as shift
WARNING: shift/reduce conflict for ' in state 88 resolved as shift
WARNING: shift/reduce conflict for + in state 88 resolved as shift
WARNING: shift/reduce conflict for - in state 88 resolved as shift
WARNING: shift/reduce conflict for DOTADD in state 88 resolved as shift
WARNING: shift/reduce conflict for DOTSUB in state 88 resolved as shift
WARNING: shift/reduce conflict for * in state 88 resolved as shift
WARNING: shift/reduce conflict for / in state 88 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 88 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 88 resolved as shift
WARNING: shift/reduce conflict for EQ in state 88 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 88 resolved as shift
WARNING: shift/reduce conflict for GT in state 88 resolved as shift
WARNING: shift/reduce conflict for LT in state 88 resolved as shift
WARNING: shift/reduce conflict for GTEQ in state 88 resolved as shift
WARNING: shift/reduce conflict for LTEQ in state 88 resolved as shift
WARNING: shift/reduce conflict for : in state 88 resolved as shift
WARNING: shift/reduce conflict for ' in state 106 resolved as shift
WARNING: shift/reduce conflict for + in state 106 resolved as shift
WARNING: shift/reduce conflict for - in state 106 resolved as shift
WARNING: shift/reduce conflict for DOTADD in state 106 resolved as shift
WARNING: shift/reduce conflict for DOTSUB in state 106 resolved as shift
WARNING: shift/reduce conflict for * in state 106 resolved as shift
WARNING: shift/reduce conflict for / in state 106 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 106 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 106 resolved as shift
WARNING: shift/reduce conflict for EQ in state 106 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 106 resolved as shift
WARNING: shift/reduce conflict for GT in state 106 resolved as shift
WARNING: shift/reduce conflict for LT in state 106 resolved as shift
WARNING: shift/reduce conflict for GTEQ in state 106 resolved as shift
WARNING: shift/reduce conflict for LTEQ in state 106 resolved as shift
WARNING: shift/reduce conflict for : in state 106 resolved as shift
WARNING: shift/reduce conflict for ' in state 107 resolved as shift
WARNING: shift/reduce conflict for + in state 107 resolved as shift
WARNING: shift/reduce conflict for - in state 107 resolved as shift
WARNING: shift/reduce conflict for DOTADD in state 107 resolved as shift
WARNING: shift/reduce conflict for DOTSUB in state 107 resolved as shift
WARNING: shift/reduce conflict for * in state 107 resolved as shift
WARNING: shift/reduce conflict for / in state 107 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 107 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 107 resolved as shift
WARNING: shift/reduce conflict for EQ in state 107 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 107 resolved as shift
WARNING: shift/reduce conflict for GT in state 107 resolved as shift
WARNING: shift/reduce conflict for LT in state 107 resolved as shift
WARNING: shift/reduce conflict for GTEQ in state 107 resolved as shift
WARNING: shift/reduce conflict for LTEQ in state 107 resolved as shift
WARNING: shift/reduce conflict for : in state 107 resolved as shift
WARNING: shift/reduce conflict for ' in state 108 resolved as shift
WARNING: shift/reduce conflict for + in state 108 resolved as shift
WARNING: shift/reduce conflict for - in state 108 resolved as shift
WARNING: shift/reduce conflict for DOTADD in state 108 resolved as shift
WARNING: shift/reduce conflict for DOTSUB in state 108 resolved as shift
WARNING: shift/reduce conflict for * in state 108 resolved as shift
WARNING: shift/reduce conflict for / in state 108 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 108 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 108 resolved as shift
WARNING: shift/reduce conflict for EQ in state 108 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 108 resolved as shift
WARNING: shift/reduce conflict for GT in state 108 resolved as shift
WARNING: shift/reduce conflict for LT in state 108 resolved as shift
WARNING: shift/reduce conflict for GTEQ in state 108 resolved as shift
WARNING: shift/reduce conflict for LTEQ in state 108 resolved as shift
WARNING: shift/reduce conflict for : in state 108 resolved as shift
WARNING: shift/reduce conflict for ' in state 109 resolved as shift
WARNING: shift/reduce conflict for + in state 109 resolved as shift
WARNING: shift/reduce conflict for - in state 109 resolved as shift
WARNING: shift/reduce conflict for DOTADD in state 109 resolved as shift
WARNING: shift/reduce conflict for DOTSUB in state 109 resolved as shift
WARNING: shift/reduce conflict for * in state 109 resolved as shift
WARNING: shift/reduce conflict for / in state 109 resolved as shift
WARNING: shift/reduce conflict for DOTMUL in state 109 resolved as shift
WARNING: shift/reduce conflict for DOTDIV in state 109 resolved as shift
WARNING: shift/reduce conflict for EQ in state 109 resolved as shift
WARNING: shift/reduce conflict for NOTEQ in state 109 resolved as shift
WARNING: shift/reduce conflict for GT in state 109 resolved as shift
WARNING: shift/reduce conflict for LT in state 109 resolved as shift
WARNING: shift/reduce conflict for GTEQ in state 109 resolved as shift
WARNING: shift/reduce conflict for LTEQ in state 109 resolved as shift
WARNING: shift/reduce conflict for : in state 109 resolved as shift
WARNING: shift/reduce conflict for - in state 119 resolved as shift
WARNING: shift/reduce conflict for ELSE in state 131 resolved as shift
WARNING: reduce/reduce conflict in state 53 resolved using rule (args -> ID)
WARNING: rejected rule (assignable -> ID) in state 53
